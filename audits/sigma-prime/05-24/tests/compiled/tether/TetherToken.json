{
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_upgradedAddress",
          "type": "address"
        }
      ],
      "name": "deprecate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "deprecated",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_evilUser",
          "type": "address"
        }
      ],
      "name": "addBlackList",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "upgradedAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "balances",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maximumFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_maker",
          "type": "address"
        }
      ],
      "name": "getBlackListStatus",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowed",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "who",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newBasisPoints",
          "type": "uint256"
        },
        {
          "name": "newMaxFee",
          "type": "uint256"
        }
      ],
      "name": "setParams",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "issue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "basisPointsRate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "isBlackListed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_clearedUser",
          "type": "address"
        }
      ],
      "name": "removeBlackList",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_UINT",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_blackListedUser",
          "type": "address"
        }
      ],
      "name": "destroyBlackFunds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_initialSupply",
          "type": "uint256"
        },
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Issue",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "Deprecate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "feeBasisPoints",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "maxFee",
          "type": "uint256"
        }
      ],
      "name": "Params",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_blackListedUser",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_balance",
          "type": "uint256"
        }
      ],
      "name": "DestroyedBlackFunds",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "AddedBlackList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "RemovedBlackList",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Pause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Unpause",
      "type": "event"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/TetherToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/TetherToken.sol",
    "exportedSymbols": {
      "BasicToken": [
        347
      ],
      "BlackList": [
        717
      ],
      "ERC20": [
        205
      ],
      "ERC20Basic": [
        169
      ],
      "Ownable": [
        139
      ],
      "Pausable": [
        603
      ],
      "SafeMath": [
        97
      ],
      "StandardToken": [
        546
      ],
      "TetherToken": [
        1142
      ],
      "UpgradedStandardToken": [
        749
      ]
    },
    "id": 1143,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title SafeMath\n@dev Math operations with safety checks that throw on error",
        "fullyImplemented": true,
        "id": 97,
        "linearizedBaseContracts": [
          97
        ],
        "name": "SafeMath",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 33,
              "nodeType": "Block",
              "src": "206:134:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 10,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "220:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 11,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "225:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "220:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 16,
                  "nodeType": "IfStatement",
                  "src": "216:45:0",
                  "trueBody": {
                    "id": 15,
                    "nodeType": "Block",
                    "src": "228:33:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "249:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 9,
                        "id": 14,
                        "nodeType": "Return",
                        "src": "242:8:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    18
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 34,
                      "src": "270:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 17,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "270:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 22,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 19,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "282:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 20,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "286:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "282:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "270:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 24,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "304:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 25,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "308:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "304:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 27,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5,
                          "src": "313:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "304:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1146,
                      "src": "297:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "297:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "297:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18,
                    "src": "332:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 9,
                  "id": 32,
                  "nodeType": "Return",
                  "src": "325:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 34,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "mul",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "152:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "152:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "163:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "163:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "151:22:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 34,
                  "src": "197:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "197:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "196:9:0"
            },
            "scope": 97,
            "src": "139:201:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "413:216:0",
              "statements": [
                {
                  "assignments": [
                    44
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 44,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 52,
                      "src": "501:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "501:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 48,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 45,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "513:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 46,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "517:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "513:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "501:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 49,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44,
                    "src": "621:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 42,
                  "id": 50,
                  "nodeType": "Return",
                  "src": "614:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 52,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "div",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "359:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "370:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "358:22:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "404:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "403:9:0"
            },
            "scope": 97,
            "src": "346:283:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "702:53:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 62,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "719:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 63,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "724:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "719:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 61,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1146,
                      "src": "712:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "712:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "712:14:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 67,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "743:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 68,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 56,
                      "src": "747:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "743:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 60,
                  "id": 70,
                  "nodeType": "Return",
                  "src": "736:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 72,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "sub",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "648:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "659:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "647:22:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "693:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "692:9:0"
            },
            "scope": 97,
            "src": "635:120:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "828:76:0",
              "statements": [
                {
                  "assignments": [
                    82
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 82,
                      "name": "c",
                      "nodeType": "VariableDeclaration",
                      "scope": 96,
                      "src": "838:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 81,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "838:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 86,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 83,
                      "name": "a",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74,
                      "src": "850:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 84,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 76,
                      "src": "854:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "850:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "838:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 88,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "872:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 89,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 74,
                          "src": "877:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "872:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 87,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1146,
                      "src": "865:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 91,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 92,
                  "nodeType": "ExpressionStatement",
                  "src": "865:14:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 93,
                    "name": "c",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 82,
                    "src": "896:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80,
                  "id": 94,
                  "nodeType": "Return",
                  "src": "889:8:0"
                }
              ]
            },
            "documentation": null,
            "id": 96,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "add",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "774:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "785:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "773:22:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "819:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "818:9:0"
            },
            "scope": 97,
            "src": "761:143:0",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 1143,
        "src": "116:790:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Ownable\n@dev The Ownable contract has an owner address, and provides basic authorization control\nfunctions, this simplifies the implementation of \"user permissions\".",
        "fullyImplemented": true,
        "id": 139,
        "linearizedBaseContracts": [
          139
        ],
        "name": "Ownable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 99,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 139,
            "src": "1121:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 98,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1121:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 107,
              "nodeType": "Block",
              "src": "1301:35:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 102,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99,
                      "src": "1311:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1157,
                        "src": "1319:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1319:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1311:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:18:0"
                }
              ]
            },
            "documentation": "@dev The Ownable constructor sets the original `owner` of the contract to the sender\naccount.",
            "id": 108,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "Ownable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1291:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:0:0"
            },
            "scope": 139,
            "src": "1275:61:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "1447:56:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 111,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1157,
                            "src": "1465:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1465:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 113,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99,
                          "src": "1479:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1465:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "1457:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1457:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1457:28:0"
                },
                {
                  "id": 117,
                  "nodeType": "PlaceholderStatement",
                  "src": "1495:1:0"
                }
              ]
            },
            "documentation": "@dev Throws if called by any account other than the owner.",
            "id": 119,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1444:2:0"
            },
            "src": "1426:77:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "1733:85:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 126,
                      "name": "newOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 121,
                      "src": "1747:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1767:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1759:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1759:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1747:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 136,
                  "nodeType": "IfStatement",
                  "src": "1743:69:0",
                  "trueBody": {
                    "id": 135,
                    "nodeType": "Block",
                    "src": "1771:41:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 131,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "1785:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 132,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 121,
                            "src": "1793:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1785:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 134,
                        "nodeType": "ExpressionStatement",
                        "src": "1785:16:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Allows the current owner to transfer control of the contract to a newOwner.\n@param newOwner The address to transfer ownership to.",
            "id": 138,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 124,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 123,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "1723:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1723:9:0"
              }
            ],
            "name": "transferOwnership",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "name": "newOwner",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "1698:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1697:18:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1733:0:0"
            },
            "scope": 139,
            "src": "1671:147:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1143,
        "src": "1098:723:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title ERC20Basic\n@dev Simpler version of ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
        "fullyImplemented": false,
        "id": 169,
        "linearizedBaseContracts": [
          169
        ],
        "name": "ERC20Basic",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 141,
            "name": "_totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 169,
            "src": "1976:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 140,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1976:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "id": 146,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2026:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "2054:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2054:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2053:6:0"
            },
            "scope": 169,
            "src": "2006:54:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "id": 153,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 148,
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "2084:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2084:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2083:13:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 153,
                  "src": "2122:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2122:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2121:6:0"
            },
            "scope": 169,
            "src": "2065:63:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "id": 160,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 155,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2151:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2151:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 157,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 160,
                  "src": "2163:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2163:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2150:24:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2181:0:0"
            },
            "scope": 169,
            "src": "2133:49:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 168,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "2202:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2202:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "2224:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2224:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "2244:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2244:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2201:54:0"
            },
            "src": "2187:69:0"
          }
        ],
        "scope": 1143,
        "src": "1950:308:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 170,
              "name": "ERC20Basic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 169,
              "src": "2367:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Basic_$169",
                "typeString": "contract ERC20Basic"
              }
            },
            "id": 171,
            "nodeType": "InheritanceSpecifier",
            "src": "2367:10:0"
          }
        ],
        "contractDependencies": [
          169
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20 interface\n@dev see https://github.com/ethereum/EIPs/issues/20",
        "fullyImplemented": false,
        "id": 205,
        "linearizedBaseContracts": [
          205,
          169
        ],
        "name": "ERC20",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 180,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "2403:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "2418:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2418:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2402:32:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "2460:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2460:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2459:6:0"
            },
            "scope": 205,
            "src": "2384:82:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "id": 189,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2493:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2493:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 184,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2507:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2507:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 186,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2519:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2519:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2492:38:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2537:0:0"
            },
            "scope": 205,
            "src": "2471:67:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "id": 196,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "2560:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2560:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 193,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "2577:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2577:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2559:29:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2595:0:0"
            },
            "scope": 205,
            "src": "2543:53:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 204,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 198,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "2616:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2616:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 200,
                  "indexed": true,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "2639:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2639:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 202,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "2664:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 201,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2664:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2615:60:0"
            },
            "src": "2601:75:0"
          }
        ],
        "scope": 1143,
        "src": "2349:329:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 206,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 139,
              "src": "2793:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$139",
                "typeString": "contract Ownable"
              }
            },
            "id": 207,
            "nodeType": "InheritanceSpecifier",
            "src": "2793:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 208,
              "name": "ERC20Basic",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 169,
              "src": "2802:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Basic_$169",
                "typeString": "contract ERC20Basic"
              }
            },
            "id": 209,
            "nodeType": "InheritanceSpecifier",
            "src": "2802:10:0"
          }
        ],
        "contractDependencies": [
          169,
          139
        ],
        "contractKind": "contract",
        "documentation": "@title Basic token\n@dev Basic version of StandardToken, with no allowances.",
        "fullyImplemented": false,
        "id": 347,
        "linearizedBaseContracts": [
          347,
          169,
          139
        ],
        "name": "BasicToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 212,
            "libraryName": {
              "contractScope": null,
              "id": 210,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 97,
              "src": "2825:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$97",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "2819:24:0",
            "typeName": {
              "id": 211,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "2838:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 216,
            "name": "balances",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "2849:40:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 215,
              "keyType": {
                "id": 213,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2857:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2849:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 214,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2868:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 219,
            "name": "basisPointsRate",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "2974:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 217,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "2974:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 218,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3004:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 222,
            "name": "maximumFee",
            "nodeType": "VariableDeclaration",
            "scope": 347,
            "src": "3011:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 220,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "3011:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 221,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3036:1:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "3146:66:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3164:29:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 227,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1157,
                                    "src": "3166:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 228,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "data",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3166:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3166:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 232,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 230,
                                  "name": "size",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 224,
                                  "src": "3184:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "34",
                                  "id": 231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3191:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_4_by_1",
                                    "typeString": "int_const 4"
                                  },
                                  "value": "4"
                                },
                                "src": "3184:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3166:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 234,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3165:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "3156:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3156:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "3156:38:0"
                },
                {
                  "id": 238,
                  "nodeType": "PlaceholderStatement",
                  "src": "3204:1:0"
                }
              ]
            },
            "documentation": "@dev Fix for the ERC20 short address attack.",
            "id": 240,
            "name": "onlyPayloadSize",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 224,
                  "name": "size",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "3135:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 223,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3134:11:0"
            },
            "src": "3110:102:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 333,
              "nodeType": "Block",
              "src": "3453:485:0",
              "statements": [
                {
                  "assignments": [
                    253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 253,
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 334,
                      "src": "3463:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 252,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3463:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 262,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3130303030",
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3508:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 256,
                                "name": "basisPointsRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 219,
                                "src": "3486:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 254,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 244,
                                "src": "3475:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34,
                              "src": "3475:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3475:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 258,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3474:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "3474:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3474:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3463:51:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 263,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 253,
                      "src": "3528:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 264,
                      "name": "maximumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "3534:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3528:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 271,
                  "nodeType": "IfStatement",
                  "src": "3524:63:0",
                  "trueBody": {
                    "id": 270,
                    "nodeType": "Block",
                    "src": "3546:41:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 266,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 253,
                            "src": "3560:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 267,
                            "name": "maximumFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "3566:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3560:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 269,
                        "nodeType": "ExpressionStatement",
                        "src": "3560:16:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    273
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 273,
                      "name": "sendAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 334,
                      "src": "3596:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 272,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3596:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 278,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 276,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "3625:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 274,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "3614:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "3614:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3614:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3596:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 279,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "3639:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 282,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 280,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1157,
                          "src": "3648:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3648:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3639:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 288,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 244,
                          "src": "3687:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 283,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "3662:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 286,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 284,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1157,
                              "src": "3671:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3671:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3662:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72,
                        "src": "3662:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3662:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3639:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "3639:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 292,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "3704:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 294,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 293,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "3713:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3704:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 299,
                          "name": "sendAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 273,
                          "src": "3738:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 295,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "3720:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 297,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 296,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "3729:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3720:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 96,
                        "src": "3720:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3720:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3704:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 302,
                  "nodeType": "ExpressionStatement",
                  "src": "3704:45:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 303,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 253,
                      "src": "3763:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3769:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3763:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 325,
                  "nodeType": "IfStatement",
                  "src": "3759:126:0",
                  "trueBody": {
                    "id": 324,
                    "nodeType": "Block",
                    "src": "3772:113:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 306,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "3786:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 308,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 307,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "3795:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3786:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 313,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 253,
                                "src": "3824:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 309,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 216,
                                  "src": "3804:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 311,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 310,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "3813:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3804:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 96,
                              "src": "3804:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3804:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3786:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 316,
                        "nodeType": "ExpressionStatement",
                        "src": "3786:42:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 318,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1157,
                                "src": "3851:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3851:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 320,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "3863:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 321,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 253,
                              "src": "3870:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 317,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "3842:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3842:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 323,
                        "nodeType": "ExpressionStatement",
                        "src": "3842:32:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 327,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1157,
                          "src": "3903:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3903:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 329,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 242,
                        "src": "3915:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 330,
                        "name": "sendAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "3920:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 326,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "3894:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3894:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "3894:37:0"
                }
              ]
            },
            "documentation": "@dev transfer token for a specified address\n@param _to The address to transfer to.\n@param _value The amount to be transferred.",
            "id": 334,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_64_by_1",
                      "typeString": "int_const 64"
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3445:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3332",
                      "id": 248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3449:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32_by_1",
                        "typeString": "int_const 32"
                      },
                      "value": "32"
                    },
                    "src": "3445:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_64_by_1",
                      "typeString": "int_const 64"
                    }
                  }
                ],
                "id": 250,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 246,
                  "name": "onlyPayloadSize",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 240,
                  "src": "3429:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3429:23:0"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 242,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "3396:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3396:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 334,
                  "src": "3409:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3409:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3395:26:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3453:0:0"
            },
            "scope": 347,
            "src": "3378:560:0",
            "stateMutability": "nonpayable",
            "superFunction": 160,
            "visibility": "public"
          },
          {
            "body": {
              "id": 345,
              "nodeType": "Block",
              "src": "4223:40:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 341,
                      "name": "balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 216,
                      "src": "4240:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 343,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 342,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 336,
                      "src": "4249:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4240:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 340,
                  "id": 344,
                  "nodeType": "Return",
                  "src": "4233:23:0"
                }
              ]
            },
            "documentation": "@dev Gets the balance of the specified address.\n@param _owner The address to query the the balance of.\n@return An uint representing the amount owned by the passed address.",
            "id": 346,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 336,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 346,
                  "src": "4168:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4168:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4167:16:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 339,
                  "name": "balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 346,
                  "src": "4209:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 338,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4209:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4208:14:0"
            },
            "scope": 347,
            "src": "4149:114:0",
            "stateMutability": "view",
            "superFunction": 153,
            "visibility": "public"
          }
        ],
        "scope": 1143,
        "src": "2770:1496:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 348,
              "name": "BasicToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 347,
              "src": "4560:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicToken_$347",
                "typeString": "contract BasicToken"
              }
            },
            "id": 349,
            "nodeType": "InheritanceSpecifier",
            "src": "4560:10:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 350,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 205,
              "src": "4572:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$205",
                "typeString": "contract ERC20"
              }
            },
            "id": 351,
            "nodeType": "InheritanceSpecifier",
            "src": "4572:5:0"
          }
        ],
        "contractDependencies": [
          169,
          205,
          139,
          347
        ],
        "contractKind": "contract",
        "documentation": "@title Standard ERC20 token\n * @dev Implementation of the basic standard token.\n@dev https://github.com/ethereum/EIPs/issues/20\n@dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol",
        "fullyImplemented": false,
        "id": 546,
        "linearizedBaseContracts": [
          546,
          205,
          347,
          169,
          139
        ],
        "name": "StandardToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 357,
            "name": "allowed",
            "nodeType": "VariableDeclaration",
            "scope": 546,
            "src": "4585:61:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 356,
              "keyType": {
                "id": 352,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4594:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "4585:46:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 355,
                "keyType": {
                  "id": 353,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4614:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "4605:25:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 354,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "4625:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 364,
            "name": "MAX_UINT",
            "nodeType": "VariableDeclaration",
            "scope": 546,
            "src": "4653:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 358,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "4653:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              },
              "id": 363,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "commonType": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                },
                "id": 361,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "argumentTypes": null,
                  "hexValue": "32",
                  "id": 359,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4685:1:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "BinaryOperation",
                "operator": "**",
                "rightExpression": {
                  "argumentTypes": null,
                  "hexValue": "323536",
                  "id": 360,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4688:3:0",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "256"
                },
                "src": "4685:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
                  "typeString": "int_const 1157...(70 digits omitted)...9936"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "argumentTypes": null,
                "hexValue": "31",
                "id": 362,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4694:1:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1_by_1",
                  "typeString": "int_const 1"
                },
                "value": "1"
              },
              "src": "4685:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
                "typeString": "int_const 1157...(70 digits omitted)...9935"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "5071:786:0",
              "statements": [
                {
                  "assignments": [
                    378
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 378,
                      "name": "_allowance",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "5081:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": null,
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 385,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 379,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "5098:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 381,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 380,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "5106:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5098:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 384,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 382,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1157,
                        "src": "5113:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5113:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5098:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5081:43:0"
                },
                {
                  "assignments": [
                    387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 387,
                      "name": "fee",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "5290:8:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 386,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5290:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 396,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "3130303030",
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5335:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "components": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 390,
                                "name": "basisPointsRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 219,
                                "src": "5313:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 388,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 370,
                                "src": "5302:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "mul",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 34,
                              "src": "5302:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5302:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 392,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5301:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52,
                      "src": "5301:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5301:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5290:51:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 397,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 387,
                      "src": "5355:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 398,
                      "name": "maximumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "5361:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5355:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 405,
                  "nodeType": "IfStatement",
                  "src": "5351:63:0",
                  "trueBody": {
                    "id": 404,
                    "nodeType": "Block",
                    "src": "5373:41:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 400,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "5387:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 401,
                            "name": "maximumFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 222,
                            "src": "5393:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5387:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 403,
                        "nodeType": "ExpressionStatement",
                        "src": "5387:16:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 406,
                      "name": "_allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "5427:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 407,
                      "name": "MAX_UINT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "5440:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5427:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 422,
                  "nodeType": "IfStatement",
                  "src": "5423:103:0",
                  "trueBody": {
                    "id": 421,
                    "nodeType": "Block",
                    "src": "5450:76:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 409,
                                "name": "allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 357,
                                "src": "5464:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 413,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 410,
                                "name": "_from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 366,
                                "src": "5472:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5464:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 414,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 411,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1157,
                                "src": "5479:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5479:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5464:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 417,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 370,
                                "src": "5508:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 415,
                                "name": "_allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 378,
                                "src": "5493:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sub",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 72,
                              "src": "5493:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5493:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5464:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 420,
                        "nodeType": "ExpressionStatement",
                        "src": "5464:51:0"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    424
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 424,
                      "name": "sendAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "5535:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 423,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5535:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 429,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 387,
                        "src": "5564:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 425,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 370,
                        "src": "5553:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 72,
                      "src": "5553:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5553:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5535:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 430,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "5578:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 432,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 431,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "5587:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5578:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 437,
                          "name": "_value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 370,
                          "src": "5616:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 433,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "5596:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 435,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 434,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 366,
                            "src": "5605:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5596:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 72,
                        "src": "5596:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5596:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5578:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "5578:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 441,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "5633:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 443,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 442,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "5642:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5633:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 448,
                          "name": "sendAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 424,
                          "src": "5667:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 444,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "5649:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 446,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 445,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "5658:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5649:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 96,
                        "src": "5649:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5649:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5633:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "5633:45:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 452,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 387,
                      "src": "5692:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5698:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5692:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 473,
                  "nodeType": "IfStatement",
                  "src": "5688:121:0",
                  "trueBody": {
                    "id": 472,
                    "nodeType": "Block",
                    "src": "5701:108:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 455,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "5715:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 457,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 456,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "5724:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5715:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 462,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 387,
                                "src": "5753:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 458,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 216,
                                  "src": "5733:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 460,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 459,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "5742:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5733:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 96,
                              "src": "5733:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5733:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5715:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 465,
                        "nodeType": "ExpressionStatement",
                        "src": "5715:42:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 467,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 366,
                              "src": "5780:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 468,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "5787:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 469,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 387,
                              "src": "5794:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 466,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 168,
                            "src": "5771:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5771:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 471,
                        "nodeType": "ExpressionStatement",
                        "src": "5771:27:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 475,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "5827:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 476,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "5834:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 477,
                        "name": "sendAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 424,
                        "src": "5839:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 474,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "5818:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5818:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "5818:32:0"
                }
              ]
            },
            "documentation": "@dev Transfer tokens from one address to another\n@param _from address The address which you want to send tokens from\n@param _to address The address which you want to transfer to\n@param _value uint the amount of tokens to be transferred",
            "id": 481,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_96_by_1",
                      "typeString": "int_const 96"
                    },
                    "id": 375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "33",
                      "id": 373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5063:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3332",
                      "id": 374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5067:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32_by_1",
                        "typeString": "int_const 32"
                      },
                      "value": "32"
                    },
                    "src": "5063:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_96_by_1",
                      "typeString": "int_const 96"
                    }
                  }
                ],
                "id": 376,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 372,
                  "name": "onlyPayloadSize",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 240,
                  "src": "5047:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5047:23:0"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 366,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "4999:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4999:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 368,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "5014:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5014:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 370,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "5027:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5027:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4998:41:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5071:0:0"
            },
            "scope": 546,
            "src": "4977:880:0",
            "stateMutability": "nonpayable",
            "superFunction": 189,
            "visibility": "public"
          },
          {
            "body": {
              "id": 528,
              "nodeType": "Block",
              "src": "6176:484:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6499:56:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 496,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 494,
                                      "name": "_value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 485,
                                      "src": "6502:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 495,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6512:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "6502:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 497,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6501:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 505,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 498,
                                          "name": "allowed",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 357,
                                          "src": "6519:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                            "typeString": "mapping(address => mapping(address => uint256))"
                                          }
                                        },
                                        "id": 501,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 499,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1157,
                                            "src": "6527:3:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 500,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": null,
                                          "src": "6527:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "6519:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 503,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 502,
                                        "name": "_spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 483,
                                        "src": "6539:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6519:29:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 504,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6552:1:0",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "6519:34:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 506,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6518:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6501:53:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 508,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6500:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "6491:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6491:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "6491:65:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 512,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 357,
                          "src": "6567:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 516,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 513,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1157,
                            "src": "6575:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6575:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6567:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 517,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 515,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "6587:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6567:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 518,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 485,
                      "src": "6599:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6567:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 520,
                  "nodeType": "ExpressionStatement",
                  "src": "6567:38:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 522,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1157,
                          "src": "6624:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6624:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 524,
                        "name": "_spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 483,
                        "src": "6636:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 525,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 485,
                        "src": "6646:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 521,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 204,
                      "src": "6615:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6615:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "6615:38:0"
                }
              ]
            },
            "documentation": "@dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n@param _spender The address which will spend the funds.\n@param _value The amount of tokens to be spent.",
            "id": 529,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_64_by_1",
                      "typeString": "int_const 64"
                    },
                    "id": 490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6168:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3332",
                      "id": 489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6172:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32_by_1",
                        "typeString": "int_const 32"
                      },
                      "value": "32"
                    },
                    "src": "6168:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_64_by_1",
                      "typeString": "int_const 64"
                    }
                  }
                ],
                "id": 491,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 487,
                  "name": "onlyPayloadSize",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 240,
                  "src": "6152:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6152:23:0"
              }
            ],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 483,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "6114:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6114:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 485,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 529,
                  "src": "6132:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 484,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6132:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6113:31:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6176:0:0"
            },
            "scope": 546,
            "src": "6097:563:0",
            "stateMutability": "nonpayable",
            "superFunction": 196,
            "visibility": "public"
          },
          {
            "body": {
              "id": 544,
              "nodeType": "Block",
              "src": "7079:49:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 538,
                        "name": "allowed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "7096:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 540,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 539,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 531,
                        "src": "7104:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7096:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 542,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 541,
                      "name": "_spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 533,
                      "src": "7112:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7096:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 537,
                  "id": 543,
                  "nodeType": "Return",
                  "src": "7089:32:0"
                }
              ]
            },
            "documentation": "@dev Function to check the amount of tokens than an owner allowed to a spender.\n@param _owner address The address which owns the funds.\n@param _spender address The address which will spend the funds.\n@return A uint specifying the amount of tokens still available for the spender.",
            "id": 545,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 531,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "7004:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 530,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7004:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 533,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "7020:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7020:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7003:34:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 536,
                  "name": "remaining",
                  "nodeType": "VariableDeclaration",
                  "scope": 545,
                  "src": "7063:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7063:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7062:16:0"
            },
            "scope": 546,
            "src": "6985:143:0",
            "stateMutability": "view",
            "superFunction": 180,
            "visibility": "public"
          }
        ],
        "scope": 1143,
        "src": "4534:2597:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 547,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 139,
              "src": "7268:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$139",
                "typeString": "contract Ownable"
              }
            },
            "id": 548,
            "nodeType": "InheritanceSpecifier",
            "src": "7268:7:0"
          }
        ],
        "contractDependencies": [
          139
        ],
        "contractKind": "contract",
        "documentation": "@title Pausable\n@dev Base contract which allows children to implement an emergency stop mechanism.",
        "fullyImplemented": true,
        "id": 603,
        "linearizedBaseContracts": [
          603,
          139
        ],
        "name": "Pausable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 550,
            "name": "Pause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7291:2:0"
            },
            "src": "7280:14:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 552,
            "name": "Unpause",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7310:2:0"
            },
            "src": "7297:16:0"
          },
          {
            "constant": false,
            "id": 555,
            "name": "paused",
            "nodeType": "VariableDeclaration",
            "scope": 603,
            "src": "7317:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 553,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "7317:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 554,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7338:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 563,
              "nodeType": "Block",
              "src": "7471:34:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7485:7:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 558,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 555,
                          "src": "7486:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 557,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "7477:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7477:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "7477:16:0"
                },
                {
                  "id": 562,
                  "nodeType": "PlaceholderStatement",
                  "src": "7499:1:0"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
            "id": 564,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7468:2:0"
            },
            "src": "7446:59:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 571,
              "nodeType": "Block",
              "src": "7624:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 567,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 555,
                        "src": "7638:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 566,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "7630:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7630:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 569,
                  "nodeType": "ExpressionStatement",
                  "src": "7630:15:0"
                },
                {
                  "id": 570,
                  "nodeType": "PlaceholderStatement",
                  "src": "7651:1:0"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
            "id": 572,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7621:2:0"
            },
            "src": "7602:55:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 586,
              "nodeType": "Block",
              "src": "7784:37:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 579,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 555,
                      "src": "7790:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7799:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7790:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "7790:13:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 583,
                      "name": "Pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "7809:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7809:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 585,
                  "nodeType": "ExpressionStatement",
                  "src": "7809:7:0"
                }
              ]
            },
            "documentation": "@dev called by the owner to pause, triggers stopped state",
            "id": 587,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 575,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 574,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "7753:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7753:9:0"
              },
              {
                "arguments": null,
                "id": 577,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 576,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 564,
                  "src": "7763:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7763:13:0"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7750:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7784:0:0"
            },
            "scope": 603,
            "src": "7736:85:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 601,
              "nodeType": "Block",
              "src": "7950:40:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 594,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 555,
                      "src": "7956:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7965:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7956:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "7956:14:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 598,
                      "name": "Unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 552,
                      "src": "7976:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7976:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 600,
                  "nodeType": "ExpressionStatement",
                  "src": "7976:9:0"
                }
              ]
            },
            "documentation": "@dev called by the owner to unpause, returns to normal state",
            "id": 602,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 590,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 589,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "7922:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7922:9:0"
              },
              {
                "arguments": null,
                "id": 592,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 591,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 572,
                  "src": "7932:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7932:10:0"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7919:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7950:0:0"
            },
            "scope": 603,
            "src": "7903:87:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1143,
        "src": "7247:745:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 604,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 139,
              "src": "8016:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$139",
                "typeString": "contract Ownable"
              }
            },
            "id": 605,
            "nodeType": "InheritanceSpecifier",
            "src": "8016:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 606,
              "name": "BasicToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 347,
              "src": "8025:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasicToken_$347",
                "typeString": "contract BasicToken"
              }
            },
            "id": 607,
            "nodeType": "InheritanceSpecifier",
            "src": "8025:10:0"
          }
        ],
        "contractDependencies": [
          169,
          139,
          347
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 717,
        "linearizedBaseContracts": [
          717,
          347,
          169,
          139
        ],
        "name": "BlackList",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 618,
              "nodeType": "Block",
              "src": "8239:45:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 614,
                      "name": "isBlackListed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 631,
                      "src": "8256:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 616,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 615,
                      "name": "_maker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 609,
                      "src": "8270:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8256:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 613,
                  "id": 617,
                  "nodeType": "Return",
                  "src": "8249:28:0"
                }
              ]
            },
            "documentation": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////",
            "id": 619,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getBlackListStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 609,
                  "name": "_maker",
                  "nodeType": "VariableDeclaration",
                  "scope": 619,
                  "src": "8190:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 608,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8190:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8189:16:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 613,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 612,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 619,
                  "src": "8233:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 611,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8233:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8232:6:0"
            },
            "scope": 717,
            "src": "8162:122:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 626,
              "nodeType": "Block",
              "src": "8346:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 624,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 99,
                    "src": "8363:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 623,
                  "id": 625,
                  "nodeType": "Return",
                  "src": "8356:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 627,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8307:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 622,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 627,
                  "src": "8337:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8337:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8336:9:0"
            },
            "scope": 717,
            "src": "8290:85:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "constant": false,
            "id": 631,
            "name": "isBlackListed",
            "nodeType": "VariableDeclaration",
            "scope": 717,
            "src": "8381:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 630,
              "keyType": {
                "id": 628,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "8390:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "8381:25:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 629,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "8401:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 648,
              "nodeType": "Block",
              "src": "8497:83:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 638,
                        "name": "isBlackListed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "8507:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 640,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 639,
                        "name": "_evilUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "8521:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8507:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8534:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "8507:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 643,
                  "nodeType": "ExpressionStatement",
                  "src": "8507:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 645,
                        "name": "_evilUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "8563:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 644,
                      "name": "AddedBlackList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 712,
                      "src": "8548:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8548:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 647,
                  "nodeType": "ExpressionStatement",
                  "src": "8548:25:0"
                }
              ]
            },
            "documentation": null,
            "id": 649,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 636,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 635,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "8487:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8487:9:0"
              }
            ],
            "name": "addBlackList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 633,
                  "name": "_evilUser",
                  "nodeType": "VariableDeclaration",
                  "scope": 649,
                  "src": "8461:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8461:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8460:19:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8497:0:0"
            },
            "scope": 717,
            "src": "8438:142:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 666,
              "nodeType": "Block",
              "src": "8651:92:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 656,
                        "name": "isBlackListed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 631,
                        "src": "8661:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 658,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 657,
                        "name": "_clearedUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "8675:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8661:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8691:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "8661:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 661,
                  "nodeType": "ExpressionStatement",
                  "src": "8661:35:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 663,
                        "name": "_clearedUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 651,
                        "src": "8723:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 662,
                      "name": "RemovedBlackList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 716,
                      "src": "8706:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8706:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 665,
                  "nodeType": "ExpressionStatement",
                  "src": "8706:30:0"
                }
              ]
            },
            "documentation": null,
            "id": 667,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 654,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 653,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "8641:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8641:9:0"
              }
            ],
            "name": "removeBlackList",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 651,
                  "name": "_clearedUser",
                  "nodeType": "VariableDeclaration",
                  "scope": 667,
                  "src": "8612:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8612:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8611:22:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8651:0:0"
            },
            "scope": 717,
            "src": "8586:157:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 701,
              "nodeType": "Block",
              "src": "8820:247:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 675,
                          "name": "isBlackListed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 631,
                          "src": "8838:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 677,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 676,
                          "name": "_blackListedUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 669,
                          "src": "8852:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8838:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 674,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "8830:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8830:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "8830:40:0"
                },
                {
                  "assignments": [
                    681
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 681,
                      "name": "dirtyFunds",
                      "nodeType": "VariableDeclaration",
                      "scope": 702,
                      "src": "8880:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 680,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8880:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 685,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 683,
                        "name": "_blackListedUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "8908:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 682,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        346
                      ],
                      "referencedDeclaration": 346,
                      "src": "8898:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8898:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8880:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 686,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "8935:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 688,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 687,
                        "name": "_blackListedUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "8944:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8935:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8964:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8935:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "8935:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 692,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "8975:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 693,
                      "name": "dirtyFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 681,
                      "src": "8991:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8975:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 695,
                  "nodeType": "ExpressionStatement",
                  "src": "8975:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 697,
                        "name": "_blackListedUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 669,
                        "src": "9031:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 698,
                        "name": "dirtyFunds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "9049:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 696,
                      "name": "DestroyedBlackFunds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 708,
                      "src": "9011:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9011:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 700,
                  "nodeType": "ExpressionStatement",
                  "src": "9011:49:0"
                }
              ]
            },
            "documentation": null,
            "id": 702,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 672,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 671,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "8810:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8810:9:0"
              }
            ],
            "name": "destroyBlackFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 669,
                  "name": "_blackListedUser",
                  "nodeType": "VariableDeclaration",
                  "scope": 702,
                  "src": "8777:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 668,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8777:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8776:26:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8820:0:0"
            },
            "scope": 717,
            "src": "8749:318:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 708,
            "name": "DestroyedBlackFunds",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 704,
                  "indexed": false,
                  "name": "_blackListedUser",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "9099:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9099:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 706,
                  "indexed": false,
                  "name": "_balance",
                  "nodeType": "VariableDeclaration",
                  "scope": 708,
                  "src": "9125:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 705,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9125:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9098:41:0"
            },
            "src": "9073:67:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 712,
            "name": "AddedBlackList",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 710,
                  "indexed": false,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 712,
                  "src": "9167:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9167:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9166:15:0"
            },
            "src": "9146:36:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 716,
            "name": "RemovedBlackList",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 714,
                  "indexed": false,
                  "name": "_user",
                  "nodeType": "VariableDeclaration",
                  "scope": 716,
                  "src": "9211:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9211:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9210:15:0"
            },
            "src": "9188:38:0"
          }
        ],
        "scope": 1143,
        "src": "7994:1235:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 718,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 546,
              "src": "9265:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$546",
                "typeString": "contract StandardToken"
              }
            },
            "id": 719,
            "nodeType": "InheritanceSpecifier",
            "src": "9265:13:0"
          }
        ],
        "contractDependencies": [
          169,
          205,
          139,
          347,
          546
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 749,
        "linearizedBaseContracts": [
          749,
          546,
          205,
          347,
          169,
          139
        ],
        "name": "UpgradedStandardToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 728,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferByLegacy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 721,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "9431:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 720,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9431:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 723,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "9445:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 722,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9445:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 725,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "9457:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 724,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9457:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9430:38:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9475:0:0"
            },
            "scope": 749,
            "src": "9405:71:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "id": 739,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferFromByLegacy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 730,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "9511:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9511:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 732,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "9527:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9527:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 734,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "9541:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9541:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 736,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 739,
                  "src": "9558:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 735,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9558:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9510:59:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 738,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9576:0:0"
            },
            "scope": 749,
            "src": "9481:96:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "id": 748,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "approveByLegacy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 741,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "9607:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9607:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 743,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "9621:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9621:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 745,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 748,
                  "src": "9638:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9638:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9606:43:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9656:0:0"
            },
            "scope": 749,
            "src": "9582:75:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1143,
        "src": "9231:428:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 750,
              "name": "Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 603,
              "src": "9685:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pausable_$603",
                "typeString": "contract Pausable"
              }
            },
            "id": 751,
            "nodeType": "InheritanceSpecifier",
            "src": "9685:8:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 752,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 546,
              "src": "9695:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$546",
                "typeString": "contract StandardToken"
              }
            },
            "id": 753,
            "nodeType": "InheritanceSpecifier",
            "src": "9695:13:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 754,
              "name": "BlackList",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 717,
              "src": "9710:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BlackList_$717",
                "typeString": "contract BlackList"
              }
            },
            "id": 755,
            "nodeType": "InheritanceSpecifier",
            "src": "9710:9:0"
          }
        ],
        "contractDependencies": [
          169,
          205,
          139,
          347,
          546,
          603,
          717
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1142,
        "linearizedBaseContracts": [
          1142,
          717,
          546,
          205,
          347,
          169,
          603,
          139
        ],
        "name": "TetherToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 757,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 1142,
            "src": "9727:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 756,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "9727:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 759,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 1142,
            "src": "9751:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 758,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "9751:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 761,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 1142,
            "src": "9777:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 760,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "9777:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 763,
            "name": "upgradedAddress",
            "nodeType": "VariableDeclaration",
            "scope": 1142,
            "src": "9803:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 762,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "9803:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 765,
            "name": "deprecated",
            "nodeType": "VariableDeclaration",
            "scope": 1142,
            "src": "9839:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 764,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "9839:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 802,
              "nodeType": "Block",
              "src": "10251:194:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 776,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "10261:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 777,
                      "name": "_initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 767,
                      "src": "10276:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10261:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 779,
                  "nodeType": "ExpressionStatement",
                  "src": "10261:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 780,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 757,
                      "src": "10300:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 781,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 769,
                      "src": "10307:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "10300:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 783,
                  "nodeType": "ExpressionStatement",
                  "src": "10300:12:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 784,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 759,
                      "src": "10322:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 785,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 771,
                      "src": "10331:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "10322:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 787,
                  "nodeType": "ExpressionStatement",
                  "src": "10322:16:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 788,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "10348:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 789,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 773,
                      "src": "10359:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10348:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 791,
                  "nodeType": "ExpressionStatement",
                  "src": "10348:20:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 792,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "10378:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 794,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 793,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "10387:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10378:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 795,
                      "name": "_initialSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 767,
                      "src": "10396:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10378:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 797,
                  "nodeType": "ExpressionStatement",
                  "src": "10378:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 798,
                      "name": "deprecated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "10420:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10433:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "10420:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 801,
                  "nodeType": "ExpressionStatement",
                  "src": "10420:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 803,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "TetherToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 767,
                  "name": "_initialSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "10177:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 766,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10177:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 769,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "10198:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 768,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10198:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 771,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "10212:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 770,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10212:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 773,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "10228:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 772,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10228:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10176:67:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10251:0:0"
            },
            "scope": 1142,
            "src": "10156:289:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 840,
              "nodeType": "Block",
              "src": "10592:254:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10610:26:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 813,
                            "name": "isBlackListed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 631,
                            "src": "10611:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 816,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 814,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1157,
                              "src": "10625:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10625:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10611:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "10602:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10602:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 819,
                  "nodeType": "ExpressionStatement",
                  "src": "10602:35:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 820,
                    "name": "deprecated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 765,
                    "src": "10651:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 838,
                    "nodeType": "Block",
                    "src": "10781:59:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 834,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 805,
                              "src": "10817:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 835,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "10822:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 832,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1189,
                              "src": "10802:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_TetherToken_$1142",
                                "typeString": "contract super TetherToken"
                              }
                            },
                            "id": 833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 334,
                            "src": "10802:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 836,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10802:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "functionReturnParameters": 811,
                        "id": 837,
                        "nodeType": "Return",
                        "src": "10795:34:0"
                      }
                    ]
                  },
                  "id": 839,
                  "nodeType": "IfStatement",
                  "src": "10647:193:0",
                  "trueBody": {
                    "id": 831,
                    "nodeType": "Block",
                    "src": "10663:112:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 825,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1157,
                                "src": "10740:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "10740:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 827,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 805,
                              "src": "10752:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 828,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "10757:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 822,
                                  "name": "upgradedAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 763,
                                  "src": "10706:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 821,
                                "name": "UpgradedStandardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 749,
                                "src": "10684:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
                                  "typeString": "type(contract UpgradedStandardToken)"
                                }
                              },
                              "id": 823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10684:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
                                "typeString": "contract UpgradedStandardToken"
                              }
                            },
                            "id": 824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferByLegacy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 728,
                            "src": "10684:55:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10684:80:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "functionReturnParameters": 811,
                        "id": 830,
                        "nodeType": "Return",
                        "src": "10677:87:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 841,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 810,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 809,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 564,
                  "src": "10578:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10578:13:0"
              }
            ],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 805,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "10545:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10545:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 807,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "10558:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 806,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10558:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10544:26:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10592:0:0"
            },
            "scope": 1142,
            "src": "10527:319:0",
            "stateMutability": "nonpayable",
            "superFunction": 334,
            "visibility": "public"
          },
          {
            "body": {
              "id": 881,
              "nodeType": "Block",
              "src": "11012:271:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "11030:21:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 853,
                            "name": "isBlackListed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 631,
                            "src": "11031:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 855,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 854,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 843,
                            "src": "11045:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11031:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 852,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "11022:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11022:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 858,
                  "nodeType": "ExpressionStatement",
                  "src": "11022:30:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 859,
                    "name": "deprecated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 765,
                    "src": "11066:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 879,
                    "nodeType": "Block",
                    "src": "11207:70:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 874,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "11247:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 875,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 845,
                              "src": "11254:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 876,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "11259:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 872,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1189,
                              "src": "11228:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_TetherToken_$1142",
                                "typeString": "contract super TetherToken"
                              }
                            },
                            "id": 873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 481,
                            "src": "11228:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11228:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "functionReturnParameters": 851,
                        "id": 878,
                        "nodeType": "Return",
                        "src": "11221:45:0"
                      }
                    ]
                  },
                  "id": 880,
                  "nodeType": "IfStatement",
                  "src": "11062:215:0",
                  "trueBody": {
                    "id": 871,
                    "nodeType": "Block",
                    "src": "11078:123:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 864,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1157,
                                "src": "11159:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 865,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "11159:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 866,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "11171:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 867,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 845,
                              "src": "11178:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 868,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "11183:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 861,
                                  "name": "upgradedAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 763,
                                  "src": "11121:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 860,
                                "name": "UpgradedStandardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 749,
                                "src": "11099:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
                                  "typeString": "type(contract UpgradedStandardToken)"
                                }
                              },
                              "id": 862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11099:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
                                "typeString": "contract UpgradedStandardToken"
                              }
                            },
                            "id": 863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFromByLegacy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 739,
                            "src": "11099:59:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256) external"
                            }
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11099:91:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "functionReturnParameters": 851,
                        "id": 870,
                        "nodeType": "Return",
                        "src": "11092:98:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 882,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 850,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 849,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 564,
                  "src": "10998:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "10998:13:0"
              }
            ],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 843,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "10950:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10950:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 845,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "10965:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10965:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 847,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "10978:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 846,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "10978:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10949:41:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 851,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11012:0:0"
            },
            "scope": 1142,
            "src": "10928:355:0",
            "stateMutability": "nonpayable",
            "superFunction": 481,
            "visibility": "public"
          },
          {
            "body": {
              "id": 905,
              "nodeType": "Block",
              "src": "11428:175:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 889,
                    "name": "deprecated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 765,
                    "src": "11442:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 903,
                    "nodeType": "Block",
                    "src": "11545:52:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 900,
                              "name": "who",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 884,
                              "src": "11582:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 898,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1189,
                              "src": "11566:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_TetherToken_$1142",
                                "typeString": "contract super TetherToken"
                              }
                            },
                            "id": 899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 346,
                            "src": "11566:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11566:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 888,
                        "id": 902,
                        "nodeType": "Return",
                        "src": "11559:27:0"
                      }
                    ]
                  },
                  "id": 904,
                  "nodeType": "IfStatement",
                  "src": "11438:159:0",
                  "trueBody": {
                    "id": 897,
                    "nodeType": "Block",
                    "src": "11454:85:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 894,
                              "name": "who",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 884,
                              "src": "11524:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 891,
                                  "name": "upgradedAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 763,
                                  "src": "11497:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 890,
                                "name": "UpgradedStandardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 749,
                                "src": "11475:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
                                  "typeString": "type(contract UpgradedStandardToken)"
                                }
                              },
                              "id": 892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11475:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
                                "typeString": "contract UpgradedStandardToken"
                              }
                            },
                            "id": 893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 346,
                            "src": "11475:48:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11475:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 888,
                        "id": 896,
                        "nodeType": "Return",
                        "src": "11468:60:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 906,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 884,
                  "name": "who",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "11384:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11384:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11383:13:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 887,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 906,
                  "src": "11422:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11422:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11421:6:0"
            },
            "scope": 1142,
            "src": "11365:238:0",
            "stateMutability": "view",
            "superFunction": 346,
            "visibility": "public"
          },
          {
            "body": {
              "id": 938,
              "nodeType": "Block",
              "src": "11764:217:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 918,
                    "name": "deprecated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 765,
                    "src": "11778:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 936,
                    "nodeType": "Block",
                    "src": "11912:63:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 932,
                              "name": "_spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "11947:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 933,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 910,
                              "src": "11957:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 930,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1189,
                              "src": "11933:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_TetherToken_$1142",
                                "typeString": "contract super TetherToken"
                              }
                            },
                            "id": 931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 529,
                            "src": "11933:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11933:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "functionReturnParameters": 917,
                        "id": 935,
                        "nodeType": "Return",
                        "src": "11926:38:0"
                      }
                    ]
                  },
                  "id": 937,
                  "nodeType": "IfStatement",
                  "src": "11774:201:0",
                  "trueBody": {
                    "id": 929,
                    "nodeType": "Block",
                    "src": "11790:116:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 923,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1157,
                                "src": "11866:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "11866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 925,
                              "name": "_spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "11878:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 926,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 910,
                              "src": "11888:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 920,
                                  "name": "upgradedAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 763,
                                  "src": "11833:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 919,
                                "name": "UpgradedStandardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 749,
                                "src": "11811:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_UpgradedStandardToken_$749_$",
                                  "typeString": "type(contract UpgradedStandardToken)"
                                }
                              },
                              "id": 921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11811:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_UpgradedStandardToken_$749",
                                "typeString": "contract UpgradedStandardToken"
                              }
                            },
                            "id": 922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approveByLegacy",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 748,
                            "src": "11811:54:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11811:84:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "functionReturnParameters": 917,
                        "id": 928,
                        "nodeType": "Return",
                        "src": "11804:91:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 939,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_64_by_1",
                      "typeString": "int_const 64"
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11756:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3332",
                      "id": 914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11760:2:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32_by_1",
                        "typeString": "int_const 32"
                      },
                      "value": "32"
                    },
                    "src": "11756:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_64_by_1",
                      "typeString": "int_const 64"
                    }
                  }
                ],
                "id": 916,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 912,
                  "name": "onlyPayloadSize",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 240,
                  "src": "11740:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "11740:23:0"
              }
            ],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 908,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "11702:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11702:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 910,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 939,
                  "src": "11720:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 909,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "11720:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11701:31:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11764:0:0"
            },
            "scope": 1142,
            "src": "11685:296:0",
            "stateMutability": "nonpayable",
            "superFunction": 529,
            "visibility": "public"
          },
          {
            "body": {
              "id": 966,
              "nodeType": "Block",
              "src": "12157:193:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 948,
                    "name": "deprecated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 765,
                    "src": "12171:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 964,
                    "nodeType": "Block",
                    "src": "12279:65:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 960,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 941,
                              "src": "12316:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 961,
                              "name": "_spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 943,
                              "src": "12324:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 958,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1189,
                              "src": "12300:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_TetherToken_$1142",
                                "typeString": "contract super TetherToken"
                              }
                            },
                            "id": 959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 545,
                            "src": "12300:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12300:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 947,
                        "id": 963,
                        "nodeType": "Return",
                        "src": "12293:40:0"
                      }
                    ]
                  },
                  "id": 965,
                  "nodeType": "IfStatement",
                  "src": "12167:177:0",
                  "trueBody": {
                    "id": 957,
                    "nodeType": "Block",
                    "src": "12183:90:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 953,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 941,
                              "src": "12245:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 954,
                              "name": "_spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 943,
                              "src": "12253:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 950,
                                  "name": "upgradedAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 763,
                                  "src": "12218:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 949,
                                "name": "StandardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 546,
                                "src": "12204:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StandardToken_$546_$",
                                  "typeString": "type(contract StandardToken)"
                                }
                              },
                              "id": 951,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12204:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StandardToken_$546",
                                "typeString": "contract StandardToken"
                              }
                            },
                            "id": 952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 545,
                            "src": "12204:40:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12204:58:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 947,
                        "id": 956,
                        "nodeType": "Return",
                        "src": "12197:65:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 967,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "allowance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 941,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "12082:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12082:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 943,
                  "name": "_spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "12098:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 942,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12098:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12081:34:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 946,
                  "name": "remaining",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "12141:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 945,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12141:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12140:16:0"
            },
            "scope": 1142,
            "src": "12063:287:0",
            "stateMutability": "view",
            "superFunction": 545,
            "visibility": "public"
          },
          {
            "body": {
              "id": 986,
              "nodeType": "Block",
              "src": "12475:115:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 974,
                      "name": "deprecated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 765,
                      "src": "12485:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12498:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12485:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 977,
                  "nodeType": "ExpressionStatement",
                  "src": "12485:17:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 978,
                      "name": "upgradedAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 763,
                      "src": "12512:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 979,
                      "name": "_upgradedAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "12530:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12512:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 981,
                  "nodeType": "ExpressionStatement",
                  "src": "12512:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 983,
                        "name": "_upgradedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "12566:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 982,
                      "name": "Deprecate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1135,
                      "src": "12556:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12556:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 985,
                  "nodeType": "ExpressionStatement",
                  "src": "12556:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 987,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 972,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 971,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "12465:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12465:9:0"
              }
            ],
            "name": "deprecate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 969,
                  "name": "_upgradedAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 987,
                  "src": "12432:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12432:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12431:26:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12475:0:0"
            },
            "scope": 1142,
            "src": "12413:177:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1004,
              "nodeType": "Block",
              "src": "12707:158:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 992,
                    "name": "deprecated",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 765,
                    "src": "12721:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1002,
                    "nodeType": "Block",
                    "src": "12815:44:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1000,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "12836:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 991,
                        "id": 1001,
                        "nodeType": "Return",
                        "src": "12829:19:0"
                      }
                    ]
                  },
                  "id": 1003,
                  "nodeType": "IfStatement",
                  "src": "12717:142:0",
                  "trueBody": {
                    "id": 999,
                    "nodeType": "Block",
                    "src": "12733:76:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 994,
                                  "name": "upgradedAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 763,
                                  "src": "12768:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 993,
                                "name": "StandardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 546,
                                "src": "12754:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_StandardToken_$546_$",
                                  "typeString": "type(contract StandardToken)"
                                }
                              },
                              "id": 995,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12754:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StandardToken_$546",
                                "typeString": "contract StandardToken"
                              }
                            },
                            "id": 996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "totalSupply",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 146,
                            "src": "12754:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12754:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 991,
                        "id": 998,
                        "nodeType": "Return",
                        "src": "12747:51:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1005,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12673:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 991,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 990,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "12701:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 989,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "12701:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12700:6:0"
            },
            "scope": 1142,
            "src": "12653:212:0",
            "stateMutability": "view",
            "superFunction": 146,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1046,
              "nodeType": "Block",
              "src": "13068:214:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1013,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "13086:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1014,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1007,
                            "src": "13101:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13086:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1016,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "13110:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13086:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1012,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "13078:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13078:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1019,
                  "nodeType": "ExpressionStatement",
                  "src": "13078:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1021,
                              "name": "balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "13141:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1023,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1022,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 99,
                              "src": "13150:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13141:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1024,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1007,
                            "src": "13159:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13141:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1026,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "13168:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1028,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1027,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "13177:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13168:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13141:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1020,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "13133:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13133:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1031,
                  "nodeType": "ExpressionStatement",
                  "src": "13133:51:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1032,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "13195:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1034,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1033,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "13204:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13195:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1035,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "13214:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13195:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1037,
                  "nodeType": "ExpressionStatement",
                  "src": "13195:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1038,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "13230:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1039,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1007,
                      "src": "13246:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13230:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1041,
                  "nodeType": "ExpressionStatement",
                  "src": "13230:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1043,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1007,
                        "src": "13268:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1042,
                      "name": "Issue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1127,
                      "src": "13262:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13262:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "13262:13:0"
                }
              ]
            },
            "documentation": null,
            "id": 1047,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1010,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1009,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "13058:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13058:9:0"
              }
            ],
            "name": "issue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1007,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1047,
                  "src": "13038:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13038:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13037:13:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13068:0:0"
            },
            "scope": 1142,
            "src": "13023:259:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1082,
              "nodeType": "Block",
              "src": "13552:184:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1055,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "13570:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1056,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1049,
                          "src": "13586:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13570:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1054,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "13562:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13562:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1059,
                  "nodeType": "ExpressionStatement",
                  "src": "13562:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1061,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "13611:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1063,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1062,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99,
                            "src": "13620:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13611:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1064,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1049,
                          "src": "13630:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13611:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1060,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "13603:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13603:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1067,
                  "nodeType": "ExpressionStatement",
                  "src": "13603:34:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1068,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "13648:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1069,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1049,
                      "src": "13664:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13648:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1071,
                  "nodeType": "ExpressionStatement",
                  "src": "13648:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1072,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "13680:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1074,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1073,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "13689:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13680:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1075,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1049,
                      "src": "13699:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13680:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1077,
                  "nodeType": "ExpressionStatement",
                  "src": "13680:25:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1079,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1049,
                        "src": "13722:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1078,
                      "name": "Redeem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1131,
                      "src": "13715:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13715:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1081,
                  "nodeType": "ExpressionStatement",
                  "src": "13715:14:0"
                }
              ]
            },
            "documentation": null,
            "id": 1083,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1052,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1051,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "13542:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13542:9:0"
              }
            ],
            "name": "redeem",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1049,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1083,
                  "src": "13522:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1048,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13522:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13521:13:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 1053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13552:0:0"
            },
            "scope": 1142,
            "src": "13506:230:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1122,
              "nodeType": "Block",
              "src": "13815:305:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1093,
                          "name": "newBasisPoints",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1085,
                          "src": "13921:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3230",
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13938:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_20_by_1",
                            "typeString": "int_const 20"
                          },
                          "value": "20"
                        },
                        "src": "13921:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1092,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "13913:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13913:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1097,
                  "nodeType": "ExpressionStatement",
                  "src": "13913:28:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1099,
                          "name": "newMaxFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1087,
                          "src": "13959:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3530",
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13971:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        "src": "13959:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1098,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1160,
                        1161
                      ],
                      "referencedDeclaration": 1160,
                      "src": "13951:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13951:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1103,
                  "nodeType": "ExpressionStatement",
                  "src": "13951:23:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1104,
                      "name": "basisPointsRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "13985:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1105,
                      "name": "newBasisPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1085,
                      "src": "14003:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13985:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1107,
                  "nodeType": "ExpressionStatement",
                  "src": "13985:32:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1108,
                      "name": "maximumFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "14027:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "3130",
                            "id": 1111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14054:2:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1112,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "14058:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14054:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1109,
                          "name": "newMaxFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1087,
                          "src": "14040:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34,
                        "src": "14040:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14040:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14027:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1116,
                  "nodeType": "ExpressionStatement",
                  "src": "14027:40:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1118,
                        "name": "basisPointsRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "14085:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1119,
                        "name": "maximumFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 222,
                        "src": "14102:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1117,
                      "name": "Params",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1141,
                      "src": "14078:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14078:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1121,
                  "nodeType": "ExpressionStatement",
                  "src": "14078:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 1123,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1090,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1089,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 119,
                  "src": "13805:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13805:9:0"
              }
            ],
            "name": "setParams",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1085,
                  "name": "newBasisPoints",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "13761:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13761:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1087,
                  "name": "newMaxFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "13782:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "13782:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13760:37:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 1091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13815:0:0"
            },
            "scope": 1142,
            "src": "13742:378:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1127,
            "name": "Issue",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1125,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1127,
                  "src": "14178:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14178:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14177:13:0"
            },
            "src": "14166:25:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1131,
            "name": "Redeem",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1129,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1131,
                  "src": "14249:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14249:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14248:13:0"
            },
            "src": "14236:26:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1135,
            "name": "Deprecate",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1133,
                  "indexed": false,
                  "name": "newAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1135,
                  "src": "14326:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14326:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14325:20:0"
            },
            "src": "14310:36:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 1141,
            "name": "Params",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1137,
                  "indexed": false,
                  "name": "feeBasisPoints",
                  "nodeType": "VariableDeclaration",
                  "scope": 1141,
                  "src": "14406:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1136,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14406:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1139,
                  "indexed": false,
                  "name": "maxFee",
                  "nodeType": "VariableDeclaration",
                  "scope": 1141,
                  "src": "14427:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1138,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "14427:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14405:34:0"
            },
            "src": "14393:47:0"
          }
        ],
        "scope": 1143,
        "src": "9661:4781:0"
      }
    ],
    "src": "0:14442:0"
  },
  "bytecode": "",
  "bytecodeSha1": "488f87cb84f78b58b2c0a5d42fc48b7294c6906e",
  "compiler": {
    "evm_version": "byzantium",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.4.26+commit.4563c3fc"
  },
  "contractName": "TetherToken",
  "coverageMap": {
    "branches": {
      "0": {
        "BasicToken.transfer": {
          "91": [
            3528,
            3544,
            false
          ],
          "92": [
            3763,
            3770,
            false
          ]
        },
        "BlackList.destroyBlackFunds": {
          "87": [
            8838,
            8869,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "86": [
            1747,
            1769,
            false
          ]
        },
        "Pausable.unpause": {
          "75": [
            7638,
            7644,
            true
          ]
        },
        "SafeMath.mul": {
          "93": [
            220,
            226,
            false
          ]
        },
        "StandardToken.transferFrom": {
          "88": [
            5355,
            5371,
            false
          ],
          "89": [
            5427,
            5448,
            false
          ],
          "90": [
            5692,
            5699,
            false
          ]
        },
        "TetherToken.allowance": {
          "85": [
            12171,
            12181,
            false
          ]
        },
        "TetherToken.approve": {
          "71": [
            11778,
            11788,
            false
          ]
        },
        "TetherToken.balanceOf": {
          "76": [
            11442,
            11452,
            false
          ]
        },
        "TetherToken.issue": {
          "81": [
            13086,
            13122,
            true
          ],
          "82": [
            13141,
            13183,
            true
          ]
        },
        "TetherToken.redeem": {
          "83": [
            13570,
            13592,
            true
          ],
          "84": [
            13611,
            13636,
            true
          ]
        },
        "TetherToken.setParams": {
          "79": [
            13921,
            13940,
            true
          ],
          "80": [
            13959,
            13973,
            true
          ]
        },
        "TetherToken.totalSupply": {
          "72": [
            12721,
            12731,
            false
          ]
        },
        "TetherToken.transfer": {
          "77": [
            10610,
            10636,
            true
          ],
          "78": [
            10651,
            10661,
            false
          ]
        },
        "TetherToken.transferFrom": {
          "73": [
            11030,
            11051,
            true
          ],
          "74": [
            11066,
            11076,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {
        "BasicToken.balanceOf": {
          "57": [
            4233,
            4256
          ]
        },
        "BasicToken.transfer": {
          "58": [
            3560,
            3576
          ],
          "59": [
            3639,
            3694
          ],
          "60": [
            3704,
            3749
          ],
          "61": [
            3786,
            3828
          ],
          "62": [
            3842,
            3874
          ],
          "63": [
            3894,
            3931
          ]
        },
        "BlackList.addBlackList": {
          "5": [
            8507,
            8538
          ],
          "6": [
            8548,
            8573
          ]
        },
        "BlackList.destroyBlackFunds": {
          "43": [
            8830,
            8870
          ],
          "44": [
            8935,
            8965
          ],
          "45": [
            8975,
            9001
          ],
          "46": [
            9011,
            9060
          ]
        },
        "BlackList.getBlackListStatus": {
          "14": [
            8249,
            8277
          ]
        },
        "BlackList.getOwner": {
          "19": [
            8356,
            8368
          ]
        },
        "BlackList.removeBlackList": {
          "40": [
            8661,
            8696
          ],
          "41": [
            8706,
            8736
          ]
        },
        "Ownable.transferOwnership": {
          "42": [
            1785,
            1801
          ]
        },
        "Pausable.pause": {
          "17": [
            7790,
            7803
          ],
          "18": [
            7809,
            7816
          ]
        },
        "Pausable.unpause": {
          "12": [
            7956,
            7970
          ],
          "13": [
            7976,
            7985
          ]
        },
        "SafeMath.add": {
          "70": [
            865,
            879
          ]
        },
        "SafeMath.mul": {
          "64": [
            242,
            250
          ],
          "65": [
            297,
            315
          ],
          "66": [
            325,
            333
          ]
        },
        "SafeMath.sub": {
          "68": [
            712,
            726
          ],
          "69": [
            736,
            748
          ]
        },
        "StandardToken.allowance": {
          "67": [
            7089,
            7121
          ]
        },
        "StandardToken.approve": {
          "47": [
            6491,
            6556
          ],
          "48": [
            6567,
            6605
          ],
          "49": [
            6615,
            6653
          ]
        },
        "StandardToken.transferFrom": {
          "50": [
            5387,
            5403
          ],
          "51": [
            5464,
            5515
          ],
          "52": [
            5578,
            5623
          ],
          "53": [
            5633,
            5678
          ],
          "54": [
            5715,
            5757
          ],
          "55": [
            5771,
            5798
          ],
          "56": [
            5818,
            5850
          ]
        },
        "TetherToken.allowance": {
          "38": [
            12197,
            12262
          ],
          "39": [
            12293,
            12333
          ]
        },
        "TetherToken.approve": {
          "3": [
            11804,
            11895
          ],
          "4": [
            11926,
            11964
          ]
        },
        "TetherToken.balanceOf": {
          "15": [
            11468,
            11528
          ],
          "16": [
            11559,
            11586
          ]
        },
        "TetherToken.deprecate": {
          "0": [
            12485,
            12502
          ],
          "1": [
            12512,
            12546
          ],
          "2": [
            12556,
            12583
          ]
        },
        "TetherToken.issue": {
          "28": [
            13078,
            13123
          ],
          "29": [
            13133,
            13184
          ],
          "30": [
            13195,
            13220
          ],
          "31": [
            13230,
            13252
          ],
          "32": [
            13262,
            13275
          ]
        },
        "TetherToken.redeem": {
          "33": [
            13562,
            13593
          ],
          "34": [
            13603,
            13637
          ],
          "35": [
            13648,
            13670
          ],
          "36": [
            13680,
            13705
          ],
          "37": [
            13715,
            13729
          ]
        },
        "TetherToken.setParams": {
          "23": [
            13913,
            13941
          ],
          "24": [
            13951,
            13974
          ],
          "25": [
            13985,
            14017
          ],
          "26": [
            14027,
            14067
          ],
          "27": [
            14078,
            14113
          ]
        },
        "TetherToken.totalSupply": {
          "7": [
            12747,
            12798
          ],
          "8": [
            12829,
            12848
          ]
        },
        "TetherToken.transfer": {
          "20": [
            10602,
            10637
          ],
          "21": [
            10677,
            10764
          ],
          "22": [
            10795,
            10829
          ]
        },
        "TetherToken.transferFrom": {
          "9": [
            11022,
            11052
          ],
          "10": [
            11092,
            11190
          ],
          "11": [
            11221,
            11266
          ]
        }
      }
    }
  },
  "dependencies": [
    "BasicToken",
    "BlackList",
    "ERC20",
    "ERC20Basic",
    "Ownable",
    "Pausable",
    "SafeMath",
    "StandardToken",
    "UpgradedStandardToken"
  ],
  "deployedBytecode": "6080604052600436106101955763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde03811461019a5780630753c30c14610224578063095ea7b3146102475780630e136b191461026b5780630ecb93c01461029457806318160ddd146102b557806323b872dd146102dc57806326976e3f1461030657806327e235e314610337578063313ce56714610358578063353907141461036d5780633eaaf86b146103825780633f4ba83a1461039757806359bf1abe146103ac5780635c658165146103cd5780635c975abb146103f457806370a08231146104095780638456cb591461042a578063893d20e81461043f5780638da5cb5b1461045457806395d89b4114610469578063a9059cbb1461047e578063c0324c77146104a2578063cc872b66146104bd578063db006a75146104d5578063dd62ed3e146104ed578063dd644f7214610514578063e47d606014610529578063e4997dc51461054a578063e5b5019a1461056b578063f2fde38b14610580578063f3bdc228146105a1575b600080fd5b3480156101a657600080fd5b506101af6105c2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101e95781810151838201526020016101d1565b50505050905090810190601f1680156102165780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561023057600080fd5b50610245600160a060020a0360043516610650565b005b34801561025357600080fd5b50610245600160a060020a03600435166024356106e8565b34801561027757600080fd5b506102806107aa565b604080519115158252519081900360200190f35b3480156102a057600080fd5b50610245600160a060020a03600435166107ba565b3480156102c157600080fd5b506102ca61082c565b60408051918252519081900360200190f35b3480156102e857600080fd5b50610245600160a060020a03600435811690602435166044356108e8565b34801561031257600080fd5b5061031b6109be565b60408051600160a060020a039092168252519081900360200190f35b34801561034357600080fd5b506102ca600160a060020a03600435166109cd565b34801561036457600080fd5b506102ca6109df565b34801561037957600080fd5b506102ca6109e5565b34801561038e57600080fd5b506102ca6109eb565b3480156103a357600080fd5b506102456109f1565b3480156103b857600080fd5b50610280600160a060020a0360043516610a67565b3480156103d957600080fd5b506102ca600160a060020a0360043581169060243516610a89565b34801561040057600080fd5b50610280610aa6565b34801561041557600080fd5b506102ca600160a060020a0360043516610ab6565b34801561043657600080fd5b50610245610b76565b34801561044b57600080fd5b5061031b610bf1565b34801561046057600080fd5b5061031b610c00565b34801561047557600080fd5b506101af610c0f565b34801561048a57600080fd5b50610245600160a060020a0360043516602435610c6a565b3480156104ae57600080fd5b50610245600435602435610d4f565b3480156104c957600080fd5b50610245600435610de4565b3480156104e157600080fd5b50610245600435610e8f565b3480156104f957600080fd5b506102ca600160a060020a0360043581169060243516610f3a565b34801561052057600080fd5b506102ca611005565b34801561053557600080fd5b50610280600160a060020a036004351661100b565b34801561055657600080fd5b50610245600160a060020a0360043516611020565b34801561057757600080fd5b506102ca61108f565b34801561058c57600080fd5b50610245600160a060020a0360043516611095565b3480156105ad57600080fd5b50610245600160a060020a03600435166110e7565b6007805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106485780601f1061061d57610100808354040283529160200191610648565b820191906000526020600020905b81548152906001019060200180831161062b57829003601f168201915b505050505081565b600054600160a060020a0316331461066757600080fd5b600a805460a060020a74ff0000000000000000000000000000000000000000199091161773ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03831690811790915560408051918252517fcc358699805e9a8b7f77b522628c7cb9abd07d9efb86b6fb616af1609036a99e916020908290030190a150565b604060443610156106f857600080fd5b600a5460a060020a900460ff161561079b57600a54604080517faee92d33000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038681166024830152604482018690529151919092169163aee92d3391606480830192600092919082900301818387803b15801561077e57600080fd5b505af1158015610792573d6000803e3d6000fd5b505050506107a5565b6107a58383611193565b505050565b600a5460a060020a900460ff1681565b600054600160a060020a031633146107d157600080fd5b600160a060020a038116600081815260066020908152604091829020805460ff19166001179055815192835290517f42e160154868087d6bfdc0ca23d96a1c1cfa32f1b72ba9ba27b69b98a0d819dc9281900390910190a150565b600a5460009060a060020a900460ff16156108e057600a60009054906101000a9004600160a060020a0316600160a060020a03166318160ddd6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156108ad57600080fd5b505af11580156108c1573d6000803e3d6000fd5b505050506040513d60208110156108d757600080fd5b505190506108e5565b506001545b90565b60005460a060020a900460ff16156108ff57600080fd5b600160a060020a03831660009081526006602052604090205460ff161561092557600080fd5b600a5460a060020a900460ff16156109b357600a54604080517f8b477adb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a03868116602483015285811660448301526064820185905291519190921691638b477adb91608480830192600092919082900301818387803b15801561077e57600080fd5b6107a5838383611241565b600a54600160a060020a031681565b60026020526000908152604090205481565b60095481565b60045481565b60015481565b600054600160a060020a03163314610a0857600080fd5b60005460a060020a900460ff161515610a2057600080fd5b6000805474ff0000000000000000000000000000000000000000191681556040517f7805862f689e2f13df9f062ff482ad3ad112aca9e0847911ed832e158c525b339190a1565b600160a060020a03811660009081526006602052604090205460ff165b919050565b600560209081526000928352604080842090915290825290205481565b60005460a060020a900460ff1681565b600a5460009060a060020a900460ff1615610b6657600a54604080517f70a08231000000000000000000000000000000000000000000000000000000008152600160a060020a038581166004830152915191909216916370a082319160248083019260209291908290030181600087803b158015610b3357600080fd5b505af1158015610b47573d6000803e3d6000fd5b505050506040513d6020811015610b5d57600080fd5b50519050610a84565b610b6f8261143d565b9050610a84565b600054600160a060020a03163314610b8d57600080fd5b60005460a060020a900460ff1615610ba457600080fd5b6000805474ff0000000000000000000000000000000000000000191660a060020a1781556040517f6985a02210a168e66602d3235cb6db0e70f92b3ba4d376a33c0f3d9434bff6259190a1565b600054600160a060020a031690565b600054600160a060020a031681565b6008805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156106485780601f1061061d57610100808354040283529160200191610648565b60005460a060020a900460ff1615610c8157600080fd5b3360009081526006602052604090205460ff1615610c9e57600080fd5b600a5460a060020a900460ff1615610d4157600a54604080517f6e18980a000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a0385811660248301526044820185905291519190921691636e18980a91606480830192600092919082900301818387803b158015610d2457600080fd5b505af1158015610d38573d6000803e3d6000fd5b50505050610d4b565b610d4b8282611458565b5050565b600054600160a060020a03163314610d6657600080fd5b60148210610d7357600080fd5b60328110610d8057600080fd5b6003829055600954610d9c908290600a0a63ffffffff6115c516565b600481905560035460408051918252602082019290925281517fb044a1e409eac5c48e5af22d4af52670dd1a99059537a78b31b48c6500a6354e929181900390910190a15050565b600054600160a060020a03163314610dfb57600080fd5b60015481810111610e0b57600080fd5b60008054600160a060020a031681526002602052604090205481810111610e3157600080fd5b60008054600160a060020a03168152600260209081526040918290208054840190556001805484019055815183815291517fcb8241adb0c3fdb35b70c24ce35c5eb0c17af7431c99f827d44a445ca624176a9281900390910190a150565b600054600160a060020a03163314610ea657600080fd5b600154811115610eb557600080fd5b60008054600160a060020a0316815260026020526040902054811115610eda57600080fd5b60018054829003905560008054600160a060020a031681526002602090815260409182902080548490039055815183815291517f702d5967f45f6513a38ffc42d6ba9bf230bd40e8f53b16363c7eb4fd2deb9a449281900390910190a150565b600a5460009060a060020a900460ff1615610ff257600a54604080517fdd62ed3e000000000000000000000000000000000000000000000000000000008152600160a060020a03868116600483015285811660248301529151919092169163dd62ed3e9160448083019260209291908290030181600087803b158015610fbf57600080fd5b505af1158015610fd3573d6000803e3d6000fd5b505050506040513d6020811015610fe957600080fd5b50519050610fff565b610ffc83836115fb565b90505b92915050565b60035481565b60066020526000908152604090205460ff1681565b600054600160a060020a0316331461103757600080fd5b600160a060020a038116600081815260066020908152604091829020805460ff19169055815192835290517fd7e9ec6e6ecd65492dce6bf513cd6867560d49544421d0783ddf06e76c24470c9281900390910190a150565b60001981565b600054600160a060020a031633146110ac57600080fd5b600160a060020a038116156110e4576000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790555b50565b60008054600160a060020a031633146110ff57600080fd5b600160a060020a03821660009081526006602052604090205460ff16151561112657600080fd5b61112f82610ab6565b600160a060020a0383166000818152600260209081526040808320929092556001805485900390558151928352820183905280519293507f61e6e66b0d6339b2980aecc6ccc0039736791f0ccde9ed512e789a7fbdd698c692918290030190a15050565b604060443610156111a357600080fd5b81158015906111d45750336000908152600560209081526040808320600160a060020a038716845290915290205415155b156111de57600080fd5b336000818152600560209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a3505050565b600080806060606436101561125557600080fd5b600160a060020a03871660009081526005602090815260408083203384529091529020546003549094506112a4906127109061129890889063ffffffff6115c516565b9063ffffffff61162616565b92506004548311156112b65760045492505b6000198410156112f5576112d0848663ffffffff61163d16565b600160a060020a03881660009081526005602090815260408083203384529091529020555b611305858463ffffffff61163d16565b600160a060020a038816600090815260026020526040902054909250611331908663ffffffff61163d16565b600160a060020a038089166000908152600260205260408082209390935590881681522054611366908363ffffffff61164f16565b600160a060020a0387166000908152600260205260408120919091558311156113fb5760008054600160a060020a03168152600260205260409020546113b2908463ffffffff61164f16565b60008054600160a060020a0390811682526002602090815260408084209490945591548351878152935190821693918b169260008051602061165f833981519152928290030190a35b85600160a060020a031687600160a060020a031660008051602061165f833981519152846040518082815260200191505060405180910390a350505050505050565b600160a060020a031660009081526002602052604090205490565b6000806040604436101561146b57600080fd5b611486612710611298600354876115c590919063ffffffff16565b92506004548311156114985760045492505b6114a8848463ffffffff61163d16565b336000908152600260205260409020549092506114cb908563ffffffff61163d16565b3360009081526002602052604080822092909255600160a060020a038716815220546114fd908363ffffffff61164f16565b600160a060020a0386166000908152600260205260408120919091558311156115905760008054600160a060020a0316815260026020526040902054611549908463ffffffff61164f16565b60008054600160a060020a03908116825260026020908152604080842094909455915483518781529351911692339260008051602061165f83398151915292918290030190a35b604080518381529051600160a060020a03871691339160008051602061165f8339815191529181900360200190a35050505050565b6000808315156115d857600091506115f4565b508282028284828115156115e857fe5b04146115f057fe5b8091505b5092915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600080828481151561163457fe5b04949350505050565b60008282111561164957fe5b50900390565b6000828201838110156115f057fe00ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a723058208c662255766bdc5afa6d8dbebc05fa703d627f12029b68b6cbc976063eaa18f40029",
  "deployedSourceMap": "9661:4781:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9727:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9727:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9727:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12413:177;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12413:177:0;-1:-1:-1;;;;;12413:177:0;;;;;;;11685:296;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11685:296:0;-1:-1:-1;;;;;11685:296:0;;;;;;;9839:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9839:22:0;;;;;;;;;;;;;;;;;;;;;;8438:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8438:142:0;-1:-1:-1;;;;;8438:142:0;;;;;12653:212;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12653:212:0;;;;;;;;;;;;;;;;;;;;10928:355;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10928:355:0;-1:-1:-1;;;;;10928:355:0;;;;;;;;;;;;9803:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9803:30:0;;;;;;;;-1:-1:-1;;;;;9803:30:0;;;;;;;;;;;;;;2849:40;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2849:40:0;-1:-1:-1;;;;;2849:40:0;;;;;9777:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9777:20:0;;;;3011:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3011:26:0;;;;1976:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1976:24:0;;;;7903:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7903:87:0;;;;8162:122;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8162:122:0;-1:-1:-1;;;;;8162:122:0;;;;;4585:61;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4585:61:0;-1:-1:-1;;;;;4585:61:0;;;;;;;;;;7317:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7317:26:0;;;;11365:238;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;11365:238:0;-1:-1:-1;;;;;11365:238:0;;;;;7736:85;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7736:85:0;;;;8290;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8290:85:0;;;;1121:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1121:20:0;;;;9751;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9751:20:0;;;;10527:319;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10527:319:0;-1:-1:-1;;;;;10527:319:0;;;;;;;13742:378;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13742:378:0;;;;;;;13023:259;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13023:259:0;;;;;13506:230;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13506:230:0;;;;;12063:287;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12063:287:0;-1:-1:-1;;;;;12063:287:0;;;;;;;;;;2974:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2974:31:0;;;;8381:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8381:46:0;-1:-1:-1;;;;;8381:46:0;;;;;8586:157;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8586:157:0;-1:-1:-1;;;;;8586:157:0;;;;;4653:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4653:42:0;;;;1671:147;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1671:147:0;-1:-1:-1;;;;;1671:147:0;;;;;8749:318;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8749:318:0;-1:-1:-1;;;;;8749:318:0;;;;;9727:18;;;;;;;;;;;;;;;-1:-1:-1;;9727:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12413:177::-;1479:5;;-1:-1:-1;;;;;1479:5:0;1465:10;:19;1457:28;;;;;;12485:10;:17;;-1:-1:-1;;;;;12485:17:0;;;;-1:-1:-1;;12512:34:0;-1:-1:-1;;;;;12512:34:0;;;;;;;;12556:27;;;;;;;;;;;;;;;;;12413:177;:::o;11685:296::-;11756:6;3184:8;3166;:26;3164:29;3156:38;;;;;;11778:10;;-1:-1:-1;;;11778:10:0;;;;11774:201;;;11833:15;;11811:84;;;;;;11866:10;11811:84;;;;-1:-1:-1;;;;;11811:84:0;;;;;;;;;;;;;;;11833:15;;;;;11811:54;;:84;;;;;11833:15;;11811:84;;;;;;;11833:15;;11811:84;;;5:2:-1;;;;30:1;27;20:12;5:2;11811:84:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11811:84:0;;;;11804:91;;11774:201;11933:31;11947:8;11957:6;11933:13;:31::i;:::-;11685:296;;;:::o;9839:22::-;;;-1:-1:-1;;;9839:22:0;;;;;:::o;8438:142::-;1479:5;;-1:-1:-1;;;;;1479:5:0;1465:10;:19;1457:28;;;;;;-1:-1:-1;;;;;8507:24:0;;;;;;:13;:24;;;;;;;;;:31;;-1:-1:-1;;8507:31:0;8534:4;8507:31;;;8548:25;;;;;;;;;;;;;;;;;8438:142;:::o;12653:212::-;12721:10;;12701:4;;-1:-1:-1;;;12721:10:0;;;;12717:142;;;12768:15;;;;;;;;;-1:-1:-1;;;;;12768:15:0;-1:-1:-1;;;;;12754:42:0;;:44;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12754:44:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12754:44:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12754:44:0;;-1:-1:-1;12747:51:0;;12717:142;-1:-1:-1;12836:12:0;;12717:142;12653:212;:::o;10928:355::-;7486:6;;-1:-1:-1;;;7486:6:0;;;;7485:7;7477:16;;;;;;-1:-1:-1;;;;;11031:20:0;;;;;;:13;:20;;;;;;;;11030:21;11022:30;;;;;;11066:10;;-1:-1:-1;;;11066:10:0;;;;11062:215;;;11121:15;;11099:91;;;;;;11159:10;11099:91;;;;-1:-1:-1;;;;;11099:91:0;;;;;;;;;;;;;;;;;;;;;;11121:15;;;;;11099:59;;:91;;;;;11121:15;;11099:91;;;;;;;11121:15;;11099:91;;;5:2:-1;;;;30:1;27;20:12;11062:215:0;11228:38;11247:5;11254:3;11259:6;11228:18;:38::i;9803:30::-;;;-1:-1:-1;;;;;9803:30:0;;:::o;2849:40::-;;;;;;;;;;;;;:::o;9777:20::-;;;;:::o;3011:26::-;;;;:::o;1976:24::-;;;;:::o;7903:87::-;1479:5;;-1:-1:-1;;;;;1479:5:0;1465:10;:19;1457:28;;;;;;7638:6;;-1:-1:-1;;;7638:6:0;;;;7630:15;;;;;;;;7965:5;7956:14;;-1:-1:-1;;7956:14:0;;;7976:9;;;;7965:5;7976:9;7903:87::o;8162:122::-;-1:-1:-1;;;;;8256:21:0;;8233:4;8256:21;;;:13;:21;;;;;;;;8162:122;;;;:::o;4585:61::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;7317:26::-;;;-1:-1:-1;;;7317:26:0;;;;;:::o;11365:238::-;11442:10;;11422:4;;-1:-1:-1;;;11442:10:0;;;;11438:159;;;11497:15;;11475:53;;;;;;-1:-1:-1;;;;;11475:53:0;;;;;;;;;11497:15;;;;;11475:48;;:53;;;;;;;;;;;;;;11497:15;;11475:53;;;5:2:-1;;;;30:1;27;20:12;5:2;11475:53:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11475:53:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11475:53:0;;-1:-1:-1;11468:60:0;;11438:159;11566:20;11582:3;11566:15;:20::i;:::-;11559:27;;;;7736:85;1479:5;;-1:-1:-1;;;;;1479:5:0;1465:10;:19;1457:28;;;;;;7486:6;;-1:-1:-1;;;7486:6:0;;;;7485:7;7477:16;;;;;;7790:6;:13;;-1:-1:-1;;7790:13:0;-1:-1:-1;;;7790:13:0;;;7809:7;;;;7790:6;7809:7;7736:85::o;8290:::-;8337:7;8363:5;-1:-1:-1;;;;;8363:5:0;8290:85;:::o;1121:20::-;;;-1:-1:-1;;;;;1121:20:0;;:::o;9751:::-;;;;;;;;;;;;;;;-1:-1:-1;;9751:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10527:319;7486:6;;-1:-1:-1;;;7486:6:0;;;;7485:7;7477:16;;;;;;10625:10;10611:25;;;;:13;:25;;;;;;;;10610:26;10602:35;;;;;;10651:10;;-1:-1:-1;;;10651:10:0;;;;10647:193;;;10706:15;;10684:80;;;;;;10740:10;10684:80;;;;-1:-1:-1;;;;;10684:80:0;;;;;;;;;;;;;;;10706:15;;;;;10684:55;;:80;;;;;10706:15;;10684:80;;;;;;;10706:15;;10684:80;;;5:2:-1;;;;30:1;27;20:12;5:2;10684:80:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10684:80:0;;;;10677:87;;10647:193;10802:27;10817:3;10822:6;10802:14;:27::i;:::-;10527:319;;:::o;13742:378::-;1479:5;;-1:-1:-1;;;;;1479:5:0;1465:10;:19;1457:28;;;;;;13938:2;13921:19;;13913:28;;;;;;13971:2;13959:14;;13951:23;;;;;;13985:15;:32;;;14058:8;;14040:27;;:9;;14054:2;:12;14040:27;:13;:27;:::i;:::-;14027:10;:40;;;14085:15;;14078:35;;;;;;;;;;;;;;;;;;;;;;;;;;13742:378;;:::o;13023:259::-;1479:5;;-1:-1:-1;;;;;1479:5:0;1465:10;:19;1457:28;;;;;;13110:12;;13086:21;;;:36;13078:45;;;;;;13168:15;13177:5;;-1:-1:-1;;;;;13177:5:0;13168:15;;:8;:15;;;;;;13141:24;;;:42;13133:51;;;;;;13195:15;13204:5;;-1:-1:-1;;;;;13204:5:0;13195:15;;:8;:15;;;;;;;;;:25;;;;;;13204:5;13230:22;;;;;;13262:13;;;;;;;;;;;;;;;;;13023:259;:::o;13506:230::-;1479:5;;-1:-1:-1;;;;;1479:5:0;1465:10;:19;1457:28;;;;;;13570:12;;:22;-1:-1:-1;13570:22:0;13562:31;;;;;;13611:15;13620:5;;-1:-1:-1;;;;;13620:5:0;13611:15;;:8;:15;;;;;;:25;-1:-1:-1;13611:25:0;13603:34;;;;;;13648:12;:22;;;;;;;:12;13689:5;;-1:-1:-1;;;;;13689:5:0;13680:15;;:8;:15;;;;;;;;;:25;;;;;;;13715:14;;;;;;;;;;;;;;;;;13506:230;:::o;12063:287::-;12171:10;;12141:14;;-1:-1:-1;;;12171:10:0;;;;12167:177;;;12218:15;;12204:58;;;;;;-1:-1:-1;;;;;12204:58:0;;;;;;;;;;;;;;;;12218:15;;;;;12204:40;;:58;;;;;;;;;;;;;;12218:15;;12204:58;;;5:2:-1;;;;30:1;27;20:12;5:2;12204:58:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12204:58:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12204:58:0;;-1:-1:-1;12197:65:0;;12167:177;12300:33;12316:6;12324:8;12300:15;:33::i;:::-;12293:40;;12167:177;12063:287;;;;:::o;2974:31::-;;;;:::o;8381:46::-;;;;;;;;;;;;;;;:::o;8586:157::-;1479:5;;-1:-1:-1;;;;;1479:5:0;1465:10;:19;1457:28;;;;;;-1:-1:-1;;;;;8661:27:0;;8691:5;8661:27;;;:13;:27;;;;;;;;;:35;;-1:-1:-1;;8661:35:0;;;8706:30;;;;;;;;;;;;;;;;;8586:157;:::o;4653:42::-;-1:-1:-1;;4653:42:0;:::o;1671:147::-;1479:5;;-1:-1:-1;;;;;1479:5:0;1465:10;:19;1457:28;;;;;;-1:-1:-1;;;;;1747:22:0;;;1743:69;;1785:5;:16;;-1:-1:-1;;1785:16:0;-1:-1:-1;;;;;1785:16:0;;;;;1743:69;1671:147;:::o;8749:318::-;8880:15;1479:5;;-1:-1:-1;;;;;1479:5:0;1465:10;:19;1457:28;;;;;;-1:-1:-1;;;;;8838:31:0;;;;;;:13;:31;;;;;;;;8830:40;;;;;;;;8898:27;8908:16;8898:9;:27::i;:::-;-1:-1:-1;;;;;8935:26:0;;8964:1;8935:26;;;:8;:26;;;;;;;;:30;;;;8975:12;:26;;;;;;;9011:49;;;;;;;;;;;;8880:45;;-1:-1:-1;9011:49:0;;;;;;;;;8749:318;;:::o;6097:563::-;6168:6;3184:8;3166;:26;3164:29;3156:38;;;;;;6502:11;;;;;6501:53;;-1:-1:-1;6527:10:0;6519:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;6519:29:0;;;;;;;;;;:34;;6501:53;6499:56;6491:65;;;;;;6575:10;6567:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;6567:29:0;;;;;;;;;;;;:38;;;6615;;;;;;;6567:29;;6575:10;6615:38;;;;;;;;;;;6097:563;;;:::o;4977:880::-;5081:14;;;5063:6;3184:8;3166;:26;3164:29;3156:38;;;;;;-1:-1:-1;;;;;5098:14:0;;;;;;:7;:14;;;;;;;;5113:10;5098:26;;;;;;;;5313:15;;5098:26;;-1:-1:-1;5301:40:0;;5335:5;;5302:27;;:6;;:27;:10;:27;:::i;:::-;5301:33;:40;:33;:40;:::i;:::-;5290:51;;5361:10;;5355:3;:16;5351:63;;;5393:10;;5387:16;;5351:63;-1:-1:-1;;5427:10:0;:21;5423:103;;;5493:22;:10;5508:6;5493:22;:14;:22;:::i;:::-;-1:-1:-1;;;;;5464:14:0;;;;;;:7;:14;;;;;;;;5479:10;5464:26;;;;;;;:51;5423:103;5553:15;:6;5564:3;5553:15;:10;:15;:::i;:::-;-1:-1:-1;;;;;5596:15:0;;;;;;:8;:15;;;;;;5535:33;;-1:-1:-1;5596:27:0;;5616:6;5596:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;5578:15:0;;;;;;;:8;:15;;;;;;:45;;;;5649:13;;;;;;;:29;;5667:10;5649:29;:17;:29;:::i;:::-;-1:-1:-1;;;;;5633:13:0;;;;;;:8;:13;;;;;:45;;;;5692:7;;5688:121;;;5733:15;5742:5;;-1:-1:-1;;;;;5742:5:0;5733:15;;:8;:15;;;;;;:24;;5753:3;5733:24;:19;:24;:::i;:::-;5715:15;5724:5;;-1:-1:-1;;;;;5724:5:0;;;5715:15;;:8;:15;;;;;;;;:42;;;;5787:5;;5771:27;;;;;;;5787:5;;;;5771:27;;;;-1:-1:-1;;;;;;;;;;;5771:27:0;;;;;;;5688:121;5834:3;-1:-1:-1;;;;;5818:32:0;5827:5;-1:-1:-1;;;;;5818:32:0;-1:-1:-1;;;;;;;;;;;5839:10:0;5818:32;;;;;;;;;;;;;;;;;;4977:880;;;;;;;:::o;4149:114::-;-1:-1:-1;;;;;4240:16:0;4209:12;4240:16;;;:8;:16;;;;;;;4149:114::o;3378:560::-;3463:8;;3445:6;3184:8;3166;:26;3164:29;3156:38;;;;;;3474:40;3508:5;3475:27;3486:15;;3475:6;:10;;:27;;;;:::i;3474:40::-;3463:51;;3534:10;;3528:3;:16;3524:63;;;3566:10;;3560:16;;3524:63;3614:15;:6;3625:3;3614:15;:10;:15;:::i;:::-;3671:10;3662:20;;;;:8;:20;;;;;;3596:33;;-1:-1:-1;3662:32:0;;3687:6;3662:32;:24;:32;:::i;:::-;3648:10;3639:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;3720:13:0;;;;;;:29;;3738:10;3720:29;:17;:29;:::i;:::-;-1:-1:-1;;;;;3704:13:0;;;;;;:8;:13;;;;;:45;;;;3763:7;;3759:126;;;3804:15;3813:5;;-1:-1:-1;;;;;3813:5:0;3804:15;;:8;:15;;;;;;:24;;3824:3;3804:24;:19;:24;:::i;:::-;3786:15;3795:5;;-1:-1:-1;;;;;3795:5:0;;;3786:15;;:8;:15;;;;;;;;:42;;;;3863:5;;3842:32;;;;;;;3863:5;;;3851:10;;-1:-1:-1;;;;;;;;;;;3842:32:0;;;;;;;;3759:126;3894:37;;;;;;;;-1:-1:-1;;;;;3894:37:0;;;3903:10;;-1:-1:-1;;;;;;;;;;;3894:37:0;;;;;;;;3378:560;;;;;:::o;139:201::-;197:7;;220:6;;216:45;;;249:1;242:8;;;;216:45;-1:-1:-1;282:5:0;;;286:1;282;:5;304;;;;;;;;:10;297:18;;;;332:1;325:8;;139:201;;;;;;:::o;6985:143::-;-1:-1:-1;;;;;7096:15:0;;;7063:14;7096:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;6985:143::o;346:283::-;404:7;501:9;517:1;513;:5;;;;;;;;;346:283;-1:-1:-1;;;;346:283:0:o;635:120::-;693:7;719:6;;;;712:14;;;;-1:-1:-1;743:5:0;;;635:120::o;761:143::-;819:7;850:5;;;872:6;;;;865:14;;",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "getBlackListStatus(address)": {
        "notice": "//// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////"
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    }
  },
  "offset": [
    9661,
    14442
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x195 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0x19A JUMPI DUP1 PUSH4 0x753C30C EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xE136B19 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xECB93C0 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x26976E3F EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x35390714 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0x59BF1ABE EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x5C658165 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xC0324C77 EQ PUSH2 0x4A2 JUMPI DUP1 PUSH4 0xCC872B66 EQ PUSH2 0x4BD JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4ED JUMPI DUP1 PUSH4 0xDD644F72 EQ PUSH2 0x514 JUMPI DUP1 PUSH4 0xE47D6060 EQ PUSH2 0x529 JUMPI DUP1 PUSH4 0xE4997DC5 EQ PUSH2 0x54A JUMPI DUP1 PUSH4 0xE5B5019A EQ PUSH2 0x56B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x580 JUMPI DUP1 PUSH4 0xF3BDC228 EQ PUSH2 0x5A1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E9 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1D1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x216 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x650 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x6E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x7BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x82C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x8E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x9CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x9DF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x9E5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x9EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0x9F1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xA67 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xA89 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH2 0xAA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xAB6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH2 0xB76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0xBF1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x460 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31B PUSH2 0xC00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1AF PUSH2 0xC0F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xC6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0xD4F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x4 CALLDATALOAD PUSH2 0xDE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x4 CALLDATALOAD PUSH2 0xE8F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0xF3A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x1005 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x280 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x100B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x556 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1020 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x108F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x1095 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x10E7 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x648 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x61D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x648 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x62B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP PUSH21 0xFF0000000000000000000000000000000000000000 NOT SWAP1 SWAP2 AND OR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD PUSH32 0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x79B JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xAEE92D3300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xAEE92D33 SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x792 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x7A5 JUMP JUMPDEST PUSH2 0x7A5 DUP4 DUP4 PUSH2 0x1193 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8E0 JUMPI PUSH1 0xA PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x8E5 JUMP JUMPDEST POP PUSH1 0x1 SLOAD JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9B3 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x8B477ADB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x8B477ADB SWAP2 PUSH1 0x84 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A5 DUP4 DUP4 DUP4 PUSH2 0x1241 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xA08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0xA20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB66 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xA84 JUMP JUMPDEST PUSH2 0xB6F DUP3 PUSH2 0x143D JUMP JUMPDEST SWAP1 POP PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xB8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH21 0xFF0000000000000000000000000000000000000000 NOT AND PUSH1 0xA0 PUSH1 0x2 EXP OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625 SWAP2 SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x648 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x61D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD41 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x6E18980A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0x6E18980A SWAP2 PUSH1 0x64 DUP1 DUP4 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD38 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD4B JUMP JUMPDEST PUSH2 0xD4B DUP3 DUP3 PUSH2 0x1458 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xD66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 DUP3 LT PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x32 DUP2 LT PUSH2 0xD80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP3 SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH2 0xD9C SWAP1 DUP3 SWAP1 PUSH1 0xA EXP PUSH4 0xFFFFFFFF PUSH2 0x15C5 AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP2 MLOAD PUSH32 0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xDFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 DUP2 ADD GT PUSH2 0xE0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 ADD GT PUSH2 0xE31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP5 ADD SWAP1 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE SWAP2 MLOAD PUSH32 0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0xEA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0xEB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xEDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP5 SWAP1 SUB SWAP1 SSTORE DUP2 MLOAD DUP4 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 PUSH1 0x2 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFF2 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFD3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xFE9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0xFFF JUMP JUMPDEST PUSH2 0xFFC DUP4 DUP4 PUSH2 0x15FB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x1037 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE SWAP1 MLOAD PUSH32 0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 NOT DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x10AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO PUSH2 0x10E4 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND OR SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ PUSH2 0x10FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x112F DUP3 PUSH2 0xAB6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD DUP6 SWAP1 SUB SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE DUP1 MLOAD SWAP3 SWAP4 POP PUSH32 0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6 SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x11A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x11D4 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x60 PUSH1 0x64 CALLDATASIZE LT ISZERO PUSH2 0x1255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x3 SLOAD SWAP1 SWAP5 POP PUSH2 0x12A4 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x1298 SWAP1 DUP9 SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x15C5 AND JUMP JUMPDEST SWAP1 PUSH4 0xFFFFFFFF PUSH2 0x1626 AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x12B6 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 NOT DUP5 LT ISZERO PUSH2 0x12F5 JUMPI PUSH2 0x12D0 DUP5 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x163D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x1305 DUP6 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x163D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x1331 SWAP1 DUP7 PUSH4 0xFFFFFFFF PUSH2 0x163D AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP9 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1366 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x164F AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 GT ISZERO PUSH2 0x13FB JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x13B2 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x164F AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP4 MLOAD DUP8 DUP2 MSTORE SWAP4 MLOAD SWAP1 DUP3 AND SWAP4 SWAP2 DUP12 AND SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x165F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 JUMPDEST DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x165F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 PUSH1 0x44 CALLDATASIZE LT ISZERO PUSH2 0x146B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1486 PUSH2 0x2710 PUSH2 0x1298 PUSH1 0x3 SLOAD DUP8 PUSH2 0x15C5 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH1 0x4 SLOAD DUP4 GT ISZERO PUSH2 0x1498 JUMPI PUSH1 0x4 SLOAD SWAP3 POP JUMPDEST PUSH2 0x14A8 DUP5 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x163D AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x14CB SWAP1 DUP6 PUSH4 0xFFFFFFFF PUSH2 0x163D AND JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x14FD SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x164F AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE DUP4 GT ISZERO PUSH2 0x1590 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1549 SWAP1 DUP5 PUSH4 0xFFFFFFFF PUSH2 0x164F AND JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 SLOAD DUP4 MLOAD DUP8 DUP2 MSTORE SWAP4 MLOAD SWAP2 AND SWAP3 CALLER SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x165F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x165F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 ISZERO ISZERO PUSH2 0x15D8 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x15F4 JUMP JUMPDEST POP DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 ISZERO ISZERO PUSH2 0x15E8 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x15F0 JUMPI INVALID JUMPDEST DUP1 SWAP2 POP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 DUP2 ISZERO ISZERO PUSH2 0x1634 JUMPI INVALID JUMPDEST DIV SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1649 JUMPI INVALID JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x15F0 JUMPI INVALID STOP 0xdd CALLCODE MSTORE 0xad SHL 0xe2 0xc8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 0xf5 GAS 0x4d 0xf5 0x23 0xb3 0xef LOG1 PUSH6 0x627A7A723058 KECCAK256 DUP13 PUSH7 0x2255766BDC5AFA PUSH14 0x8DBEBC05FA703D627F12029B68B6 0xcb 0xc9 PUSH23 0x63EAA18F4002900000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x195"
    },
    "12": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "18": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH29",
      "path": "0",
      "value": "0x100000000000000000000000000000000000000000000000000000000"
    },
    "48": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "50": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "51": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DIV",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "AND",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "58": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP2",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "60": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19A"
    },
    "63": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x753C30C"
    },
    "70": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "71": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x224"
    },
    "74": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "81": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "82": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x247"
    },
    "85": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE136B19"
    },
    "92": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "93": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26B"
    },
    "96": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xECB93C0"
    },
    "103": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x294"
    },
    "107": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "114": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B5"
    },
    "118": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "120": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "125": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2DC"
    },
    "129": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "131": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x26976E3F"
    },
    "136": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x306"
    },
    "140": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "142": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x27E235E3"
    },
    "147": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x337"
    },
    "151": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "158": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x358"
    },
    "162": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x35390714"
    },
    "169": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "170": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x36D"
    },
    "173": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3EAAF86B"
    },
    "180": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "181": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x382"
    },
    "184": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "185": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x3F4BA83A"
    },
    "191": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "192": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x397"
    },
    "195": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x59BF1ABE"
    },
    "202": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AC"
    },
    "206": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5C658165"
    },
    "213": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3CD"
    },
    "217": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5C975ABB"
    },
    "224": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "225": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3F4"
    },
    "228": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "229": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "230": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "235": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "236": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x409"
    },
    "239": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "240": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "241": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8456CB59"
    },
    "246": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "247": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x42A"
    },
    "250": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "251": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x893D20E8"
    },
    "257": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "258": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x43F"
    },
    "261": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "262": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "263": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8DA5CB5B"
    },
    "268": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "269": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x454"
    },
    "272": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "273": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "274": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "279": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "280": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x469"
    },
    "283": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "284": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "285": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "290": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "291": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47E"
    },
    "294": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "295": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "296": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC0324C77"
    },
    "301": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "302": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A2"
    },
    "305": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "306": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "307": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xCC872B66"
    },
    "312": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "313": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4BD"
    },
    "316": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "317": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "318": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDB006A75"
    },
    "323": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "324": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D5"
    },
    "327": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "328": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "329": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "334": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "335": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4ED"
    },
    "338": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "339": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "340": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD644F72"
    },
    "345": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "346": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x514"
    },
    "349": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "350": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "351": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE47D6060"
    },
    "356": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "357": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x529"
    },
    "360": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "361": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "362": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE4997DC5"
    },
    "367": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "368": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54A"
    },
    "371": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "372": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "373": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE5B5019A"
    },
    "378": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "379": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x56B"
    },
    "382": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "383": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "384": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF2FDE38B"
    },
    "389": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "390": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x580"
    },
    "393": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "394": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "395": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF3BDC228"
    },
    "400": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "EQ",
      "path": "0"
    },
    "401": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5A1"
    },
    "404": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "405": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "406": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "408": {
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "DUP1",
      "path": "0"
    },
    "409": {
      "first_revert": true,
      "fn": null,
      "offset": [
        9661,
        14442
      ],
      "op": "REVERT",
      "path": "0"
    },
    "410": {
      "offset": [
        9727,
        9745
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "411": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "412": {
      "op": "DUP1"
    },
    "413": {
      "op": "ISZERO"
    },
    "414": {
      "op": "PUSH2",
      "value": "0x1A6"
    },
    "417": {
      "op": "JUMPI"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "420": {
      "op": "DUP1"
    },
    "421": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "REVERT",
      "path": "0"
    },
    "422": {
      "op": "JUMPDEST"
    },
    "423": {
      "offset": [
        9727,
        9745
      ],
      "op": "POP",
      "path": "0"
    },
    "424": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "427": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5C2"
    },
    "430": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "JUMP",
      "path": "0"
    },
    "431": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "432": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "434": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "435": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "436": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "438": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "439": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP3",
      "path": "0"
    },
    "440": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "441": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP4",
      "path": "0"
    },
    "442": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "443": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP2",
      "path": "0"
    },
    "444": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP4",
      "path": "0"
    },
    "445": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "ADD",
      "path": "0"
    },
    "446": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "447": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP4",
      "path": "0"
    },
    "448": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "449": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "450": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "451": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP4",
      "path": "0"
    },
    "452": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "453": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "454": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP4",
      "path": "0"
    },
    "455": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "ADD",
      "path": "0"
    },
    "456": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "457": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP6",
      "path": "0"
    },
    "458": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "ADD",
      "path": "0"
    },
    "459": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "460": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "461": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP4",
      "path": "0"
    },
    "462": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP4",
      "path": "0"
    },
    "463": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "465": {
      "op": "JUMPDEST"
    },
    "466": {
      "op": "DUP4"
    },
    "467": {
      "op": "DUP2"
    },
    "468": {
      "op": "LT"
    },
    "469": {
      "op": "ISZERO"
    },
    "470": {
      "op": "PUSH2",
      "value": "0x1E9"
    },
    "473": {
      "op": "JUMPI"
    },
    "474": {
      "op": "DUP2"
    },
    "475": {
      "op": "DUP2"
    },
    "476": {
      "op": "ADD"
    },
    "477": {
      "op": "MLOAD"
    },
    "478": {
      "op": "DUP4"
    },
    "479": {
      "op": "DUP3"
    },
    "480": {
      "op": "ADD"
    },
    "481": {
      "op": "MSTORE"
    },
    "482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "484": {
      "op": "ADD"
    },
    "485": {
      "op": "PUSH2",
      "value": "0x1D1"
    },
    "488": {
      "op": "JUMP"
    },
    "489": {
      "op": "JUMPDEST"
    },
    "490": {
      "op": "POP"
    },
    "491": {
      "offset": [
        9727,
        9745
      ],
      "op": "POP",
      "path": "0"
    },
    "492": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "POP",
      "path": "0"
    },
    "493": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "POP",
      "path": "0"
    },
    "494": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "495": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "POP",
      "path": "0"
    },
    "496": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "497": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP2",
      "path": "0"
    },
    "498": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "ADD",
      "path": "0"
    },
    "499": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "500": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "502": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "AND",
      "path": "0"
    },
    "503": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "504": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "505": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x216"
    },
    "508": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "509": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "510": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP3",
      "path": "0"
    },
    "511": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SUB",
      "path": "0"
    },
    "512": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "513": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "514": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "516": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP4",
      "path": "0"
    },
    "517": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "519": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SUB",
      "path": "0"
    },
    "520": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "523": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "EXP",
      "path": "0"
    },
    "524": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SUB",
      "path": "0"
    },
    "525": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "NOT",
      "path": "0"
    },
    "526": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "AND",
      "path": "0"
    },
    "527": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP2",
      "path": "0"
    },
    "528": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "529": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "531": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "ADD",
      "path": "0"
    },
    "532": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "533": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "POP",
      "path": "0"
    },
    "534": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "535": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "POP",
      "path": "0"
    },
    "536": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "537": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "POP",
      "path": "0"
    },
    "538": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "POP",
      "path": "0"
    },
    "539": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "POP",
      "path": "0"
    },
    "540": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "542": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "543": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "544": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "545": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SUB",
      "path": "0"
    },
    "546": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "547": {
      "fn": null,
      "offset": [
        9727,
        9745
      ],
      "op": "RETURN",
      "path": "0"
    },
    "548": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12413,
        12590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "549": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12413,
        12590
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "550": {
      "op": "DUP1"
    },
    "551": {
      "op": "ISZERO"
    },
    "552": {
      "op": "PUSH2",
      "value": "0x230"
    },
    "555": {
      "op": "JUMPI"
    },
    "556": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "558": {
      "op": "DUP1"
    },
    "559": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.deprecate",
      "offset": [
        12413,
        12590
      ],
      "op": "REVERT",
      "path": "0"
    },
    "560": {
      "op": "JUMPDEST"
    },
    "561": {
      "op": "POP"
    },
    "562": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12413,
        12590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "571": {
      "op": "EXP"
    },
    "572": {
      "op": "SUB"
    },
    "573": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12413,
        12590
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "575": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12413,
        12590
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "576": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12413,
        12590
      ],
      "op": "AND",
      "path": "0"
    },
    "577": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12413,
        12590
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x650"
    },
    "580": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12413,
        12590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "581": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12413,
        12590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "582": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12413,
        12590
      ],
      "op": "STOP",
      "path": "0"
    },
    "583": {
      "fn": "TetherToken.approve",
      "offset": [
        11685,
        11981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "584": {
      "fn": "TetherToken.approve",
      "offset": [
        11685,
        11981
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "585": {
      "op": "DUP1"
    },
    "586": {
      "op": "ISZERO"
    },
    "587": {
      "op": "PUSH2",
      "value": "0x253"
    },
    "590": {
      "op": "JUMPI"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "593": {
      "op": "DUP1"
    },
    "594": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.approve",
      "offset": [
        11685,
        11981
      ],
      "op": "REVERT",
      "path": "0"
    },
    "595": {
      "op": "JUMPDEST"
    },
    "596": {
      "op": "POP"
    },
    "597": {
      "fn": "TetherToken.approve",
      "offset": [
        11685,
        11981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "604": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "606": {
      "op": "EXP"
    },
    "607": {
      "op": "SUB"
    },
    "608": {
      "fn": "TetherToken.approve",
      "offset": [
        11685,
        11981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "610": {
      "fn": "TetherToken.approve",
      "offset": [
        11685,
        11981
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "611": {
      "fn": "TetherToken.approve",
      "offset": [
        11685,
        11981
      ],
      "op": "AND",
      "path": "0"
    },
    "612": {
      "fn": "TetherToken.approve",
      "offset": [
        11685,
        11981
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "614": {
      "fn": "TetherToken.approve",
      "offset": [
        11685,
        11981
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "615": {
      "fn": "TetherToken.approve",
      "offset": [
        11685,
        11981
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E8"
    },
    "618": {
      "fn": "TetherToken.approve",
      "offset": [
        11685,
        11981
      ],
      "op": "JUMP",
      "path": "0"
    },
    "619": {
      "offset": [
        9839,
        9861
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "620": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "621": {
      "op": "DUP1"
    },
    "622": {
      "op": "ISZERO"
    },
    "623": {
      "op": "PUSH2",
      "value": "0x277"
    },
    "626": {
      "op": "JUMPI"
    },
    "627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "629": {
      "op": "DUP1"
    },
    "630": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "REVERT",
      "path": "0"
    },
    "631": {
      "op": "JUMPDEST"
    },
    "632": {
      "offset": [
        9839,
        9861
      ],
      "op": "POP",
      "path": "0"
    },
    "633": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "636": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AA"
    },
    "639": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "JUMP",
      "path": "0"
    },
    "640": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "641": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "643": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "DUP1",
      "path": "0"
    },
    "644": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "645": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "646": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "647": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "648": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "DUP3",
      "path": "0"
    },
    "649": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "650": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "651": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "652": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "DUP2",
      "path": "0"
    },
    "653": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "654": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "SUB",
      "path": "0"
    },
    "655": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "657": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "ADD",
      "path": "0"
    },
    "658": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "659": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "RETURN",
      "path": "0"
    },
    "660": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8438,
        8580
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "661": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8438,
        8580
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "662": {
      "op": "DUP1"
    },
    "663": {
      "op": "ISZERO"
    },
    "664": {
      "op": "PUSH2",
      "value": "0x2A0"
    },
    "667": {
      "op": "JUMPI"
    },
    "668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "670": {
      "op": "DUP1"
    },
    "671": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "BlackList.addBlackList",
      "offset": [
        8438,
        8580
      ],
      "op": "REVERT",
      "path": "0"
    },
    "672": {
      "op": "JUMPDEST"
    },
    "673": {
      "op": "POP"
    },
    "674": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8438,
        8580
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "681": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "683": {
      "op": "EXP"
    },
    "684": {
      "op": "SUB"
    },
    "685": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8438,
        8580
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "687": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8438,
        8580
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "688": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8438,
        8580
      ],
      "op": "AND",
      "path": "0"
    },
    "689": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8438,
        8580
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BA"
    },
    "692": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8438,
        8580
      ],
      "op": "JUMP",
      "path": "0"
    },
    "693": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "694": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "695": {
      "op": "DUP1"
    },
    "696": {
      "op": "ISZERO"
    },
    "697": {
      "op": "PUSH2",
      "value": "0x2C1"
    },
    "700": {
      "op": "JUMPI"
    },
    "701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "703": {
      "op": "DUP1"
    },
    "704": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "REVERT",
      "path": "0"
    },
    "705": {
      "op": "JUMPDEST"
    },
    "706": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "POP",
      "path": "0"
    },
    "707": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CA"
    },
    "710": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82C"
    },
    "713": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "JUMP",
      "path": "0"
    },
    "714": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "715": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "717": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "DUP1",
      "path": "0"
    },
    "718": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "719": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "720": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "DUP3",
      "path": "0"
    },
    "721": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "722": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "723": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "724": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "DUP2",
      "path": "0"
    },
    "725": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "726": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "SUB",
      "path": "0"
    },
    "727": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "729": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "ADD",
      "path": "0"
    },
    "730": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "731": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "RETURN",
      "path": "0"
    },
    "732": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "733": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "734": {
      "op": "DUP1"
    },
    "735": {
      "op": "ISZERO"
    },
    "736": {
      "op": "PUSH2",
      "value": "0x2E8"
    },
    "739": {
      "op": "JUMPI"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "742": {
      "op": "DUP1"
    },
    "743": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "REVERT",
      "path": "0"
    },
    "744": {
      "op": "JUMPDEST"
    },
    "745": {
      "op": "POP"
    },
    "746": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "751": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "753": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "755": {
      "op": "EXP"
    },
    "756": {
      "op": "SUB"
    },
    "757": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "759": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "760": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "DUP2",
      "path": "0"
    },
    "761": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "AND",
      "path": "0"
    },
    "762": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "763": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "765": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "766": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "AND",
      "path": "0"
    },
    "767": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "769": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "770": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E8"
    },
    "773": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "JUMP",
      "path": "0"
    },
    "774": {
      "offset": [
        9803,
        9833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "775": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "776": {
      "op": "DUP1"
    },
    "777": {
      "op": "ISZERO"
    },
    "778": {
      "op": "PUSH2",
      "value": "0x312"
    },
    "781": {
      "op": "JUMPI"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "784": {
      "op": "DUP1"
    },
    "785": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "REVERT",
      "path": "0"
    },
    "786": {
      "op": "JUMPDEST"
    },
    "787": {
      "offset": [
        9803,
        9833
      ],
      "op": "POP",
      "path": "0"
    },
    "788": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31B"
    },
    "791": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9BE"
    },
    "794": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "JUMP",
      "path": "0"
    },
    "795": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "796": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "798": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "DUP1",
      "path": "0"
    },
    "799": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "806": {
      "op": "EXP"
    },
    "807": {
      "op": "SUB"
    },
    "808": {
      "offset": [
        9803,
        9833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "809": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "810": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "AND",
      "path": "0"
    },
    "811": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "DUP3",
      "path": "0"
    },
    "812": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "813": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "814": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "815": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "816": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "817": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "SUB",
      "path": "0"
    },
    "818": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "820": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "ADD",
      "path": "0"
    },
    "821": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "822": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "RETURN",
      "path": "0"
    },
    "823": {
      "offset": [
        2849,
        2889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "824": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "825": {
      "op": "DUP1"
    },
    "826": {
      "op": "ISZERO"
    },
    "827": {
      "op": "PUSH2",
      "value": "0x343"
    },
    "830": {
      "op": "JUMPI"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "833": {
      "op": "DUP1"
    },
    "834": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "REVERT",
      "path": "0"
    },
    "835": {
      "op": "JUMPDEST"
    },
    "836": {
      "op": "POP"
    },
    "837": {
      "offset": [
        2849,
        2889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CA"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "842": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "846": {
      "op": "EXP"
    },
    "847": {
      "op": "SUB"
    },
    "848": {
      "offset": [
        2849,
        2889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "850": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "851": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "AND",
      "path": "0"
    },
    "852": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9CD"
    },
    "855": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "856": {
      "offset": [
        9777,
        9797
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "857": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9777,
        9797
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "858": {
      "op": "DUP1"
    },
    "859": {
      "op": "ISZERO"
    },
    "860": {
      "op": "PUSH2",
      "value": "0x364"
    },
    "863": {
      "op": "JUMPI"
    },
    "864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "866": {
      "op": "DUP1"
    },
    "867": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.transferFrom",
      "offset": [
        9777,
        9797
      ],
      "op": "REVERT",
      "path": "0"
    },
    "868": {
      "op": "JUMPDEST"
    },
    "869": {
      "offset": [
        9777,
        9797
      ],
      "op": "POP",
      "path": "0"
    },
    "870": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9777,
        9797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CA"
    },
    "873": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9777,
        9797
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DF"
    },
    "876": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9777,
        9797
      ],
      "op": "JUMP",
      "path": "0"
    },
    "877": {
      "offset": [
        3011,
        3037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "878": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        3011,
        3037
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "879": {
      "op": "DUP1"
    },
    "880": {
      "op": "ISZERO"
    },
    "881": {
      "op": "PUSH2",
      "value": "0x379"
    },
    "884": {
      "op": "JUMPI"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "887": {
      "op": "DUP1"
    },
    "888": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.transferFrom",
      "offset": [
        3011,
        3037
      ],
      "op": "REVERT",
      "path": "0"
    },
    "889": {
      "op": "JUMPDEST"
    },
    "890": {
      "offset": [
        3011,
        3037
      ],
      "op": "POP",
      "path": "0"
    },
    "891": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        3011,
        3037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CA"
    },
    "894": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        3011,
        3037
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E5"
    },
    "897": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        3011,
        3037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "898": {
      "offset": [
        1976,
        2000
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "899": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        1976,
        2000
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "900": {
      "op": "DUP1"
    },
    "901": {
      "op": "ISZERO"
    },
    "902": {
      "op": "PUSH2",
      "value": "0x38E"
    },
    "905": {
      "op": "JUMPI"
    },
    "906": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "908": {
      "op": "DUP1"
    },
    "909": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.transferFrom",
      "offset": [
        1976,
        2000
      ],
      "op": "REVERT",
      "path": "0"
    },
    "910": {
      "op": "JUMPDEST"
    },
    "911": {
      "offset": [
        1976,
        2000
      ],
      "op": "POP",
      "path": "0"
    },
    "912": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        1976,
        2000
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CA"
    },
    "915": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        1976,
        2000
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9EB"
    },
    "918": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        1976,
        2000
      ],
      "op": "JUMP",
      "path": "0"
    },
    "919": {
      "fn": "Pausable.unpause",
      "offset": [
        7903,
        7990
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "920": {
      "fn": "Pausable.unpause",
      "offset": [
        7903,
        7990
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "921": {
      "op": "DUP1"
    },
    "922": {
      "op": "ISZERO"
    },
    "923": {
      "op": "PUSH2",
      "value": "0x3A3"
    },
    "926": {
      "op": "JUMPI"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "929": {
      "op": "DUP1"
    },
    "930": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Pausable.unpause",
      "offset": [
        7903,
        7990
      ],
      "op": "REVERT",
      "path": "0"
    },
    "931": {
      "op": "JUMPDEST"
    },
    "932": {
      "fn": "Pausable.unpause",
      "offset": [
        7903,
        7990
      ],
      "op": "POP",
      "path": "0"
    },
    "933": {
      "fn": "Pausable.unpause",
      "offset": [
        7903,
        7990
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "936": {
      "fn": "Pausable.unpause",
      "offset": [
        7903,
        7990
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F1"
    },
    "939": {
      "fn": "Pausable.unpause",
      "offset": [
        7903,
        7990
      ],
      "op": "JUMP",
      "path": "0"
    },
    "940": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8162,
        8284
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "941": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8162,
        8284
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "942": {
      "op": "DUP1"
    },
    "943": {
      "op": "ISZERO"
    },
    "944": {
      "op": "PUSH2",
      "value": "0x3B8"
    },
    "947": {
      "op": "JUMPI"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "950": {
      "op": "DUP1"
    },
    "951": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8162,
        8284
      ],
      "op": "REVERT",
      "path": "0"
    },
    "952": {
      "op": "JUMPDEST"
    },
    "953": {
      "op": "POP"
    },
    "954": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8162,
        8284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "963": {
      "op": "EXP"
    },
    "964": {
      "op": "SUB"
    },
    "965": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8162,
        8284
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "967": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8162,
        8284
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "968": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8162,
        8284
      ],
      "op": "AND",
      "path": "0"
    },
    "969": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8162,
        8284
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA67"
    },
    "972": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8162,
        8284
      ],
      "op": "JUMP",
      "path": "0"
    },
    "973": {
      "offset": [
        4585,
        4646
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "974": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "975": {
      "op": "DUP1"
    },
    "976": {
      "op": "ISZERO"
    },
    "977": {
      "op": "PUSH2",
      "value": "0x3D9"
    },
    "980": {
      "op": "JUMPI"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "983": {
      "op": "DUP1"
    },
    "984": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "REVERT",
      "path": "0"
    },
    "985": {
      "op": "JUMPDEST"
    },
    "986": {
      "op": "POP"
    },
    "987": {
      "offset": [
        4585,
        4646
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CA"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "996": {
      "op": "EXP"
    },
    "997": {
      "op": "SUB"
    },
    "998": {
      "offset": [
        4585,
        4646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1000": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1001": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1002": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "AND",
      "path": "0"
    },
    "1003": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1004": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1006": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1007": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "AND",
      "path": "0"
    },
    "1008": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA89"
    },
    "1011": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1012": {
      "offset": [
        7317,
        7343
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1013": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        7317,
        7343
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1014": {
      "op": "DUP1"
    },
    "1015": {
      "op": "ISZERO"
    },
    "1016": {
      "op": "PUSH2",
      "value": "0x400"
    },
    "1019": {
      "op": "JUMPI"
    },
    "1020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1022": {
      "op": "DUP1"
    },
    "1023": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        7317,
        7343
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1024": {
      "op": "JUMPDEST"
    },
    "1025": {
      "offset": [
        7317,
        7343
      ],
      "op": "POP",
      "path": "0"
    },
    "1026": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        7317,
        7343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "1029": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        7317,
        7343
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAA6"
    },
    "1032": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        7317,
        7343
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1033": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11365,
        11603
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1034": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11365,
        11603
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1035": {
      "op": "DUP1"
    },
    "1036": {
      "op": "ISZERO"
    },
    "1037": {
      "op": "PUSH2",
      "value": "0x415"
    },
    "1040": {
      "op": "JUMPI"
    },
    "1041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1043": {
      "op": "DUP1"
    },
    "1044": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.balanceOf",
      "offset": [
        11365,
        11603
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1045": {
      "op": "JUMPDEST"
    },
    "1046": {
      "op": "POP"
    },
    "1047": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11365,
        11603
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CA"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1056": {
      "op": "EXP"
    },
    "1057": {
      "op": "SUB"
    },
    "1058": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11365,
        11603
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1060": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11365,
        11603
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1061": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11365,
        11603
      ],
      "op": "AND",
      "path": "0"
    },
    "1062": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11365,
        11603
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB6"
    },
    "1065": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11365,
        11603
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1066": {
      "fn": "Pausable.pause",
      "offset": [
        7736,
        7821
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1067": {
      "fn": "Pausable.pause",
      "offset": [
        7736,
        7821
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1068": {
      "op": "DUP1"
    },
    "1069": {
      "op": "ISZERO"
    },
    "1070": {
      "op": "PUSH2",
      "value": "0x436"
    },
    "1073": {
      "op": "JUMPI"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1076": {
      "op": "DUP1"
    },
    "1077": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Pausable.pause",
      "offset": [
        7736,
        7821
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1078": {
      "op": "JUMPDEST"
    },
    "1079": {
      "fn": "Pausable.pause",
      "offset": [
        7736,
        7821
      ],
      "op": "POP",
      "path": "0"
    },
    "1080": {
      "fn": "Pausable.pause",
      "offset": [
        7736,
        7821
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "1083": {
      "fn": "Pausable.pause",
      "offset": [
        7736,
        7821
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB76"
    },
    "1086": {
      "fn": "Pausable.pause",
      "offset": [
        7736,
        7821
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1087": {
      "fn": "BlackList.getOwner",
      "offset": [
        8290,
        8375
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1088": {
      "fn": "BlackList.getOwner",
      "offset": [
        8290,
        8375
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1089": {
      "op": "DUP1"
    },
    "1090": {
      "op": "ISZERO"
    },
    "1091": {
      "op": "PUSH2",
      "value": "0x44B"
    },
    "1094": {
      "op": "JUMPI"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1097": {
      "op": "DUP1"
    },
    "1098": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "BlackList.getOwner",
      "offset": [
        8290,
        8375
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1099": {
      "op": "JUMPDEST"
    },
    "1100": {
      "fn": "BlackList.getOwner",
      "offset": [
        8290,
        8375
      ],
      "op": "POP",
      "path": "0"
    },
    "1101": {
      "fn": "BlackList.getOwner",
      "offset": [
        8290,
        8375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31B"
    },
    "1104": {
      "fn": "BlackList.getOwner",
      "offset": [
        8290,
        8375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF1"
    },
    "1107": {
      "fn": "BlackList.getOwner",
      "offset": [
        8290,
        8375
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1108": {
      "offset": [
        1121,
        1141
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1109": {
      "fn": "BlackList.getOwner",
      "offset": [
        1121,
        1141
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1110": {
      "op": "DUP1"
    },
    "1111": {
      "op": "ISZERO"
    },
    "1112": {
      "op": "PUSH2",
      "value": "0x460"
    },
    "1115": {
      "op": "JUMPI"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1118": {
      "op": "DUP1"
    },
    "1119": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "BlackList.getOwner",
      "offset": [
        1121,
        1141
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1120": {
      "op": "JUMPDEST"
    },
    "1121": {
      "offset": [
        1121,
        1141
      ],
      "op": "POP",
      "path": "0"
    },
    "1122": {
      "fn": "BlackList.getOwner",
      "offset": [
        1121,
        1141
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x31B"
    },
    "1125": {
      "fn": "BlackList.getOwner",
      "offset": [
        1121,
        1141
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC00"
    },
    "1128": {
      "fn": "BlackList.getOwner",
      "offset": [
        1121,
        1141
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1129": {
      "offset": [
        9751,
        9771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1130": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1131": {
      "op": "DUP1"
    },
    "1132": {
      "op": "ISZERO"
    },
    "1133": {
      "op": "PUSH2",
      "value": "0x475"
    },
    "1136": {
      "op": "JUMPI"
    },
    "1137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1139": {
      "op": "DUP1"
    },
    "1140": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1141": {
      "op": "JUMPDEST"
    },
    "1142": {
      "offset": [
        9751,
        9771
      ],
      "op": "POP",
      "path": "0"
    },
    "1143": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AF"
    },
    "1146": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC0F"
    },
    "1149": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1150": {
      "fn": "TetherToken.transfer",
      "offset": [
        10527,
        10846
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1151": {
      "fn": "TetherToken.transfer",
      "offset": [
        10527,
        10846
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1152": {
      "op": "DUP1"
    },
    "1153": {
      "op": "ISZERO"
    },
    "1154": {
      "op": "PUSH2",
      "value": "0x48A"
    },
    "1157": {
      "op": "JUMPI"
    },
    "1158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1160": {
      "op": "DUP1"
    },
    "1161": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.transfer",
      "offset": [
        10527,
        10846
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1162": {
      "op": "JUMPDEST"
    },
    "1163": {
      "op": "POP"
    },
    "1164": {
      "fn": "TetherToken.transfer",
      "offset": [
        10527,
        10846
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1173": {
      "op": "EXP"
    },
    "1174": {
      "op": "SUB"
    },
    "1175": {
      "fn": "TetherToken.transfer",
      "offset": [
        10527,
        10846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1177": {
      "fn": "TetherToken.transfer",
      "offset": [
        10527,
        10846
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1178": {
      "fn": "TetherToken.transfer",
      "offset": [
        10527,
        10846
      ],
      "op": "AND",
      "path": "0"
    },
    "1179": {
      "fn": "TetherToken.transfer",
      "offset": [
        10527,
        10846
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1181": {
      "fn": "TetherToken.transfer",
      "offset": [
        10527,
        10846
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1182": {
      "fn": "TetherToken.transfer",
      "offset": [
        10527,
        10846
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC6A"
    },
    "1185": {
      "fn": "TetherToken.transfer",
      "offset": [
        10527,
        10846
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1186": {
      "fn": "TetherToken.setParams",
      "offset": [
        13742,
        14120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1187": {
      "fn": "TetherToken.setParams",
      "offset": [
        13742,
        14120
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1188": {
      "op": "DUP1"
    },
    "1189": {
      "op": "ISZERO"
    },
    "1190": {
      "op": "PUSH2",
      "value": "0x4AE"
    },
    "1193": {
      "op": "JUMPI"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1196": {
      "op": "DUP1"
    },
    "1197": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.setParams",
      "offset": [
        13742,
        14120
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1198": {
      "op": "JUMPDEST"
    },
    "1199": {
      "op": "POP"
    },
    "1200": {
      "fn": "TetherToken.setParams",
      "offset": [
        13742,
        14120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "1203": {
      "fn": "TetherToken.setParams",
      "offset": [
        13742,
        14120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1205": {
      "fn": "TetherToken.setParams",
      "offset": [
        13742,
        14120
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1206": {
      "fn": "TetherToken.setParams",
      "offset": [
        13742,
        14120
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1208": {
      "fn": "TetherToken.setParams",
      "offset": [
        13742,
        14120
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1209": {
      "fn": "TetherToken.setParams",
      "offset": [
        13742,
        14120
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4F"
    },
    "1212": {
      "fn": "TetherToken.setParams",
      "offset": [
        13742,
        14120
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1213": {
      "fn": "TetherToken.issue",
      "offset": [
        13023,
        13282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1214": {
      "fn": "TetherToken.issue",
      "offset": [
        13023,
        13282
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1215": {
      "op": "DUP1"
    },
    "1216": {
      "op": "ISZERO"
    },
    "1217": {
      "op": "PUSH2",
      "value": "0x4C9"
    },
    "1220": {
      "op": "JUMPI"
    },
    "1221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1223": {
      "op": "DUP1"
    },
    "1224": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.issue",
      "offset": [
        13023,
        13282
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1225": {
      "op": "JUMPDEST"
    },
    "1226": {
      "op": "POP"
    },
    "1227": {
      "fn": "TetherToken.issue",
      "offset": [
        13023,
        13282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "1230": {
      "fn": "TetherToken.issue",
      "offset": [
        13023,
        13282
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1232": {
      "fn": "TetherToken.issue",
      "offset": [
        13023,
        13282
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1233": {
      "fn": "TetherToken.issue",
      "offset": [
        13023,
        13282
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDE4"
    },
    "1236": {
      "fn": "TetherToken.issue",
      "offset": [
        13023,
        13282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1237": {
      "fn": "TetherToken.redeem",
      "offset": [
        13506,
        13736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1238": {
      "fn": "TetherToken.redeem",
      "offset": [
        13506,
        13736
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1239": {
      "op": "DUP1"
    },
    "1240": {
      "op": "ISZERO"
    },
    "1241": {
      "op": "PUSH2",
      "value": "0x4E1"
    },
    "1244": {
      "op": "JUMPI"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1247": {
      "op": "DUP1"
    },
    "1248": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.redeem",
      "offset": [
        13506,
        13736
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1249": {
      "op": "JUMPDEST"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "fn": "TetherToken.redeem",
      "offset": [
        13506,
        13736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "1254": {
      "fn": "TetherToken.redeem",
      "offset": [
        13506,
        13736
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1256": {
      "fn": "TetherToken.redeem",
      "offset": [
        13506,
        13736
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1257": {
      "fn": "TetherToken.redeem",
      "offset": [
        13506,
        13736
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE8F"
    },
    "1260": {
      "fn": "TetherToken.redeem",
      "offset": [
        13506,
        13736
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1261": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1262": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1263": {
      "op": "DUP1"
    },
    "1264": {
      "op": "ISZERO"
    },
    "1265": {
      "op": "PUSH2",
      "value": "0x4F9"
    },
    "1268": {
      "op": "JUMPI"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1271": {
      "op": "DUP1"
    },
    "1272": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1273": {
      "op": "JUMPDEST"
    },
    "1274": {
      "op": "POP"
    },
    "1275": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CA"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1284": {
      "op": "EXP"
    },
    "1285": {
      "op": "SUB"
    },
    "1286": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1288": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1289": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1290": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "AND",
      "path": "0"
    },
    "1291": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1292": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1294": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1295": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "AND",
      "path": "0"
    },
    "1296": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3A"
    },
    "1299": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1300": {
      "offset": [
        2974,
        3005
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1301": {
      "fn": "TetherToken.allowance",
      "offset": [
        2974,
        3005
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1302": {
      "op": "DUP1"
    },
    "1303": {
      "op": "ISZERO"
    },
    "1304": {
      "op": "PUSH2",
      "value": "0x520"
    },
    "1307": {
      "op": "JUMPI"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1310": {
      "op": "DUP1"
    },
    "1311": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.allowance",
      "offset": [
        2974,
        3005
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1312": {
      "op": "JUMPDEST"
    },
    "1313": {
      "offset": [
        2974,
        3005
      ],
      "op": "POP",
      "path": "0"
    },
    "1314": {
      "fn": "TetherToken.allowance",
      "offset": [
        2974,
        3005
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CA"
    },
    "1317": {
      "fn": "TetherToken.allowance",
      "offset": [
        2974,
        3005
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1005"
    },
    "1320": {
      "fn": "TetherToken.allowance",
      "offset": [
        2974,
        3005
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1321": {
      "offset": [
        8381,
        8427
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1322": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1323": {
      "op": "DUP1"
    },
    "1324": {
      "op": "ISZERO"
    },
    "1325": {
      "op": "PUSH2",
      "value": "0x535"
    },
    "1328": {
      "op": "JUMPI"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1331": {
      "op": "DUP1"
    },
    "1332": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1333": {
      "op": "JUMPDEST"
    },
    "1334": {
      "op": "POP"
    },
    "1335": {
      "offset": [
        8381,
        8427
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x280"
    },
    "1338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1340": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1342": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1344": {
      "op": "EXP"
    },
    "1345": {
      "op": "SUB"
    },
    "1346": {
      "offset": [
        8381,
        8427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1348": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1349": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "AND",
      "path": "0"
    },
    "1350": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100B"
    },
    "1353": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1354": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8586,
        8743
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1355": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8586,
        8743
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1356": {
      "op": "DUP1"
    },
    "1357": {
      "op": "ISZERO"
    },
    "1358": {
      "op": "PUSH2",
      "value": "0x556"
    },
    "1361": {
      "op": "JUMPI"
    },
    "1362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1364": {
      "op": "DUP1"
    },
    "1365": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "BlackList.removeBlackList",
      "offset": [
        8586,
        8743
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1366": {
      "op": "JUMPDEST"
    },
    "1367": {
      "op": "POP"
    },
    "1368": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8586,
        8743
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "1371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1377": {
      "op": "EXP"
    },
    "1378": {
      "op": "SUB"
    },
    "1379": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8586,
        8743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1381": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8586,
        8743
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1382": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8586,
        8743
      ],
      "op": "AND",
      "path": "0"
    },
    "1383": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8586,
        8743
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1020"
    },
    "1386": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8586,
        8743
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1387": {
      "offset": [
        4653,
        4695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1388": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        4653,
        4695
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1389": {
      "op": "DUP1"
    },
    "1390": {
      "op": "ISZERO"
    },
    "1391": {
      "op": "PUSH2",
      "value": "0x577"
    },
    "1394": {
      "op": "JUMPI"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1397": {
      "op": "DUP1"
    },
    "1398": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "BlackList.removeBlackList",
      "offset": [
        4653,
        4695
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1399": {
      "op": "JUMPDEST"
    },
    "1400": {
      "offset": [
        4653,
        4695
      ],
      "op": "POP",
      "path": "0"
    },
    "1401": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        4653,
        4695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2CA"
    },
    "1404": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        4653,
        4695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x108F"
    },
    "1407": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        4653,
        4695
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1408": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1671,
        1818
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1409": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1671,
        1818
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1410": {
      "op": "DUP1"
    },
    "1411": {
      "op": "ISZERO"
    },
    "1412": {
      "op": "PUSH2",
      "value": "0x58C"
    },
    "1415": {
      "op": "JUMPI"
    },
    "1416": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1418": {
      "op": "DUP1"
    },
    "1419": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.transferOwnership",
      "offset": [
        1671,
        1818
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1420": {
      "op": "JUMPDEST"
    },
    "1421": {
      "op": "POP"
    },
    "1422": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1671,
        1818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1431": {
      "op": "EXP"
    },
    "1432": {
      "op": "SUB"
    },
    "1433": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1671,
        1818
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1435": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1671,
        1818
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1436": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1671,
        1818
      ],
      "op": "AND",
      "path": "0"
    },
    "1437": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1671,
        1818
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1095"
    },
    "1440": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1671,
        1818
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1441": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8749,
        9067
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1442": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8749,
        9067
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1443": {
      "op": "DUP1"
    },
    "1444": {
      "op": "ISZERO"
    },
    "1445": {
      "op": "PUSH2",
      "value": "0x5AD"
    },
    "1448": {
      "op": "JUMPI"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1451": {
      "op": "DUP1"
    },
    "1452": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8749,
        9067
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1453": {
      "op": "JUMPDEST"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8749,
        9067
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x245"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1464": {
      "op": "EXP"
    },
    "1465": {
      "op": "SUB"
    },
    "1466": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8749,
        9067
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1468": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8749,
        9067
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "1469": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8749,
        9067
      ],
      "op": "AND",
      "path": "0"
    },
    "1470": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8749,
        9067
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E7"
    },
    "1473": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8749,
        9067
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1474": {
      "offset": [
        9727,
        9745
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1475": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x7"
    },
    "1477": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1478": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1479": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1481": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1482": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1483": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1485": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1487": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1489": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1490": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "AND",
      "path": "0"
    },
    "1491": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1492": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1495": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "MUL",
      "path": "0"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1498": {
      "op": "NOT"
    },
    "1499": {
      "offset": [
        9727,
        9745
      ],
      "op": "ADD",
      "path": "0"
    },
    "1500": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1501": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1502": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "AND",
      "path": "0"
    },
    "1503": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1504": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1505": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1506": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DIV",
      "path": "0"
    },
    "1507": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1509": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1510": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "ADD",
      "path": "0"
    },
    "1511": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1512": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1513": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DIV",
      "path": "0"
    },
    "1514": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1515": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "MUL",
      "path": "0"
    },
    "1516": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1517": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "ADD",
      "path": "0"
    },
    "1518": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1519": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "ADD",
      "path": "0"
    },
    "1520": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1521": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1522": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1523": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1524": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1525": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1526": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1527": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1528": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1529": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "ADD",
      "path": "0"
    },
    "1530": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1531": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1532": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1533": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1534": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x648"
    },
    "1537": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1538": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1539": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1541": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "LT",
      "path": "0"
    },
    "1542": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61D"
    },
    "1545": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1546": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1549": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1550": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1551": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1552": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DIV",
      "path": "0"
    },
    "1553": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "MUL",
      "path": "0"
    },
    "1554": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1555": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1556": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1557": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1559": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "ADD",
      "path": "0"
    },
    "1560": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1561": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x648"
    },
    "1564": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1565": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1566": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1567": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "ADD",
      "path": "0"
    },
    "1568": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1569": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1570": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1572": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1573": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1575": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1577": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1578": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1579": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1580": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1581": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1582": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1583": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1584": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1585": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1587": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "ADD",
      "path": "0"
    },
    "1588": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1589": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1591": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "ADD",
      "path": "0"
    },
    "1592": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1593": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1594": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "GT",
      "path": "0"
    },
    "1595": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x62B"
    },
    "1598": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1599": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1600": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1601": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SUB",
      "path": "0"
    },
    "1602": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1604": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "AND",
      "path": "0"
    },
    "1605": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1606": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "ADD",
      "path": "0"
    },
    "1607": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1608": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1609": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "POP",
      "path": "0"
    },
    "1610": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "POP",
      "path": "0"
    },
    "1611": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "POP",
      "path": "0"
    },
    "1612": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "POP",
      "path": "0"
    },
    "1613": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "POP",
      "path": "0"
    },
    "1614": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9727,
        9745
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1615": {
      "fn": "BlackList.destroyBlackFunds",
      "jump": "o",
      "offset": [
        9727,
        9745
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1616": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12413,
        12590
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1617": {
      "offset": [
        1479,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1619": {
      "fn": "TetherToken.deprecate",
      "offset": [
        1479,
        1484
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1624": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1626": {
      "op": "EXP"
    },
    "1627": {
      "op": "SUB"
    },
    "1628": {
      "offset": [
        1479,
        1484
      ],
      "op": "AND",
      "path": "0"
    },
    "1629": {
      "offset": [
        1465,
        1475
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1630": {
      "offset": [
        1465,
        1484
      ],
      "op": "EQ",
      "path": "0"
    },
    "1631": {
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x667"
    },
    "1634": {
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1635": {
      "fn": "TetherToken.deprecate",
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1637": {
      "fn": "TetherToken.deprecate",
      "offset": [
        1457,
        1485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1638": {
      "fn": "TetherToken.deprecate",
      "offset": [
        1457,
        1485
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1639": {
      "fn": "TetherToken.deprecate",
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1640": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12485,
        12495
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0xA"
    },
    "1642": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12485,
        12502
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1643": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12485,
        12502
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1646": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1648": {
      "op": "EXP"
    },
    "1649": {
      "op": "PUSH21",
      "value": "0xFF0000000000000000000000000000000000000000"
    },
    "1671": {
      "op": "NOT"
    },
    "1672": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12485,
        12502
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1673": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12485,
        12502
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1674": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12485,
        12502
      ],
      "op": "AND",
      "path": "0"
    },
    "1675": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12485,
        12502
      ],
      "op": "OR",
      "path": "0"
    },
    "1676": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1697": {
      "op": "NOT"
    },
    "1698": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12512,
        12546
      ],
      "op": "AND",
      "path": "0",
      "statement": 1
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1705": {
      "op": "EXP"
    },
    "1706": {
      "op": "SUB"
    },
    "1707": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12512,
        12546
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1708": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12512,
        12546
      ],
      "op": "AND",
      "path": "0"
    },
    "1709": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12512,
        12546
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1710": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12512,
        12546
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1711": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12512,
        12546
      ],
      "op": "OR",
      "path": "0"
    },
    "1712": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12512,
        12546
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1713": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12512,
        12546
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1714": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12512,
        12546
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1715": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x40"
    },
    "1717": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1718": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1719": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1720": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1721": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1722": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1723": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xCC358699805E9A8B7F77B522628C7CB9ABD07D9EFB86B6FB616AF1609036A99E"
    },
    "1756": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1757": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1759": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1760": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1761": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1762": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "SUB",
      "path": "0"
    },
    "1763": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "ADD",
      "path": "0"
    },
    "1764": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1765": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12556,
        12583
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1766": {
      "fn": "TetherToken.deprecate",
      "offset": [
        12413,
        12590
      ],
      "op": "POP",
      "path": "0"
    },
    "1767": {
      "fn": "TetherToken.deprecate",
      "jump": "o",
      "offset": [
        12413,
        12590
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1768": {
      "fn": "TetherToken.approve",
      "offset": [
        11685,
        11981
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1769": {
      "fn": "TetherToken.approve",
      "offset": [
        11756,
        11762
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1771": {
      "offset": [
        3184,
        3192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1773": {
      "offset": [
        3166,
        3174
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1774": {
      "offset": [
        3166,
        3192
      ],
      "op": "LT",
      "path": "0"
    },
    "1775": {
      "offset": [
        3164,
        3193
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1776": {
      "offset": [
        3156,
        3194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F8"
    },
    "1779": {
      "offset": [
        3156,
        3194
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1780": {
      "fn": "TetherToken.approve",
      "offset": [
        3156,
        3194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1782": {
      "fn": "TetherToken.approve",
      "offset": [
        3156,
        3194
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1783": {
      "fn": "TetherToken.approve",
      "offset": [
        3156,
        3194
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1784": {
      "fn": "TetherToken.approve",
      "offset": [
        3156,
        3194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1785": {
      "fn": "TetherToken.approve",
      "offset": [
        11778,
        11788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1787": {
      "fn": "TetherToken.approve",
      "offset": [
        11778,
        11788
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1790": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1792": {
      "op": "EXP"
    },
    "1793": {
      "fn": "TetherToken.approve",
      "offset": [
        11778,
        11788
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1794": {
      "fn": "TetherToken.approve",
      "offset": [
        11778,
        11788
      ],
      "op": "DIV",
      "path": "0"
    },
    "1795": {
      "fn": "TetherToken.approve",
      "offset": [
        11778,
        11788
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1797": {
      "branch": 71,
      "fn": "TetherToken.approve",
      "offset": [
        11778,
        11788
      ],
      "op": "AND",
      "path": "0"
    },
    "1798": {
      "fn": "TetherToken.approve",
      "offset": [
        11774,
        11975
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1799": {
      "fn": "TetherToken.approve",
      "offset": [
        11774,
        11975
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x79B"
    },
    "1802": {
      "branch": 71,
      "fn": "TetherToken.approve",
      "offset": [
        11774,
        11975
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1803": {
      "fn": "TetherToken.approve",
      "offset": [
        11833,
        11848
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0xA"
    },
    "1805": {
      "fn": "TetherToken.approve",
      "offset": [
        11833,
        11848
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1806": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1808": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1809": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1810": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xAEE92D3300000000000000000000000000000000000000000000000000000000"
    },
    "1843": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1844": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1845": {
      "fn": "TetherToken.approve",
      "offset": [
        11866,
        11876
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1846": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1848": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1849": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "ADD",
      "path": "0"
    },
    "1850": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1857": {
      "op": "EXP"
    },
    "1858": {
      "op": "SUB"
    },
    "1859": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1860": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1861": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "AND",
      "path": "0"
    },
    "1862": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "1864": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1865": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "ADD",
      "path": "0"
    },
    "1866": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1867": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "1869": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1870": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "ADD",
      "path": "0"
    },
    "1871": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1872": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1873": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1874": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1875": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1876": {
      "fn": "TetherToken.approve",
      "offset": [
        11833,
        11848
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1877": {
      "fn": "TetherToken.approve",
      "offset": [
        11833,
        11848
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1878": {
      "fn": "TetherToken.approve",
      "offset": [
        11833,
        11848
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1879": {
      "fn": "TetherToken.approve",
      "offset": [
        11833,
        11848
      ],
      "op": "AND",
      "path": "0"
    },
    "1880": {
      "fn": "TetherToken.approve",
      "offset": [
        11833,
        11848
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1881": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11865
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xAEE92D33"
    },
    "1886": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11865
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1887": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "1889": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1890": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1891": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "ADD",
      "path": "0"
    },
    "1892": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1893": {
      "fn": "TetherToken.approve",
      "offset": [
        11833,
        11848
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1895": {
      "fn": "TetherToken.approve",
      "offset": [
        11833,
        11848
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1896": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1897": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1898": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1899": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1900": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "SUB",
      "path": "0"
    },
    "1901": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "ADD",
      "path": "0"
    },
    "1902": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1903": {
      "fn": "TetherToken.approve",
      "offset": [
        11833,
        11848
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1904": {
      "fn": "TetherToken.approve",
      "offset": [
        11833,
        11848
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1905": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1906": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "1907": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1908": {
      "op": "DUP1"
    },
    "1909": {
      "op": "ISZERO"
    },
    "1910": {
      "op": "PUSH2",
      "value": "0x77E"
    },
    "1913": {
      "op": "JUMPI"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1916": {
      "op": "DUP1"
    },
    "1917": {
      "op": "REVERT"
    },
    "1918": {
      "op": "JUMPDEST"
    },
    "1919": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "POP",
      "path": "0"
    },
    "1920": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "GAS",
      "path": "0"
    },
    "1921": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "CALL",
      "path": "0"
    },
    "1922": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1923": {
      "op": "DUP1"
    },
    "1924": {
      "op": "ISZERO"
    },
    "1925": {
      "op": "PUSH2",
      "value": "0x792"
    },
    "1928": {
      "op": "JUMPI"
    },
    "1929": {
      "op": "RETURNDATASIZE"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1932": {
      "op": "DUP1"
    },
    "1933": {
      "op": "RETURNDATACOPY"
    },
    "1934": {
      "op": "RETURNDATASIZE"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1937": {
      "op": "REVERT"
    },
    "1938": {
      "op": "JUMPDEST"
    },
    "1939": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "POP",
      "path": "0"
    },
    "1940": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "POP",
      "path": "0"
    },
    "1941": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "POP",
      "path": "0"
    },
    "1942": {
      "fn": "TetherToken.approve",
      "offset": [
        11811,
        11895
      ],
      "op": "POP",
      "path": "0"
    },
    "1943": {
      "fn": "TetherToken.approve",
      "offset": [
        11804,
        11895
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7A5"
    },
    "1946": {
      "fn": "TetherToken.approve",
      "offset": [
        11804,
        11895
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1947": {
      "fn": "TetherToken.approve",
      "offset": [
        11774,
        11975
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1948": {
      "fn": "TetherToken.approve",
      "offset": [
        11933,
        11964
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 4,
      "value": "0x7A5"
    },
    "1951": {
      "fn": "TetherToken.approve",
      "offset": [
        11947,
        11955
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1952": {
      "fn": "TetherToken.approve",
      "offset": [
        11957,
        11963
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1953": {
      "fn": "TetherToken.approve",
      "offset": [
        11933,
        11946
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1193"
    },
    "1956": {
      "fn": "TetherToken.approve",
      "jump": "i",
      "offset": [
        11933,
        11964
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1957": {
      "fn": "TetherToken.approve",
      "offset": [
        11933,
        11964
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1958": {
      "fn": "TetherToken.approve",
      "offset": [
        11685,
        11981
      ],
      "op": "POP",
      "path": "0"
    },
    "1959": {
      "fn": "TetherToken.approve",
      "offset": [
        11685,
        11981
      ],
      "op": "POP",
      "path": "0"
    },
    "1960": {
      "fn": "TetherToken.approve",
      "offset": [
        11685,
        11981
      ],
      "op": "POP",
      "path": "0"
    },
    "1961": {
      "fn": "TetherToken.approve",
      "jump": "o",
      "offset": [
        11685,
        11981
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1962": {
      "offset": [
        9839,
        9861
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1963": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "1965": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1970": {
      "op": "EXP"
    },
    "1971": {
      "offset": [
        9839,
        9861
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1972": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "DIV",
      "path": "0"
    },
    "1973": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1975": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "AND",
      "path": "0"
    },
    "1976": {
      "fn": "TetherToken.approve",
      "offset": [
        9839,
        9861
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1977": {
      "fn": "TetherToken.approve",
      "jump": "o",
      "offset": [
        9839,
        9861
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1978": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8438,
        8580
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1979": {
      "offset": [
        1479,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1981": {
      "fn": "BlackList.addBlackList",
      "offset": [
        1479,
        1484
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1988": {
      "op": "EXP"
    },
    "1989": {
      "op": "SUB"
    },
    "1990": {
      "offset": [
        1479,
        1484
      ],
      "op": "AND",
      "path": "0"
    },
    "1991": {
      "offset": [
        1465,
        1475
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1992": {
      "offset": [
        1465,
        1484
      ],
      "op": "EQ",
      "path": "0"
    },
    "1993": {
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7D1"
    },
    "1996": {
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1997": {
      "fn": "BlackList.addBlackList",
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1999": {
      "fn": "BlackList.addBlackList",
      "offset": [
        1457,
        1485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2000": {
      "fn": "BlackList.addBlackList",
      "offset": [
        1457,
        1485
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2001": {
      "fn": "BlackList.addBlackList",
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2008": {
      "op": "EXP"
    },
    "2009": {
      "op": "SUB"
    },
    "2010": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8531
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 5
    },
    "2011": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8531
      ],
      "op": "AND",
      "path": "0"
    },
    "2012": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2014": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8531
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2015": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8531
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2016": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8531
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2017": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8520
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2019": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2021": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2022": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8531
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2023": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8531
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2024": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8531
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2026": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8531
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2027": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8531
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2028": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8531
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2029": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8531
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2030": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8538
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2031": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8538
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2034": {
      "op": "NOT"
    },
    "2035": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8538
      ],
      "op": "AND",
      "path": "0"
    },
    "2036": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8534,
        8538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2038": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8538
      ],
      "op": "OR",
      "path": "0"
    },
    "2039": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8538
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2040": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8507,
        8538
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2041": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 6
    },
    "2042": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2043": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2044": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2045": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2046": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2047": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2048": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x42E160154868087D6BFDC0CA23D96A1C1CFA32F1B72BA9BA27B69B98A0D819DC"
    },
    "2081": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2082": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2083": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2084": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "SUB",
      "path": "0"
    },
    "2085": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2086": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2087": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "ADD",
      "path": "0"
    },
    "2088": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2089": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8548,
        8573
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2090": {
      "fn": "BlackList.addBlackList",
      "offset": [
        8438,
        8580
      ],
      "op": "POP",
      "path": "0"
    },
    "2091": {
      "fn": "BlackList.addBlackList",
      "jump": "o",
      "offset": [
        8438,
        8580
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2092": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2093": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12721,
        12731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2095": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12721,
        12731
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2096": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12701,
        12705
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2098": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12701,
        12705
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2103": {
      "op": "EXP"
    },
    "2104": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12721,
        12731
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2105": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12721,
        12731
      ],
      "op": "DIV",
      "path": "0"
    },
    "2106": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12721,
        12731
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2108": {
      "branch": 72,
      "fn": "TetherToken.totalSupply",
      "offset": [
        12721,
        12731
      ],
      "op": "AND",
      "path": "0"
    },
    "2109": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12717,
        12859
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2110": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12717,
        12859
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E0"
    },
    "2113": {
      "branch": 72,
      "fn": "TetherToken.totalSupply",
      "offset": [
        12717,
        12859
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2114": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12768,
        12783
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0xA"
    },
    "2116": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12768,
        12783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2118": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12768,
        12783
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2119": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12768,
        12783
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2120": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12768,
        12783
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2121": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12768,
        12783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "2124": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12768,
        12783
      ],
      "op": "EXP",
      "path": "0"
    },
    "2125": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12768,
        12783
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2126": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12768,
        12783
      ],
      "op": "DIV",
      "path": "0"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2131": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2133": {
      "op": "EXP"
    },
    "2134": {
      "op": "SUB"
    },
    "2135": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12768,
        12783
      ],
      "op": "AND",
      "path": "0"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2142": {
      "op": "EXP"
    },
    "2143": {
      "op": "SUB"
    },
    "2144": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12796
      ],
      "op": "AND",
      "path": "0"
    },
    "2145": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12796
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "2150": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2152": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2153": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2154": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "2159": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "AND",
      "path": "0"
    },
    "2160": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "PUSH29",
      "path": "0",
      "value": "0x100000000000000000000000000000000000000000000000000000000"
    },
    "2190": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "MUL",
      "path": "0"
    },
    "2191": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2192": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2193": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2195": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "ADD",
      "path": "0"
    },
    "2196": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2198": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2200": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2201": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2202": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2203": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "SUB",
      "path": "0"
    },
    "2204": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2205": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2207": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2208": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2209": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "2210": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2211": {
      "op": "DUP1"
    },
    "2212": {
      "op": "ISZERO"
    },
    "2213": {
      "op": "PUSH2",
      "value": "0x8AD"
    },
    "2216": {
      "op": "JUMPI"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2219": {
      "op": "DUP1"
    },
    "2220": {
      "op": "REVERT"
    },
    "2221": {
      "op": "JUMPDEST"
    },
    "2222": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "POP",
      "path": "0"
    },
    "2223": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "GAS",
      "path": "0"
    },
    "2224": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "CALL",
      "path": "0"
    },
    "2225": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2226": {
      "op": "DUP1"
    },
    "2227": {
      "op": "ISZERO"
    },
    "2228": {
      "op": "PUSH2",
      "value": "0x8C1"
    },
    "2231": {
      "op": "JUMPI"
    },
    "2232": {
      "op": "RETURNDATASIZE"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2235": {
      "op": "DUP1"
    },
    "2236": {
      "op": "RETURNDATACOPY"
    },
    "2237": {
      "op": "RETURNDATASIZE"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2240": {
      "op": "REVERT"
    },
    "2241": {
      "op": "JUMPDEST"
    },
    "2242": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "POP",
      "path": "0"
    },
    "2243": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "POP",
      "path": "0"
    },
    "2244": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "POP",
      "path": "0"
    },
    "2245": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "POP",
      "path": "0"
    },
    "2246": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2248": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2249": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2252": {
      "op": "DUP2"
    },
    "2253": {
      "op": "LT"
    },
    "2254": {
      "op": "ISZERO"
    },
    "2255": {
      "op": "PUSH2",
      "value": "0x8D7"
    },
    "2258": {
      "op": "JUMPI"
    },
    "2259": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2261": {
      "op": "DUP1"
    },
    "2262": {
      "op": "REVERT"
    },
    "2263": {
      "op": "JUMPDEST"
    },
    "2264": {
      "op": "POP"
    },
    "2265": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2266": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12754,
        12798
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2267": {
      "op": "POP"
    },
    "2268": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12747,
        12798
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8E5"
    },
    "2271": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12747,
        12798
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2272": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12717,
        12859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2273": {
      "op": "POP"
    },
    "2274": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12836,
        12848
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 8,
      "value": "0x1"
    },
    "2276": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12836,
        12848
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2277": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12717,
        12859
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2278": {
      "fn": "TetherToken.totalSupply",
      "offset": [
        12653,
        12865
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2279": {
      "fn": "TetherToken.totalSupply",
      "jump": "o",
      "offset": [
        12653,
        12865
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2280": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        10928,
        11283
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2281": {
      "offset": [
        7486,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2283": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        7486,
        7492
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2288": {
      "op": "EXP"
    },
    "2289": {
      "offset": [
        7486,
        7492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2290": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        7486,
        7492
      ],
      "op": "DIV",
      "path": "0"
    },
    "2291": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        7486,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2293": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        7486,
        7492
      ],
      "op": "AND",
      "path": "0"
    },
    "2294": {
      "offset": [
        7485,
        7492
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2295": {
      "offset": [
        7477,
        7493
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FF"
    },
    "2298": {
      "offset": [
        7477,
        7493
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2299": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        7477,
        7493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2301": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        7477,
        7493
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2302": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        7477,
        7493
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2303": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        7477,
        7493
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2310": {
      "op": "EXP"
    },
    "2311": {
      "op": "SUB"
    },
    "2312": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11031,
        11051
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 9
    },
    "2313": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11031,
        11051
      ],
      "op": "AND",
      "path": "0"
    },
    "2314": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11031,
        11051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2316": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11031,
        11051
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2317": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11031,
        11051
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2318": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11031,
        11051
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2319": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11031,
        11044
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2321": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11031,
        11051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2323": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11031,
        11051
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2324": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11031,
        11051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2326": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11031,
        11051
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2327": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11031,
        11051
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2328": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11031,
        11051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2329": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11031,
        11051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2331": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11031,
        11051
      ],
      "op": "AND",
      "path": "0"
    },
    "2332": {
      "branch": 73,
      "fn": "TetherToken.transferFrom",
      "offset": [
        11030,
        11051
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2333": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11022,
        11052
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x925"
    },
    "2336": {
      "branch": 73,
      "fn": "TetherToken.transferFrom",
      "offset": [
        11022,
        11052
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2337": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11022,
        11052
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2339": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11022,
        11052
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2340": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11022,
        11052
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2341": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11022,
        11052
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2342": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11066,
        11076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2344": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11066,
        11076
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2349": {
      "op": "EXP"
    },
    "2350": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11066,
        11076
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2351": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11066,
        11076
      ],
      "op": "DIV",
      "path": "0"
    },
    "2352": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11066,
        11076
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2354": {
      "branch": 74,
      "fn": "TetherToken.transferFrom",
      "offset": [
        11066,
        11076
      ],
      "op": "AND",
      "path": "0"
    },
    "2355": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11062,
        11277
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2356": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11062,
        11277
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B3"
    },
    "2359": {
      "branch": 74,
      "fn": "TetherToken.transferFrom",
      "offset": [
        11062,
        11277
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2360": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11121,
        11136
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0xA"
    },
    "2362": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11121,
        11136
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2363": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2365": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2366": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2367": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8B477ADB00000000000000000000000000000000000000000000000000000000"
    },
    "2400": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2401": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2402": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11159,
        11169
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2403": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2405": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2406": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "ADD",
      "path": "0"
    },
    "2407": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2414": {
      "op": "EXP"
    },
    "2415": {
      "op": "SUB"
    },
    "2416": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2417": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2418": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "AND",
      "path": "0"
    },
    "2419": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2421": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2422": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "ADD",
      "path": "0"
    },
    "2423": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2424": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2425": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2426": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "AND",
      "path": "0"
    },
    "2427": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "2429": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2430": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "ADD",
      "path": "0"
    },
    "2431": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2432": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "2434": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2435": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "ADD",
      "path": "0"
    },
    "2436": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2437": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2438": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2439": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2440": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2441": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11121,
        11136
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2442": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11121,
        11136
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2443": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11121,
        11136
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2444": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11121,
        11136
      ],
      "op": "AND",
      "path": "0"
    },
    "2445": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11121,
        11136
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2446": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11158
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8B477ADB"
    },
    "2451": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11158
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2452": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x84"
    },
    "2454": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2455": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2456": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "ADD",
      "path": "0"
    },
    "2457": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2458": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11121,
        11136
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2460": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11121,
        11136
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2461": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2462": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2463": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2464": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2465": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "SUB",
      "path": "0"
    },
    "2466": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "ADD",
      "path": "0"
    },
    "2467": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2468": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11121,
        11136
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2469": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11121,
        11136
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2470": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2471": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "2472": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11099,
        11190
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2473": {
      "op": "DUP1"
    },
    "2474": {
      "op": "ISZERO"
    },
    "2475": {
      "op": "PUSH2",
      "value": "0x77E"
    },
    "2478": {
      "op": "JUMPI"
    },
    "2479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2481": {
      "op": "DUP1"
    },
    "2482": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11062,
        11277
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2483": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11062,
        11277
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2484": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11228,
        11266
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 11,
      "value": "0x7A5"
    },
    "2487": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11247,
        11252
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2488": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11254,
        11257
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2489": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11259,
        11265
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2490": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        11228,
        11246
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1241"
    },
    "2493": {
      "fn": "TetherToken.transferFrom",
      "jump": "i",
      "offset": [
        11228,
        11266
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2494": {
      "offset": [
        9803,
        9833
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2495": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2497": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2504": {
      "op": "EXP"
    },
    "2505": {
      "op": "SUB"
    },
    "2506": {
      "offset": [
        9803,
        9833
      ],
      "op": "AND",
      "path": "0"
    },
    "2507": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9803,
        9833
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2508": {
      "fn": "TetherToken.transferFrom",
      "jump": "o",
      "offset": [
        9803,
        9833
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2509": {
      "offset": [
        2849,
        2889
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2510": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "2512": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2514": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2515": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2517": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2518": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2519": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2520": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2522": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2523": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2524": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2525": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        2849,
        2889
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2526": {
      "fn": "TetherToken.transferFrom",
      "jump": "o",
      "offset": [
        2849,
        2889
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2527": {
      "offset": [
        9777,
        9797
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2528": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9777,
        9797
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "2530": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9777,
        9797
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2531": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        9777,
        9797
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2532": {
      "fn": "TetherToken.transferFrom",
      "jump": "o",
      "offset": [
        9777,
        9797
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2533": {
      "offset": [
        3011,
        3037
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2534": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        3011,
        3037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2536": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        3011,
        3037
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2537": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        3011,
        3037
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2538": {
      "fn": "TetherToken.transferFrom",
      "jump": "o",
      "offset": [
        3011,
        3037
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2539": {
      "offset": [
        1976,
        2000
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2540": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        1976,
        2000
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2542": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        1976,
        2000
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2543": {
      "fn": "TetherToken.transferFrom",
      "offset": [
        1976,
        2000
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2544": {
      "fn": "TetherToken.transferFrom",
      "jump": "o",
      "offset": [
        1976,
        2000
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2545": {
      "fn": "Pausable.unpause",
      "offset": [
        7903,
        7990
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2546": {
      "offset": [
        1479,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2548": {
      "fn": "Pausable.unpause",
      "offset": [
        1479,
        1484
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2555": {
      "op": "EXP"
    },
    "2556": {
      "op": "SUB"
    },
    "2557": {
      "offset": [
        1479,
        1484
      ],
      "op": "AND",
      "path": "0"
    },
    "2558": {
      "offset": [
        1465,
        1475
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2559": {
      "offset": [
        1465,
        1484
      ],
      "op": "EQ",
      "path": "0"
    },
    "2560": {
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA08"
    },
    "2563": {
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2564": {
      "fn": "Pausable.unpause",
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2566": {
      "fn": "Pausable.unpause",
      "offset": [
        1457,
        1485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2567": {
      "fn": "Pausable.unpause",
      "offset": [
        1457,
        1485
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2568": {
      "fn": "Pausable.unpause",
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2569": {
      "offset": [
        7638,
        7644
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2571": {
      "fn": "Pausable.unpause",
      "offset": [
        7638,
        7644
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2572": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2576": {
      "op": "EXP"
    },
    "2577": {
      "offset": [
        7638,
        7644
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2578": {
      "fn": "Pausable.unpause",
      "offset": [
        7638,
        7644
      ],
      "op": "DIV",
      "path": "0"
    },
    "2579": {
      "fn": "Pausable.unpause",
      "offset": [
        7638,
        7644
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2581": {
      "branch": 75,
      "fn": "Pausable.unpause",
      "offset": [
        7638,
        7644
      ],
      "op": "AND",
      "path": "0"
    },
    "2582": {
      "offset": [
        7630,
        7645
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2583": {
      "fn": "Pausable.unpause",
      "offset": [
        7630,
        7645
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2584": {
      "fn": "Pausable.unpause",
      "offset": [
        7630,
        7645
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA20"
    },
    "2587": {
      "branch": 75,
      "offset": [
        7630,
        7645
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2588": {
      "fn": "Pausable.unpause",
      "offset": [
        7630,
        7645
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2590": {
      "fn": "Pausable.unpause",
      "offset": [
        7630,
        7645
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2591": {
      "fn": "Pausable.unpause",
      "offset": [
        7630,
        7645
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2592": {
      "fn": "Pausable.unpause",
      "offset": [
        7630,
        7645
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2593": {
      "fn": "Pausable.unpause",
      "offset": [
        7965,
        7970
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 12,
      "value": "0x0"
    },
    "2595": {
      "fn": "Pausable.unpause",
      "offset": [
        7956,
        7970
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2596": {
      "fn": "Pausable.unpause",
      "offset": [
        7956,
        7970
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2597": {
      "op": "PUSH21",
      "value": "0xFF0000000000000000000000000000000000000000"
    },
    "2619": {
      "op": "NOT"
    },
    "2620": {
      "fn": "Pausable.unpause",
      "offset": [
        7956,
        7970
      ],
      "op": "AND",
      "path": "0"
    },
    "2621": {
      "fn": "Pausable.unpause",
      "offset": [
        7956,
        7970
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2622": {
      "fn": "Pausable.unpause",
      "offset": [
        7956,
        7970
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "2623": {
      "fn": "Pausable.unpause",
      "offset": [
        7976,
        7985
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 13,
      "value": "0x40"
    },
    "2625": {
      "fn": "Pausable.unpause",
      "offset": [
        7976,
        7985
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2626": {
      "fn": "Pausable.unpause",
      "offset": [
        7976,
        7985
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x7805862F689E2F13DF9F062FF482AD3AD112ACA9E0847911ED832E158C525B33"
    },
    "2659": {
      "fn": "Pausable.unpause",
      "offset": [
        7976,
        7985
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2660": {
      "fn": "Pausable.unpause",
      "offset": [
        7965,
        7970
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2661": {
      "fn": "Pausable.unpause",
      "offset": [
        7976,
        7985
      ],
      "op": "LOG1",
      "path": "0"
    },
    "2662": {
      "fn": "Pausable.unpause",
      "jump": "o",
      "offset": [
        7903,
        7990
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2663": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8162,
        8284
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2670": {
      "op": "EXP"
    },
    "2671": {
      "op": "SUB"
    },
    "2672": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8256,
        8277
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 14
    },
    "2673": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8256,
        8277
      ],
      "op": "AND",
      "path": "0"
    },
    "2674": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8233,
        8237
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2676": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8256,
        8277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2677": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8256,
        8277
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2678": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8256,
        8277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2679": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8256,
        8269
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2681": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8256,
        8277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2683": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8256,
        8277
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2684": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8256,
        8277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2686": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8256,
        8277
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2687": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8256,
        8277
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2688": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8256,
        8277
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2689": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8256,
        8277
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2691": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8256,
        8277
      ],
      "op": "AND",
      "path": "0"
    },
    "2692": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8162,
        8284
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2693": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8162,
        8284
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2694": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8162,
        8284
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2695": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        8162,
        8284
      ],
      "op": "POP",
      "path": "0"
    },
    "2696": {
      "fn": "BlackList.getBlackListStatus",
      "jump": "o",
      "offset": [
        8162,
        8284
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2697": {
      "offset": [
        4585,
        4646
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2698": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2700": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2702": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2703": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2704": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2705": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2707": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2708": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2709": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2710": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2712": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2713": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2714": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2715": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2716": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2717": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2718": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2719": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2720": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2721": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2722": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "2723": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2724": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        4585,
        4646
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2725": {
      "fn": "BlackList.getBlackListStatus",
      "jump": "o",
      "offset": [
        4585,
        4646
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2726": {
      "offset": [
        7317,
        7343
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2727": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        7317,
        7343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2729": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        7317,
        7343
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2734": {
      "op": "EXP"
    },
    "2735": {
      "offset": [
        7317,
        7343
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2736": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        7317,
        7343
      ],
      "op": "DIV",
      "path": "0"
    },
    "2737": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        7317,
        7343
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2739": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        7317,
        7343
      ],
      "op": "AND",
      "path": "0"
    },
    "2740": {
      "fn": "BlackList.getBlackListStatus",
      "offset": [
        7317,
        7343
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2741": {
      "fn": "BlackList.getBlackListStatus",
      "jump": "o",
      "offset": [
        7317,
        7343
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2742": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11365,
        11603
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2743": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11442,
        11452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "2745": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11442,
        11452
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2746": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11422,
        11426
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2748": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11422,
        11426
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2753": {
      "op": "EXP"
    },
    "2754": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11442,
        11452
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2755": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11442,
        11452
      ],
      "op": "DIV",
      "path": "0"
    },
    "2756": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11442,
        11452
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2758": {
      "branch": 76,
      "fn": "TetherToken.balanceOf",
      "offset": [
        11442,
        11452
      ],
      "op": "AND",
      "path": "0"
    },
    "2759": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11438,
        11597
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2760": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11438,
        11597
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB66"
    },
    "2763": {
      "branch": 76,
      "fn": "TetherToken.balanceOf",
      "offset": [
        11438,
        11597
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2764": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11497,
        11512
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 15,
      "value": "0xA"
    },
    "2766": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11497,
        11512
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2767": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2769": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2770": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2771": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x70A0823100000000000000000000000000000000000000000000000000000000"
    },
    "2804": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2805": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2808": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2812": {
      "op": "EXP"
    },
    "2813": {
      "op": "SUB"
    },
    "2814": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2815": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2816": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "AND",
      "path": "0"
    },
    "2817": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2819": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2820": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "ADD",
      "path": "0"
    },
    "2821": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2822": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2823": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2824": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11497,
        11512
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2825": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11497,
        11512
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2826": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11497,
        11512
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2827": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11497,
        11512
      ],
      "op": "AND",
      "path": "0"
    },
    "2828": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11497,
        11512
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2829": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11523
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "2834": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11523
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2835": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "2837": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2838": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2839": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "ADD",
      "path": "0"
    },
    "2840": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2841": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2843": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2844": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2845": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2846": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2847": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2848": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "SUB",
      "path": "0"
    },
    "2849": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "ADD",
      "path": "0"
    },
    "2850": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2851": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11497,
        11512
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2853": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11497,
        11512
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2854": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2855": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "2856": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2857": {
      "op": "DUP1"
    },
    "2858": {
      "op": "ISZERO"
    },
    "2859": {
      "op": "PUSH2",
      "value": "0xB33"
    },
    "2862": {
      "op": "JUMPI"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2865": {
      "op": "DUP1"
    },
    "2866": {
      "op": "REVERT"
    },
    "2867": {
      "op": "JUMPDEST"
    },
    "2868": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "POP",
      "path": "0"
    },
    "2869": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "GAS",
      "path": "0"
    },
    "2870": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "CALL",
      "path": "0"
    },
    "2871": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2872": {
      "op": "DUP1"
    },
    "2873": {
      "op": "ISZERO"
    },
    "2874": {
      "op": "PUSH2",
      "value": "0xB47"
    },
    "2877": {
      "op": "JUMPI"
    },
    "2878": {
      "op": "RETURNDATASIZE"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2881": {
      "op": "DUP1"
    },
    "2882": {
      "op": "RETURNDATACOPY"
    },
    "2883": {
      "op": "RETURNDATASIZE"
    },
    "2884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2886": {
      "op": "REVERT"
    },
    "2887": {
      "op": "JUMPDEST"
    },
    "2888": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "POP",
      "path": "0"
    },
    "2889": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "POP",
      "path": "0"
    },
    "2890": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "POP",
      "path": "0"
    },
    "2891": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "POP",
      "path": "0"
    },
    "2892": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2894": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2895": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2898": {
      "op": "DUP2"
    },
    "2899": {
      "op": "LT"
    },
    "2900": {
      "op": "ISZERO"
    },
    "2901": {
      "op": "PUSH2",
      "value": "0xB5D"
    },
    "2904": {
      "op": "JUMPI"
    },
    "2905": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2907": {
      "op": "DUP1"
    },
    "2908": {
      "op": "REVERT"
    },
    "2909": {
      "op": "JUMPDEST"
    },
    "2910": {
      "op": "POP"
    },
    "2911": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2912": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11475,
        11528
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2913": {
      "op": "POP"
    },
    "2914": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11468,
        11528
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA84"
    },
    "2917": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11468,
        11528
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2918": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11438,
        11597
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2919": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11566,
        11586
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 16,
      "value": "0xB6F"
    },
    "2922": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11582,
        11585
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2923": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11566,
        11581
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143D"
    },
    "2926": {
      "fn": "TetherToken.balanceOf",
      "jump": "i",
      "offset": [
        11566,
        11586
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2927": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11566,
        11586
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2928": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11559,
        11586
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2929": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11559,
        11586
      ],
      "op": "POP",
      "path": "0"
    },
    "2930": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11559,
        11586
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA84"
    },
    "2933": {
      "fn": "TetherToken.balanceOf",
      "offset": [
        11559,
        11586
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2934": {
      "fn": "Pausable.pause",
      "offset": [
        7736,
        7821
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2935": {
      "offset": [
        1479,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2937": {
      "fn": "Pausable.pause",
      "offset": [
        1479,
        1484
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2944": {
      "op": "EXP"
    },
    "2945": {
      "op": "SUB"
    },
    "2946": {
      "offset": [
        1479,
        1484
      ],
      "op": "AND",
      "path": "0"
    },
    "2947": {
      "offset": [
        1465,
        1475
      ],
      "op": "CALLER",
      "path": "0"
    },
    "2948": {
      "offset": [
        1465,
        1484
      ],
      "op": "EQ",
      "path": "0"
    },
    "2949": {
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8D"
    },
    "2952": {
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2953": {
      "fn": "Pausable.pause",
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2955": {
      "fn": "Pausable.pause",
      "offset": [
        1457,
        1485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2956": {
      "fn": "Pausable.pause",
      "offset": [
        1457,
        1485
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2957": {
      "fn": "Pausable.pause",
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2958": {
      "offset": [
        7486,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2960": {
      "fn": "Pausable.pause",
      "offset": [
        7486,
        7492
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2961": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2963": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2965": {
      "op": "EXP"
    },
    "2966": {
      "offset": [
        7486,
        7492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2967": {
      "fn": "Pausable.pause",
      "offset": [
        7486,
        7492
      ],
      "op": "DIV",
      "path": "0"
    },
    "2968": {
      "fn": "Pausable.pause",
      "offset": [
        7486,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "2970": {
      "fn": "Pausable.pause",
      "offset": [
        7486,
        7492
      ],
      "op": "AND",
      "path": "0"
    },
    "2971": {
      "offset": [
        7485,
        7492
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2972": {
      "offset": [
        7477,
        7493
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBA4"
    },
    "2975": {
      "offset": [
        7477,
        7493
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2976": {
      "fn": "Pausable.pause",
      "offset": [
        7477,
        7493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2978": {
      "fn": "Pausable.pause",
      "offset": [
        7477,
        7493
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2979": {
      "fn": "Pausable.pause",
      "offset": [
        7477,
        7493
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2980": {
      "fn": "Pausable.pause",
      "offset": [
        7477,
        7493
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2981": {
      "fn": "Pausable.pause",
      "offset": [
        7790,
        7796
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 17,
      "value": "0x0"
    },
    "2983": {
      "fn": "Pausable.pause",
      "offset": [
        7790,
        7803
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2984": {
      "fn": "Pausable.pause",
      "offset": [
        7790,
        7803
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2985": {
      "op": "PUSH21",
      "value": "0xFF0000000000000000000000000000000000000000"
    },
    "3007": {
      "op": "NOT"
    },
    "3008": {
      "fn": "Pausable.pause",
      "offset": [
        7790,
        7803
      ],
      "op": "AND",
      "path": "0"
    },
    "3009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3013": {
      "op": "EXP"
    },
    "3014": {
      "fn": "Pausable.pause",
      "offset": [
        7790,
        7803
      ],
      "op": "OR",
      "path": "0"
    },
    "3015": {
      "fn": "Pausable.pause",
      "offset": [
        7790,
        7803
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3016": {
      "fn": "Pausable.pause",
      "offset": [
        7790,
        7803
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3017": {
      "fn": "Pausable.pause",
      "offset": [
        7809,
        7816
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 18,
      "value": "0x40"
    },
    "3019": {
      "fn": "Pausable.pause",
      "offset": [
        7809,
        7816
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3020": {
      "fn": "Pausable.pause",
      "offset": [
        7809,
        7816
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x6985A02210A168E66602D3235CB6DB0E70F92B3BA4D376A33C0F3D9434BFF625"
    },
    "3053": {
      "fn": "Pausable.pause",
      "offset": [
        7809,
        7816
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3054": {
      "fn": "Pausable.pause",
      "offset": [
        7790,
        7796
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3055": {
      "fn": "Pausable.pause",
      "offset": [
        7809,
        7816
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3056": {
      "fn": "Pausable.pause",
      "jump": "o",
      "offset": [
        7736,
        7821
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3057": {
      "fn": "BlackList.getOwner",
      "offset": [
        8290,
        8375
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3058": {
      "fn": "BlackList.getOwner",
      "offset": [
        8337,
        8344
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3060": {
      "fn": "BlackList.getOwner",
      "offset": [
        8363,
        8368
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 19
    },
    "3061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3065": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3067": {
      "op": "EXP"
    },
    "3068": {
      "op": "SUB"
    },
    "3069": {
      "fn": "BlackList.getOwner",
      "offset": [
        8363,
        8368
      ],
      "op": "AND",
      "path": "0"
    },
    "3070": {
      "fn": "BlackList.getOwner",
      "offset": [
        8290,
        8375
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3071": {
      "fn": "BlackList.getOwner",
      "jump": "o",
      "offset": [
        8290,
        8375
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3072": {
      "offset": [
        1121,
        1141
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3073": {
      "fn": "BlackList.getOwner",
      "offset": [
        1121,
        1141
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3075": {
      "fn": "BlackList.getOwner",
      "offset": [
        1121,
        1141
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3082": {
      "op": "EXP"
    },
    "3083": {
      "op": "SUB"
    },
    "3084": {
      "offset": [
        1121,
        1141
      ],
      "op": "AND",
      "path": "0"
    },
    "3085": {
      "fn": "BlackList.getOwner",
      "offset": [
        1121,
        1141
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3086": {
      "fn": "BlackList.getOwner",
      "jump": "o",
      "offset": [
        1121,
        1141
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3087": {
      "offset": [
        9751,
        9771
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3088": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "3090": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3091": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3092": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3094": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3095": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3096": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3098": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3100": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3102": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3103": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "AND",
      "path": "0"
    },
    "3104": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3105": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3108": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "MUL",
      "path": "0"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3111": {
      "op": "NOT"
    },
    "3112": {
      "offset": [
        9751,
        9771
      ],
      "op": "ADD",
      "path": "0"
    },
    "3113": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3114": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "3115": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "AND",
      "path": "0"
    },
    "3116": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3117": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3118": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3119": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DIV",
      "path": "0"
    },
    "3120": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3122": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3123": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "ADD",
      "path": "0"
    },
    "3124": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3125": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3126": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DIV",
      "path": "0"
    },
    "3127": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3128": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "MUL",
      "path": "0"
    },
    "3129": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3130": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "ADD",
      "path": "0"
    },
    "3131": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3132": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "ADD",
      "path": "0"
    },
    "3133": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3134": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3135": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3136": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3137": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3138": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3139": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3140": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3141": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3142": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "ADD",
      "path": "0"
    },
    "3143": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3144": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3145": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3146": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3147": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x648"
    },
    "3150": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3151": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3152": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "3154": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "LT",
      "path": "0"
    },
    "3155": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61D"
    },
    "3158": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3159": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "3162": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3163": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3164": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3165": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DIV",
      "path": "0"
    },
    "3166": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "MUL",
      "path": "0"
    },
    "3167": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3168": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3169": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3170": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3172": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "ADD",
      "path": "0"
    },
    "3173": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3174": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x648"
    },
    "3177": {
      "fn": "BlackList.getOwner",
      "offset": [
        9751,
        9771
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3178": {
      "fn": "TetherToken.transfer",
      "offset": [
        10527,
        10846
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3179": {
      "offset": [
        7486,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3181": {
      "fn": "TetherToken.transfer",
      "offset": [
        7486,
        7492
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3182": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3186": {
      "op": "EXP"
    },
    "3187": {
      "offset": [
        7486,
        7492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3188": {
      "fn": "TetherToken.transfer",
      "offset": [
        7486,
        7492
      ],
      "op": "DIV",
      "path": "0"
    },
    "3189": {
      "fn": "TetherToken.transfer",
      "offset": [
        7486,
        7492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3191": {
      "fn": "TetherToken.transfer",
      "offset": [
        7486,
        7492
      ],
      "op": "AND",
      "path": "0"
    },
    "3192": {
      "offset": [
        7485,
        7492
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3193": {
      "offset": [
        7477,
        7493
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC81"
    },
    "3196": {
      "offset": [
        7477,
        7493
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3197": {
      "fn": "TetherToken.transfer",
      "offset": [
        7477,
        7493
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3199": {
      "fn": "TetherToken.transfer",
      "offset": [
        7477,
        7493
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3200": {
      "fn": "TetherToken.transfer",
      "offset": [
        7477,
        7493
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3201": {
      "fn": "TetherToken.transfer",
      "offset": [
        7477,
        7493
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3202": {
      "fn": "TetherToken.transfer",
      "offset": [
        10625,
        10635
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 20
    },
    "3203": {
      "fn": "TetherToken.transfer",
      "offset": [
        10611,
        10636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3205": {
      "fn": "TetherToken.transfer",
      "offset": [
        10611,
        10636
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3206": {
      "fn": "TetherToken.transfer",
      "offset": [
        10611,
        10636
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3207": {
      "fn": "TetherToken.transfer",
      "offset": [
        10611,
        10636
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3208": {
      "fn": "TetherToken.transfer",
      "offset": [
        10611,
        10624
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3210": {
      "fn": "TetherToken.transfer",
      "offset": [
        10611,
        10636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3212": {
      "fn": "TetherToken.transfer",
      "offset": [
        10611,
        10636
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3213": {
      "fn": "TetherToken.transfer",
      "offset": [
        10611,
        10636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3215": {
      "fn": "TetherToken.transfer",
      "offset": [
        10611,
        10636
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3216": {
      "fn": "TetherToken.transfer",
      "offset": [
        10611,
        10636
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3217": {
      "fn": "TetherToken.transfer",
      "offset": [
        10611,
        10636
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3218": {
      "fn": "TetherToken.transfer",
      "offset": [
        10611,
        10636
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3220": {
      "fn": "TetherToken.transfer",
      "offset": [
        10611,
        10636
      ],
      "op": "AND",
      "path": "0"
    },
    "3221": {
      "branch": 77,
      "fn": "TetherToken.transfer",
      "offset": [
        10610,
        10636
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3222": {
      "fn": "TetherToken.transfer",
      "offset": [
        10602,
        10637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC9E"
    },
    "3225": {
      "branch": 77,
      "fn": "TetherToken.transfer",
      "offset": [
        10602,
        10637
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3226": {
      "fn": "TetherToken.transfer",
      "offset": [
        10602,
        10637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3228": {
      "fn": "TetherToken.transfer",
      "offset": [
        10602,
        10637
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3229": {
      "fn": "TetherToken.transfer",
      "offset": [
        10602,
        10637
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3230": {
      "fn": "TetherToken.transfer",
      "offset": [
        10602,
        10637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3231": {
      "fn": "TetherToken.transfer",
      "offset": [
        10651,
        10661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3233": {
      "fn": "TetherToken.transfer",
      "offset": [
        10651,
        10661
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3238": {
      "op": "EXP"
    },
    "3239": {
      "fn": "TetherToken.transfer",
      "offset": [
        10651,
        10661
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3240": {
      "fn": "TetherToken.transfer",
      "offset": [
        10651,
        10661
      ],
      "op": "DIV",
      "path": "0"
    },
    "3241": {
      "fn": "TetherToken.transfer",
      "offset": [
        10651,
        10661
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3243": {
      "branch": 78,
      "fn": "TetherToken.transfer",
      "offset": [
        10651,
        10661
      ],
      "op": "AND",
      "path": "0"
    },
    "3244": {
      "fn": "TetherToken.transfer",
      "offset": [
        10647,
        10840
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3245": {
      "fn": "TetherToken.transfer",
      "offset": [
        10647,
        10840
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD41"
    },
    "3248": {
      "branch": 78,
      "fn": "TetherToken.transfer",
      "offset": [
        10647,
        10840
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3249": {
      "fn": "TetherToken.transfer",
      "offset": [
        10706,
        10721
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 21,
      "value": "0xA"
    },
    "3251": {
      "fn": "TetherToken.transfer",
      "offset": [
        10706,
        10721
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3252": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3254": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3255": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3256": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x6E18980A00000000000000000000000000000000000000000000000000000000"
    },
    "3289": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3290": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3291": {
      "fn": "TetherToken.transfer",
      "offset": [
        10740,
        10750
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3292": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3294": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3295": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "ADD",
      "path": "0"
    },
    "3296": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3299": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3303": {
      "op": "EXP"
    },
    "3304": {
      "op": "SUB"
    },
    "3305": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3306": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3307": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "AND",
      "path": "0"
    },
    "3308": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3310": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3311": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "ADD",
      "path": "0"
    },
    "3312": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3313": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "3315": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3316": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "ADD",
      "path": "0"
    },
    "3317": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3318": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3319": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3320": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3321": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3322": {
      "fn": "TetherToken.transfer",
      "offset": [
        10706,
        10721
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3323": {
      "fn": "TetherToken.transfer",
      "offset": [
        10706,
        10721
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3324": {
      "fn": "TetherToken.transfer",
      "offset": [
        10706,
        10721
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3325": {
      "fn": "TetherToken.transfer",
      "offset": [
        10706,
        10721
      ],
      "op": "AND",
      "path": "0"
    },
    "3326": {
      "fn": "TetherToken.transfer",
      "offset": [
        10706,
        10721
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3327": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10739
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6E18980A"
    },
    "3332": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10739
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3333": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "3335": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3336": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3337": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "ADD",
      "path": "0"
    },
    "3338": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3339": {
      "fn": "TetherToken.transfer",
      "offset": [
        10706,
        10721
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3341": {
      "fn": "TetherToken.transfer",
      "offset": [
        10706,
        10721
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3342": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3343": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3344": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3345": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3346": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "SUB",
      "path": "0"
    },
    "3347": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "ADD",
      "path": "0"
    },
    "3348": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3349": {
      "fn": "TetherToken.transfer",
      "offset": [
        10706,
        10721
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3350": {
      "fn": "TetherToken.transfer",
      "offset": [
        10706,
        10721
      ],
      "op": "DUP8",
      "path": "0"
    },
    "3351": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3352": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "3353": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3354": {
      "op": "DUP1"
    },
    "3355": {
      "op": "ISZERO"
    },
    "3356": {
      "op": "PUSH2",
      "value": "0xD24"
    },
    "3359": {
      "op": "JUMPI"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3362": {
      "op": "DUP1"
    },
    "3363": {
      "op": "REVERT"
    },
    "3364": {
      "op": "JUMPDEST"
    },
    "3365": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "POP",
      "path": "0"
    },
    "3366": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "GAS",
      "path": "0"
    },
    "3367": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "CALL",
      "path": "0"
    },
    "3368": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3369": {
      "op": "DUP1"
    },
    "3370": {
      "op": "ISZERO"
    },
    "3371": {
      "op": "PUSH2",
      "value": "0xD38"
    },
    "3374": {
      "op": "JUMPI"
    },
    "3375": {
      "op": "RETURNDATASIZE"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3378": {
      "op": "DUP1"
    },
    "3379": {
      "op": "RETURNDATACOPY"
    },
    "3380": {
      "op": "RETURNDATASIZE"
    },
    "3381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3383": {
      "op": "REVERT"
    },
    "3384": {
      "op": "JUMPDEST"
    },
    "3385": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "POP",
      "path": "0"
    },
    "3386": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "POP",
      "path": "0"
    },
    "3387": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "POP",
      "path": "0"
    },
    "3388": {
      "fn": "TetherToken.transfer",
      "offset": [
        10684,
        10764
      ],
      "op": "POP",
      "path": "0"
    },
    "3389": {
      "fn": "TetherToken.transfer",
      "offset": [
        10677,
        10764
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD4B"
    },
    "3392": {
      "fn": "TetherToken.transfer",
      "offset": [
        10677,
        10764
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3393": {
      "fn": "TetherToken.transfer",
      "offset": [
        10647,
        10840
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3394": {
      "fn": "TetherToken.transfer",
      "offset": [
        10802,
        10829
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 22,
      "value": "0xD4B"
    },
    "3397": {
      "fn": "TetherToken.transfer",
      "offset": [
        10817,
        10820
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3398": {
      "fn": "TetherToken.transfer",
      "offset": [
        10822,
        10828
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3399": {
      "fn": "TetherToken.transfer",
      "offset": [
        10802,
        10816
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1458"
    },
    "3402": {
      "fn": "TetherToken.transfer",
      "jump": "i",
      "offset": [
        10802,
        10829
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3403": {
      "fn": "TetherToken.transfer",
      "offset": [
        10802,
        10829
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3404": {
      "fn": "TetherToken.transfer",
      "offset": [
        10527,
        10846
      ],
      "op": "POP",
      "path": "0"
    },
    "3405": {
      "fn": "TetherToken.transfer",
      "offset": [
        10527,
        10846
      ],
      "op": "POP",
      "path": "0"
    },
    "3406": {
      "fn": "TetherToken.transfer",
      "jump": "o",
      "offset": [
        10527,
        10846
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3407": {
      "fn": "TetherToken.setParams",
      "offset": [
        13742,
        14120
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3408": {
      "offset": [
        1479,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3410": {
      "fn": "TetherToken.setParams",
      "offset": [
        1479,
        1484
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3417": {
      "op": "EXP"
    },
    "3418": {
      "op": "SUB"
    },
    "3419": {
      "offset": [
        1479,
        1484
      ],
      "op": "AND",
      "path": "0"
    },
    "3420": {
      "offset": [
        1465,
        1475
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3421": {
      "offset": [
        1465,
        1484
      ],
      "op": "EQ",
      "path": "0"
    },
    "3422": {
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD66"
    },
    "3425": {
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3426": {
      "fn": "TetherToken.setParams",
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3428": {
      "fn": "TetherToken.setParams",
      "offset": [
        1457,
        1485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3429": {
      "fn": "TetherToken.setParams",
      "offset": [
        1457,
        1485
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3430": {
      "fn": "TetherToken.setParams",
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3431": {
      "fn": "TetherToken.setParams",
      "offset": [
        13938,
        13940
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x14"
    },
    "3433": {
      "fn": "TetherToken.setParams",
      "offset": [
        13921,
        13940
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3434": {
      "branch": 79,
      "fn": "TetherToken.setParams",
      "offset": [
        13921,
        13940
      ],
      "op": "LT",
      "path": "0"
    },
    "3435": {
      "fn": "TetherToken.setParams",
      "offset": [
        13913,
        13941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD73"
    },
    "3438": {
      "branch": 79,
      "fn": "TetherToken.setParams",
      "offset": [
        13913,
        13941
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3439": {
      "fn": "TetherToken.setParams",
      "offset": [
        13913,
        13941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3441": {
      "fn": "TetherToken.setParams",
      "offset": [
        13913,
        13941
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3442": {
      "fn": "TetherToken.setParams",
      "offset": [
        13913,
        13941
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3443": {
      "fn": "TetherToken.setParams",
      "offset": [
        13913,
        13941
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3444": {
      "fn": "TetherToken.setParams",
      "offset": [
        13971,
        13973
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 24,
      "value": "0x32"
    },
    "3446": {
      "fn": "TetherToken.setParams",
      "offset": [
        13959,
        13973
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3447": {
      "branch": 80,
      "fn": "TetherToken.setParams",
      "offset": [
        13959,
        13973
      ],
      "op": "LT",
      "path": "0"
    },
    "3448": {
      "fn": "TetherToken.setParams",
      "offset": [
        13951,
        13974
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD80"
    },
    "3451": {
      "branch": 80,
      "fn": "TetherToken.setParams",
      "offset": [
        13951,
        13974
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3452": {
      "fn": "TetherToken.setParams",
      "offset": [
        13951,
        13974
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3454": {
      "fn": "TetherToken.setParams",
      "offset": [
        13951,
        13974
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3455": {
      "fn": "TetherToken.setParams",
      "offset": [
        13951,
        13974
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3456": {
      "fn": "TetherToken.setParams",
      "offset": [
        13951,
        13974
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3457": {
      "fn": "TetherToken.setParams",
      "offset": [
        13985,
        14000
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 25,
      "value": "0x3"
    },
    "3459": {
      "fn": "TetherToken.setParams",
      "offset": [
        13985,
        14017
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3460": {
      "fn": "TetherToken.setParams",
      "offset": [
        13985,
        14017
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3461": {
      "fn": "TetherToken.setParams",
      "offset": [
        13985,
        14017
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3462": {
      "fn": "TetherToken.setParams",
      "offset": [
        14058,
        14066
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 26,
      "value": "0x9"
    },
    "3464": {
      "fn": "TetherToken.setParams",
      "offset": [
        14058,
        14066
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3465": {
      "fn": "TetherToken.setParams",
      "offset": [
        14040,
        14067
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9C"
    },
    "3468": {
      "fn": "TetherToken.setParams",
      "offset": [
        14040,
        14067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3469": {
      "fn": "TetherToken.setParams",
      "offset": [
        14040,
        14049
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3470": {
      "fn": "TetherToken.setParams",
      "offset": [
        14040,
        14049
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3471": {
      "fn": "TetherToken.setParams",
      "offset": [
        14054,
        14056
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3473": {
      "fn": "TetherToken.setParams",
      "offset": [
        14054,
        14066
      ],
      "op": "EXP",
      "path": "0"
    },
    "3474": {
      "fn": "TetherToken.setParams",
      "offset": [
        14040,
        14067
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "3479": {
      "fn": "TetherToken.setParams",
      "offset": [
        14040,
        14053
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C5"
    },
    "3482": {
      "fn": "TetherToken.setParams",
      "offset": [
        14040,
        14067
      ],
      "op": "AND",
      "path": "0"
    },
    "3483": {
      "fn": "TetherToken.setParams",
      "jump": "i",
      "offset": [
        14040,
        14067
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3484": {
      "fn": "TetherToken.setParams",
      "offset": [
        14040,
        14067
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3485": {
      "fn": "TetherToken.setParams",
      "offset": [
        14027,
        14037
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3487": {
      "fn": "TetherToken.setParams",
      "offset": [
        14027,
        14067
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3488": {
      "fn": "TetherToken.setParams",
      "offset": [
        14027,
        14067
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3489": {
      "fn": "TetherToken.setParams",
      "offset": [
        14027,
        14067
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3490": {
      "fn": "TetherToken.setParams",
      "offset": [
        14085,
        14100
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x3"
    },
    "3492": {
      "fn": "TetherToken.setParams",
      "offset": [
        14085,
        14100
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3493": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3495": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3496": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3497": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3498": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3499": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3500": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3502": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3503": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "ADD",
      "path": "0"
    },
    "3504": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3505": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3506": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3507": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3508": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3509": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3510": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB044A1E409EAC5C48E5AF22D4AF52670DD1A99059537A78B31B48C6500A6354E"
    },
    "3543": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3544": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3545": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3546": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3547": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "SUB",
      "path": "0"
    },
    "3548": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3549": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3550": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "ADD",
      "path": "0"
    },
    "3551": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3552": {
      "fn": "TetherToken.setParams",
      "offset": [
        14078,
        14113
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3553": {
      "fn": "TetherToken.setParams",
      "offset": [
        13742,
        14120
      ],
      "op": "POP",
      "path": "0"
    },
    "3554": {
      "fn": "TetherToken.setParams",
      "offset": [
        13742,
        14120
      ],
      "op": "POP",
      "path": "0"
    },
    "3555": {
      "fn": "TetherToken.setParams",
      "jump": "o",
      "offset": [
        13742,
        14120
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3556": {
      "fn": "TetherToken.issue",
      "offset": [
        13023,
        13282
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3557": {
      "offset": [
        1479,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3559": {
      "fn": "TetherToken.issue",
      "offset": [
        1479,
        1484
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3562": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3564": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3566": {
      "op": "EXP"
    },
    "3567": {
      "op": "SUB"
    },
    "3568": {
      "offset": [
        1479,
        1484
      ],
      "op": "AND",
      "path": "0"
    },
    "3569": {
      "offset": [
        1465,
        1475
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3570": {
      "offset": [
        1465,
        1484
      ],
      "op": "EQ",
      "path": "0"
    },
    "3571": {
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDFB"
    },
    "3574": {
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3575": {
      "fn": "TetherToken.issue",
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3577": {
      "fn": "TetherToken.issue",
      "offset": [
        1457,
        1485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3578": {
      "fn": "TetherToken.issue",
      "offset": [
        1457,
        1485
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3579": {
      "fn": "TetherToken.issue",
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3580": {
      "fn": "TetherToken.issue",
      "offset": [
        13110,
        13122
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 28,
      "value": "0x1"
    },
    "3582": {
      "fn": "TetherToken.issue",
      "offset": [
        13110,
        13122
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3583": {
      "fn": "TetherToken.issue",
      "offset": [
        13086,
        13107
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3584": {
      "fn": "TetherToken.issue",
      "offset": [
        13086,
        13107
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3585": {
      "fn": "TetherToken.issue",
      "offset": [
        13086,
        13107
      ],
      "op": "ADD",
      "path": "0"
    },
    "3586": {
      "branch": 81,
      "fn": "TetherToken.issue",
      "offset": [
        13086,
        13122
      ],
      "op": "GT",
      "path": "0"
    },
    "3587": {
      "fn": "TetherToken.issue",
      "offset": [
        13078,
        13123
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE0B"
    },
    "3590": {
      "branch": 81,
      "fn": "TetherToken.issue",
      "offset": [
        13078,
        13123
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3591": {
      "fn": "TetherToken.issue",
      "offset": [
        13078,
        13123
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3593": {
      "fn": "TetherToken.issue",
      "offset": [
        13078,
        13123
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3594": {
      "fn": "TetherToken.issue",
      "offset": [
        13078,
        13123
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3595": {
      "fn": "TetherToken.issue",
      "offset": [
        13078,
        13123
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3596": {
      "fn": "TetherToken.issue",
      "offset": [
        13168,
        13183
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 29,
      "value": "0x0"
    },
    "3598": {
      "fn": "TetherToken.issue",
      "offset": [
        13177,
        13182
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3599": {
      "fn": "TetherToken.issue",
      "offset": [
        13177,
        13182
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3602": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3606": {
      "op": "EXP"
    },
    "3607": {
      "op": "SUB"
    },
    "3608": {
      "fn": "TetherToken.issue",
      "offset": [
        13177,
        13182
      ],
      "op": "AND",
      "path": "0"
    },
    "3609": {
      "fn": "TetherToken.issue",
      "offset": [
        13168,
        13183
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3610": {
      "fn": "TetherToken.issue",
      "offset": [
        13168,
        13183
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3611": {
      "fn": "TetherToken.issue",
      "offset": [
        13168,
        13176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3613": {
      "fn": "TetherToken.issue",
      "offset": [
        13168,
        13183
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3615": {
      "fn": "TetherToken.issue",
      "offset": [
        13168,
        13183
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3616": {
      "fn": "TetherToken.issue",
      "offset": [
        13168,
        13183
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3618": {
      "fn": "TetherToken.issue",
      "offset": [
        13168,
        13183
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3619": {
      "fn": "TetherToken.issue",
      "offset": [
        13168,
        13183
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3620": {
      "fn": "TetherToken.issue",
      "offset": [
        13168,
        13183
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3621": {
      "fn": "TetherToken.issue",
      "offset": [
        13141,
        13165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3622": {
      "fn": "TetherToken.issue",
      "offset": [
        13141,
        13165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3623": {
      "fn": "TetherToken.issue",
      "offset": [
        13141,
        13165
      ],
      "op": "ADD",
      "path": "0"
    },
    "3624": {
      "branch": 82,
      "fn": "TetherToken.issue",
      "offset": [
        13141,
        13183
      ],
      "op": "GT",
      "path": "0"
    },
    "3625": {
      "fn": "TetherToken.issue",
      "offset": [
        13133,
        13184
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE31"
    },
    "3628": {
      "branch": 82,
      "fn": "TetherToken.issue",
      "offset": [
        13133,
        13184
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3629": {
      "fn": "TetherToken.issue",
      "offset": [
        13133,
        13184
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3631": {
      "fn": "TetherToken.issue",
      "offset": [
        13133,
        13184
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3632": {
      "fn": "TetherToken.issue",
      "offset": [
        13133,
        13184
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3633": {
      "fn": "TetherToken.issue",
      "offset": [
        13133,
        13184
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3634": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13210
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0x0"
    },
    "3636": {
      "fn": "TetherToken.issue",
      "offset": [
        13204,
        13209
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3637": {
      "fn": "TetherToken.issue",
      "offset": [
        13204,
        13209
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3644": {
      "op": "EXP"
    },
    "3645": {
      "op": "SUB"
    },
    "3646": {
      "fn": "TetherToken.issue",
      "offset": [
        13204,
        13209
      ],
      "op": "AND",
      "path": "0"
    },
    "3647": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3648": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3649": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13203
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3651": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3653": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3654": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13210
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3655": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13210
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3656": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13210
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3658": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13210
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3659": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13210
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3660": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13210
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3661": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13210
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3662": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13220
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3663": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13220
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3664": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13220
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3665": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13220
      ],
      "op": "ADD",
      "path": "0"
    },
    "3666": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13220
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3667": {
      "fn": "TetherToken.issue",
      "offset": [
        13195,
        13220
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3668": {
      "fn": "TetherToken.issue",
      "offset": [
        13204,
        13209
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "3670": {
      "fn": "TetherToken.issue",
      "offset": [
        13230,
        13252
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 31
    },
    "3671": {
      "fn": "TetherToken.issue",
      "offset": [
        13230,
        13252
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3672": {
      "fn": "TetherToken.issue",
      "offset": [
        13230,
        13252
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3673": {
      "fn": "TetherToken.issue",
      "offset": [
        13230,
        13252
      ],
      "op": "ADD",
      "path": "0"
    },
    "3674": {
      "fn": "TetherToken.issue",
      "offset": [
        13230,
        13252
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3675": {
      "fn": "TetherToken.issue",
      "offset": [
        13230,
        13252
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3676": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 32
    },
    "3677": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3678": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3679": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3680": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3681": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3682": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3683": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xCB8241ADB0C3FDB35B70C24CE35C5EB0C17AF7431C99F827D44A445CA624176A"
    },
    "3716": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3717": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3718": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3719": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "SUB",
      "path": "0"
    },
    "3720": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3721": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3722": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "ADD",
      "path": "0"
    },
    "3723": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3724": {
      "fn": "TetherToken.issue",
      "offset": [
        13262,
        13275
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3725": {
      "fn": "TetherToken.issue",
      "offset": [
        13023,
        13282
      ],
      "op": "POP",
      "path": "0"
    },
    "3726": {
      "fn": "TetherToken.issue",
      "jump": "o",
      "offset": [
        13023,
        13282
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3727": {
      "fn": "TetherToken.redeem",
      "offset": [
        13506,
        13736
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3728": {
      "offset": [
        1479,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3730": {
      "fn": "TetherToken.redeem",
      "offset": [
        1479,
        1484
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3737": {
      "op": "EXP"
    },
    "3738": {
      "op": "SUB"
    },
    "3739": {
      "offset": [
        1479,
        1484
      ],
      "op": "AND",
      "path": "0"
    },
    "3740": {
      "offset": [
        1465,
        1475
      ],
      "op": "CALLER",
      "path": "0"
    },
    "3741": {
      "offset": [
        1465,
        1484
      ],
      "op": "EQ",
      "path": "0"
    },
    "3742": {
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEA6"
    },
    "3745": {
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3746": {
      "fn": "TetherToken.redeem",
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3748": {
      "fn": "TetherToken.redeem",
      "offset": [
        1457,
        1485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3749": {
      "fn": "TetherToken.redeem",
      "offset": [
        1457,
        1485
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3750": {
      "fn": "TetherToken.redeem",
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3751": {
      "fn": "TetherToken.redeem",
      "offset": [
        13570,
        13582
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 33,
      "value": "0x1"
    },
    "3753": {
      "fn": "TetherToken.redeem",
      "offset": [
        13570,
        13582
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3754": {
      "fn": "TetherToken.redeem",
      "offset": [
        13570,
        13592
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3755": {
      "op": "GT"
    },
    "3756": {
      "branch": 83,
      "fn": "TetherToken.redeem",
      "offset": [
        13570,
        13592
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3757": {
      "fn": "TetherToken.redeem",
      "offset": [
        13562,
        13593
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEB5"
    },
    "3760": {
      "branch": 83,
      "fn": "TetherToken.redeem",
      "offset": [
        13562,
        13593
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3761": {
      "fn": "TetherToken.redeem",
      "offset": [
        13562,
        13593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3763": {
      "fn": "TetherToken.redeem",
      "offset": [
        13562,
        13593
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3764": {
      "fn": "TetherToken.redeem",
      "offset": [
        13562,
        13593
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3765": {
      "fn": "TetherToken.redeem",
      "offset": [
        13562,
        13593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3766": {
      "fn": "TetherToken.redeem",
      "offset": [
        13611,
        13626
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 34,
      "value": "0x0"
    },
    "3768": {
      "fn": "TetherToken.redeem",
      "offset": [
        13620,
        13625
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3769": {
      "fn": "TetherToken.redeem",
      "offset": [
        13620,
        13625
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3772": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3774": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3776": {
      "op": "EXP"
    },
    "3777": {
      "op": "SUB"
    },
    "3778": {
      "fn": "TetherToken.redeem",
      "offset": [
        13620,
        13625
      ],
      "op": "AND",
      "path": "0"
    },
    "3779": {
      "fn": "TetherToken.redeem",
      "offset": [
        13611,
        13626
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3780": {
      "fn": "TetherToken.redeem",
      "offset": [
        13611,
        13626
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3781": {
      "fn": "TetherToken.redeem",
      "offset": [
        13611,
        13619
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3783": {
      "fn": "TetherToken.redeem",
      "offset": [
        13611,
        13626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3785": {
      "fn": "TetherToken.redeem",
      "offset": [
        13611,
        13626
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3786": {
      "fn": "TetherToken.redeem",
      "offset": [
        13611,
        13626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3788": {
      "fn": "TetherToken.redeem",
      "offset": [
        13611,
        13626
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3789": {
      "fn": "TetherToken.redeem",
      "offset": [
        13611,
        13626
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3790": {
      "fn": "TetherToken.redeem",
      "offset": [
        13611,
        13626
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3791": {
      "fn": "TetherToken.redeem",
      "offset": [
        13611,
        13636
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3792": {
      "op": "GT"
    },
    "3793": {
      "branch": 84,
      "fn": "TetherToken.redeem",
      "offset": [
        13611,
        13636
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3794": {
      "fn": "TetherToken.redeem",
      "offset": [
        13603,
        13637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEDA"
    },
    "3797": {
      "branch": 84,
      "fn": "TetherToken.redeem",
      "offset": [
        13603,
        13637
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3798": {
      "fn": "TetherToken.redeem",
      "offset": [
        13603,
        13637
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3800": {
      "fn": "TetherToken.redeem",
      "offset": [
        13603,
        13637
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3801": {
      "fn": "TetherToken.redeem",
      "offset": [
        13603,
        13637
      ],
      "op": "REVERT",
      "path": "0"
    },
    "3802": {
      "fn": "TetherToken.redeem",
      "offset": [
        13603,
        13637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3803": {
      "fn": "TetherToken.redeem",
      "offset": [
        13648,
        13660
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 35,
      "value": "0x1"
    },
    "3805": {
      "fn": "TetherToken.redeem",
      "offset": [
        13648,
        13670
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3806": {
      "fn": "TetherToken.redeem",
      "offset": [
        13648,
        13670
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3807": {
      "fn": "TetherToken.redeem",
      "offset": [
        13648,
        13670
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3808": {
      "fn": "TetherToken.redeem",
      "offset": [
        13648,
        13670
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3809": {
      "fn": "TetherToken.redeem",
      "offset": [
        13648,
        13670
      ],
      "op": "SUB",
      "path": "0"
    },
    "3810": {
      "fn": "TetherToken.redeem",
      "offset": [
        13648,
        13670
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3811": {
      "fn": "TetherToken.redeem",
      "offset": [
        13648,
        13670
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3812": {
      "fn": "TetherToken.redeem",
      "offset": [
        13648,
        13660
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3814": {
      "fn": "TetherToken.redeem",
      "offset": [
        13689,
        13694
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 36
    },
    "3815": {
      "fn": "TetherToken.redeem",
      "offset": [
        13689,
        13694
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3820": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3822": {
      "op": "EXP"
    },
    "3823": {
      "op": "SUB"
    },
    "3824": {
      "fn": "TetherToken.redeem",
      "offset": [
        13689,
        13694
      ],
      "op": "AND",
      "path": "0"
    },
    "3825": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13695
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3826": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13695
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3827": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "3829": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "3831": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13695
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3832": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13695
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3833": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13695
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3834": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3836": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13695
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3837": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13695
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3838": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13695
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3839": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13695
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "3840": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13705
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3841": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13705
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3842": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13705
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3843": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13705
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3844": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13705
      ],
      "op": "SUB",
      "path": "0"
    },
    "3845": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13705
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3846": {
      "fn": "TetherToken.redeem",
      "offset": [
        13680,
        13705
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3847": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 37
    },
    "3848": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3849": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3850": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3851": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3852": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3853": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3854": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x702D5967F45F6513A38FFC42D6BA9BF230BD40E8F53B16363C7EB4FD2DEB9A44"
    },
    "3887": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3888": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3889": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3890": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "SUB",
      "path": "0"
    },
    "3891": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3892": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3893": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "ADD",
      "path": "0"
    },
    "3894": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3895": {
      "fn": "TetherToken.redeem",
      "offset": [
        13715,
        13729
      ],
      "op": "LOG1",
      "path": "0"
    },
    "3896": {
      "fn": "TetherToken.redeem",
      "offset": [
        13506,
        13736
      ],
      "op": "POP",
      "path": "0"
    },
    "3897": {
      "fn": "TetherToken.redeem",
      "jump": "o",
      "offset": [
        13506,
        13736
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3898": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3899": {
      "fn": "TetherToken.allowance",
      "offset": [
        12171,
        12181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA"
    },
    "3901": {
      "fn": "TetherToken.allowance",
      "offset": [
        12171,
        12181
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3902": {
      "fn": "TetherToken.allowance",
      "offset": [
        12141,
        12155
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3904": {
      "fn": "TetherToken.allowance",
      "offset": [
        12141,
        12155
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3909": {
      "op": "EXP"
    },
    "3910": {
      "fn": "TetherToken.allowance",
      "offset": [
        12171,
        12181
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3911": {
      "fn": "TetherToken.allowance",
      "offset": [
        12171,
        12181
      ],
      "op": "DIV",
      "path": "0"
    },
    "3912": {
      "fn": "TetherToken.allowance",
      "offset": [
        12171,
        12181
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "3914": {
      "branch": 85,
      "fn": "TetherToken.allowance",
      "offset": [
        12171,
        12181
      ],
      "op": "AND",
      "path": "0"
    },
    "3915": {
      "fn": "TetherToken.allowance",
      "offset": [
        12167,
        12344
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "3916": {
      "fn": "TetherToken.allowance",
      "offset": [
        12167,
        12344
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF2"
    },
    "3919": {
      "branch": 85,
      "fn": "TetherToken.allowance",
      "offset": [
        12167,
        12344
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3920": {
      "fn": "TetherToken.allowance",
      "offset": [
        12218,
        12233
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 38,
      "value": "0xA"
    },
    "3922": {
      "fn": "TetherToken.allowance",
      "offset": [
        12218,
        12233
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3923": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3925": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3926": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3927": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDD62ED3E00000000000000000000000000000000000000000000000000000000"
    },
    "3960": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3961": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3968": {
      "op": "EXP"
    },
    "3969": {
      "op": "SUB"
    },
    "3970": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "DUP7",
      "path": "0"
    },
    "3971": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3972": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "AND",
      "path": "0"
    },
    "3973": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3975": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3976": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "ADD",
      "path": "0"
    },
    "3977": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3978": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "DUP6",
      "path": "0"
    },
    "3979": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3980": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "AND",
      "path": "0"
    },
    "3981": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "3983": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3984": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "ADD",
      "path": "0"
    },
    "3985": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3986": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3987": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3988": {
      "fn": "TetherToken.allowance",
      "offset": [
        12218,
        12233
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3989": {
      "fn": "TetherToken.allowance",
      "offset": [
        12218,
        12233
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3990": {
      "fn": "TetherToken.allowance",
      "offset": [
        12218,
        12233
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3991": {
      "fn": "TetherToken.allowance",
      "offset": [
        12218,
        12233
      ],
      "op": "AND",
      "path": "0"
    },
    "3992": {
      "fn": "TetherToken.allowance",
      "offset": [
        12218,
        12233
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3993": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12244
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "3998": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12244
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3999": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "4001": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4002": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4003": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "ADD",
      "path": "0"
    },
    "4004": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4005": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4007": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4008": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4009": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4010": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4011": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4012": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "SUB",
      "path": "0"
    },
    "4013": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "ADD",
      "path": "0"
    },
    "4014": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4015": {
      "fn": "TetherToken.allowance",
      "offset": [
        12218,
        12233
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4017": {
      "fn": "TetherToken.allowance",
      "offset": [
        12218,
        12233
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4018": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4019": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "4020": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4021": {
      "op": "DUP1"
    },
    "4022": {
      "op": "ISZERO"
    },
    "4023": {
      "op": "PUSH2",
      "value": "0xFBF"
    },
    "4026": {
      "op": "JUMPI"
    },
    "4027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4029": {
      "op": "DUP1"
    },
    "4030": {
      "op": "REVERT"
    },
    "4031": {
      "op": "JUMPDEST"
    },
    "4032": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "POP",
      "path": "0"
    },
    "4033": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "GAS",
      "path": "0"
    },
    "4034": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "CALL",
      "path": "0"
    },
    "4035": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4036": {
      "op": "DUP1"
    },
    "4037": {
      "op": "ISZERO"
    },
    "4038": {
      "op": "PUSH2",
      "value": "0xFD3"
    },
    "4041": {
      "op": "JUMPI"
    },
    "4042": {
      "op": "RETURNDATASIZE"
    },
    "4043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4045": {
      "op": "DUP1"
    },
    "4046": {
      "op": "RETURNDATACOPY"
    },
    "4047": {
      "op": "RETURNDATASIZE"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4050": {
      "op": "REVERT"
    },
    "4051": {
      "op": "JUMPDEST"
    },
    "4052": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "POP",
      "path": "0"
    },
    "4053": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "POP",
      "path": "0"
    },
    "4054": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "POP",
      "path": "0"
    },
    "4055": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "POP",
      "path": "0"
    },
    "4056": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4058": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4059": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4062": {
      "op": "DUP2"
    },
    "4063": {
      "op": "LT"
    },
    "4064": {
      "op": "ISZERO"
    },
    "4065": {
      "op": "PUSH2",
      "value": "0xFE9"
    },
    "4068": {
      "op": "JUMPI"
    },
    "4069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4071": {
      "op": "DUP1"
    },
    "4072": {
      "op": "REVERT"
    },
    "4073": {
      "op": "JUMPDEST"
    },
    "4074": {
      "op": "POP"
    },
    "4075": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4076": {
      "fn": "TetherToken.allowance",
      "offset": [
        12204,
        12262
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4077": {
      "op": "POP"
    },
    "4078": {
      "fn": "TetherToken.allowance",
      "offset": [
        12197,
        12262
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFFF"
    },
    "4081": {
      "fn": "TetherToken.allowance",
      "offset": [
        12197,
        12262
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4082": {
      "fn": "TetherToken.allowance",
      "offset": [
        12167,
        12344
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4083": {
      "fn": "TetherToken.allowance",
      "offset": [
        12300,
        12333
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 39,
      "value": "0xFFC"
    },
    "4086": {
      "fn": "TetherToken.allowance",
      "offset": [
        12316,
        12322
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4087": {
      "fn": "TetherToken.allowance",
      "offset": [
        12324,
        12332
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4088": {
      "fn": "TetherToken.allowance",
      "offset": [
        12300,
        12315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15FB"
    },
    "4091": {
      "fn": "TetherToken.allowance",
      "jump": "i",
      "offset": [
        12300,
        12333
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4092": {
      "fn": "TetherToken.allowance",
      "offset": [
        12300,
        12333
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4093": {
      "fn": "TetherToken.allowance",
      "offset": [
        12293,
        12333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4094": {
      "fn": "TetherToken.allowance",
      "offset": [
        12293,
        12333
      ],
      "op": "POP",
      "path": "0"
    },
    "4095": {
      "fn": "TetherToken.allowance",
      "offset": [
        12167,
        12344
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4096": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4097": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4098": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "POP",
      "path": "0"
    },
    "4099": {
      "fn": "TetherToken.allowance",
      "offset": [
        12063,
        12350
      ],
      "op": "POP",
      "path": "0"
    },
    "4100": {
      "fn": "TetherToken.allowance",
      "jump": "o",
      "offset": [
        12063,
        12350
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4101": {
      "offset": [
        2974,
        3005
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4102": {
      "fn": "TetherToken.allowance",
      "offset": [
        2974,
        3005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4104": {
      "fn": "TetherToken.allowance",
      "offset": [
        2974,
        3005
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4105": {
      "fn": "TetherToken.allowance",
      "offset": [
        2974,
        3005
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4106": {
      "fn": "TetherToken.allowance",
      "jump": "o",
      "offset": [
        2974,
        3005
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4107": {
      "offset": [
        8381,
        8427
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4108": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4110": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4112": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4113": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4115": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4116": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4117": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4118": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4120": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4121": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4122": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4123": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4125": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "AND",
      "path": "0"
    },
    "4126": {
      "fn": "TetherToken.allowance",
      "offset": [
        8381,
        8427
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4127": {
      "fn": "TetherToken.allowance",
      "jump": "o",
      "offset": [
        8381,
        8427
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4128": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8586,
        8743
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4129": {
      "offset": [
        1479,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4131": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        1479,
        1484
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4138": {
      "op": "EXP"
    },
    "4139": {
      "op": "SUB"
    },
    "4140": {
      "offset": [
        1479,
        1484
      ],
      "op": "AND",
      "path": "0"
    },
    "4141": {
      "offset": [
        1465,
        1475
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4142": {
      "offset": [
        1465,
        1484
      ],
      "op": "EQ",
      "path": "0"
    },
    "4143": {
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1037"
    },
    "4146": {
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4147": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4149": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        1457,
        1485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4150": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        1457,
        1485
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4151": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4156": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4158": {
      "op": "EXP"
    },
    "4159": {
      "op": "SUB"
    },
    "4160": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8688
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 40
    },
    "4161": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8688
      ],
      "op": "AND",
      "path": "0"
    },
    "4162": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8691,
        8696
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4164": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8688
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4165": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8688
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4166": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8688
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4167": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8674
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4169": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4171": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8688
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4172": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8688
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4173": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8688
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4174": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4176": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8688
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4177": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8688
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4178": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8688
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4179": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8688
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4180": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8696
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4181": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8696
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4184": {
      "op": "NOT"
    },
    "4185": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8696
      ],
      "op": "AND",
      "path": "0"
    },
    "4186": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8696
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4187": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8661,
        8696
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4188": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 41
    },
    "4189": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4190": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4191": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4192": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4193": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4194": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4195": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xD7E9EC6E6ECD65492DCE6BF513CD6867560D49544421D0783DDF06E76C24470C"
    },
    "4228": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4229": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4230": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4231": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "SUB",
      "path": "0"
    },
    "4232": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4233": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4234": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "ADD",
      "path": "0"
    },
    "4235": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4236": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8706,
        8736
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4237": {
      "fn": "BlackList.removeBlackList",
      "offset": [
        8586,
        8743
      ],
      "op": "POP",
      "path": "0"
    },
    "4238": {
      "fn": "BlackList.removeBlackList",
      "jump": "o",
      "offset": [
        8586,
        8743
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4239": {
      "offset": [
        4653,
        4695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4242": {
      "op": "NOT"
    },
    "4243": {
      "offset": [
        4653,
        4695
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4244": {
      "fn": "BlackList.removeBlackList",
      "jump": "o",
      "offset": [
        4653,
        4695
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4245": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1671,
        1818
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4246": {
      "offset": [
        1479,
        1484
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4248": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1479,
        1484
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4255": {
      "op": "EXP"
    },
    "4256": {
      "op": "SUB"
    },
    "4257": {
      "offset": [
        1479,
        1484
      ],
      "op": "AND",
      "path": "0"
    },
    "4258": {
      "offset": [
        1465,
        1475
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4259": {
      "offset": [
        1465,
        1484
      ],
      "op": "EQ",
      "path": "0"
    },
    "4260": {
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10AC"
    },
    "4263": {
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4264": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4266": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1457,
        1485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4267": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1457,
        1485
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4268": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4273": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4275": {
      "op": "EXP"
    },
    "4276": {
      "op": "SUB"
    },
    "4277": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1747,
        1769
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4278": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1747,
        1769
      ],
      "op": "AND",
      "path": "0"
    },
    "4279": {
      "branch": 86,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1747,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4280": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1743,
        1812
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10E4"
    },
    "4283": {
      "branch": 86,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1743,
        1812
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4284": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1785,
        1790
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 42,
      "value": "0x0"
    },
    "4286": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1785,
        1801
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4287": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1785,
        1801
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4288": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4309": {
      "op": "NOT"
    },
    "4310": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1785,
        1801
      ],
      "op": "AND",
      "path": "0"
    },
    "4311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4313": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4317": {
      "op": "EXP"
    },
    "4318": {
      "op": "SUB"
    },
    "4319": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1785,
        1801
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4320": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1785,
        1801
      ],
      "op": "AND",
      "path": "0"
    },
    "4321": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1785,
        1801
      ],
      "op": "OR",
      "path": "0"
    },
    "4322": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1785,
        1801
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4323": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1785,
        1801
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4324": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1743,
        1812
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4325": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1671,
        1818
      ],
      "op": "POP",
      "path": "0"
    },
    "4326": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1671,
        1818
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4327": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8749,
        9067
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4328": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8880,
        8895
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4330": {
      "offset": [
        1479,
        1484
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4331": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        1479,
        1484
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4338": {
      "op": "EXP"
    },
    "4339": {
      "op": "SUB"
    },
    "4340": {
      "offset": [
        1479,
        1484
      ],
      "op": "AND",
      "path": "0"
    },
    "4341": {
      "offset": [
        1465,
        1475
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4342": {
      "offset": [
        1465,
        1484
      ],
      "op": "EQ",
      "path": "0"
    },
    "4343": {
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10FF"
    },
    "4346": {
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4347": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        1457,
        1485
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4349": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        1457,
        1485
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4350": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        1457,
        1485
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4351": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        1457,
        1485
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4358": {
      "op": "EXP"
    },
    "4359": {
      "op": "SUB"
    },
    "4360": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8838,
        8869
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 43
    },
    "4361": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8838,
        8869
      ],
      "op": "AND",
      "path": "0"
    },
    "4362": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8838,
        8869
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4364": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8838,
        8869
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4365": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8838,
        8869
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4366": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8838,
        8869
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4367": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8838,
        8851
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4369": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8838,
        8869
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4371": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8838,
        8869
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4372": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8838,
        8869
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4374": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8838,
        8869
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4375": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8838,
        8869
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4376": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8838,
        8869
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4377": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8838,
        8869
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "4379": {
      "branch": 87,
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8838,
        8869
      ],
      "op": "AND",
      "path": "0"
    },
    "4380": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8830,
        8870
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4381": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8830,
        8870
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4382": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8830,
        8870
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1126"
    },
    "4385": {
      "branch": 87,
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8830,
        8870
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4386": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8830,
        8870
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4388": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8830,
        8870
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4389": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8830,
        8870
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4390": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8830,
        8870
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4391": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8898,
        8925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112F"
    },
    "4394": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8908,
        8924
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4395": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8898,
        8907
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB6"
    },
    "4398": {
      "fn": "BlackList.destroyBlackFunds",
      "jump": "i",
      "offset": [
        8898,
        8925
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4399": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8898,
        8925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4406": {
      "op": "EXP"
    },
    "4407": {
      "op": "SUB"
    },
    "4408": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8961
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 44
    },
    "4409": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8961
      ],
      "op": "AND",
      "path": "0"
    },
    "4410": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8964,
        8965
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4412": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8961
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4413": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8961
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4414": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8961
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4415": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8943
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4417": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4419": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8961
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4420": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8961
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4421": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8961
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4422": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8961
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4424": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8961
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4425": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8961
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4426": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8961
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4427": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8965
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4428": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8965
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4429": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8965
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4430": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8935,
        8965
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4431": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8975,
        8987
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 45,
      "value": "0x1"
    },
    "4433": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8975,
        9001
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4434": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8975,
        9001
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4435": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8975,
        9001
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4436": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8975,
        9001
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4437": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8975,
        9001
      ],
      "op": "SUB",
      "path": "0"
    },
    "4438": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8975,
        9001
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4439": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8975,
        9001
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4440": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 46
    },
    "4441": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4442": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4443": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4444": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4445": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4446": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "ADD",
      "path": "0"
    },
    "4447": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4448": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4449": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4450": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4451": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4452": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8880,
        8925
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4453": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8880,
        8925
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4454": {
      "op": "POP"
    },
    "4455": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x61E6E66B0D6339B2980AECC6CCC0039736791F0CCDE9ED512E789A7FBDD698C6"
    },
    "4488": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4489": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4490": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4491": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4492": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "SUB",
      "path": "0"
    },
    "4493": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "ADD",
      "path": "0"
    },
    "4494": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4495": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        9011,
        9060
      ],
      "op": "LOG1",
      "path": "0"
    },
    "4496": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8749,
        9067
      ],
      "op": "POP",
      "path": "0"
    },
    "4497": {
      "fn": "BlackList.destroyBlackFunds",
      "offset": [
        8749,
        9067
      ],
      "op": "POP",
      "path": "0"
    },
    "4498": {
      "fn": "BlackList.destroyBlackFunds",
      "jump": "o",
      "offset": [
        8749,
        9067
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4499": {
      "fn": "StandardToken.approve",
      "offset": [
        6097,
        6660
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4500": {
      "fn": "StandardToken.approve",
      "offset": [
        6168,
        6174
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4502": {
      "offset": [
        3184,
        3192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "4504": {
      "offset": [
        3166,
        3174
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "4505": {
      "offset": [
        3166,
        3192
      ],
      "op": "LT",
      "path": "0"
    },
    "4506": {
      "offset": [
        3164,
        3193
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4507": {
      "offset": [
        3156,
        3194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11A3"
    },
    "4510": {
      "offset": [
        3156,
        3194
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4511": {
      "fn": "StandardToken.approve",
      "offset": [
        3156,
        3194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4513": {
      "fn": "StandardToken.approve",
      "offset": [
        3156,
        3194
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4514": {
      "fn": "StandardToken.approve",
      "offset": [
        3156,
        3194
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4515": {
      "fn": "StandardToken.approve",
      "offset": [
        3156,
        3194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4516": {
      "fn": "StandardToken.approve",
      "offset": [
        6502,
        6513
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 47
    },
    "4517": {
      "fn": "StandardToken.approve",
      "offset": [
        6502,
        6513
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4518": {
      "fn": "StandardToken.approve",
      "offset": [
        6502,
        6513
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4519": {
      "fn": "StandardToken.approve",
      "offset": [
        6502,
        6513
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4520": {
      "fn": "StandardToken.approve",
      "offset": [
        6502,
        6513
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4521": {
      "fn": "StandardToken.approve",
      "offset": [
        6501,
        6554
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11D4"
    },
    "4524": {
      "fn": "StandardToken.approve",
      "offset": [
        6501,
        6554
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4525": {
      "op": "POP"
    },
    "4526": {
      "fn": "StandardToken.approve",
      "offset": [
        6527,
        6537
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4527": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4529": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6538
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4530": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6538
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4531": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6538
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4532": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6526
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4534": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4536": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6538
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4537": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6538
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4538": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6538
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4539": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4541": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6538
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4542": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6538
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4543": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6538
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4544": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4550": {
      "op": "EXP"
    },
    "4551": {
      "op": "SUB"
    },
    "4552": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6548
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4553": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6548
      ],
      "op": "AND",
      "path": "0"
    },
    "4554": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6548
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4555": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6548
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4556": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6548
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4557": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6548
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4558": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6548
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4559": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6548
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4560": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6548
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4561": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6548
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4562": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6553
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4563": {
      "fn": "StandardToken.approve",
      "offset": [
        6519,
        6553
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4564": {
      "fn": "StandardToken.approve",
      "offset": [
        6501,
        6554
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4565": {
      "fn": "StandardToken.approve",
      "offset": [
        6499,
        6555
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4566": {
      "fn": "StandardToken.approve",
      "offset": [
        6491,
        6556
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x11DE"
    },
    "4569": {
      "fn": "StandardToken.approve",
      "offset": [
        6491,
        6556
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4570": {
      "fn": "StandardToken.approve",
      "offset": [
        6491,
        6556
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4572": {
      "fn": "StandardToken.approve",
      "offset": [
        6491,
        6556
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4573": {
      "fn": "StandardToken.approve",
      "offset": [
        6491,
        6556
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4574": {
      "fn": "StandardToken.approve",
      "offset": [
        6491,
        6556
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4575": {
      "fn": "StandardToken.approve",
      "offset": [
        6575,
        6585
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 48
    },
    "4576": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4578": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6586
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4579": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6586
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4580": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6586
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4581": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6574
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4583": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4585": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6586
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4586": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6586
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4587": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6586
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4588": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4590": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6586
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4591": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6586
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4592": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6586
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4599": {
      "op": "EXP"
    },
    "4600": {
      "op": "SUB"
    },
    "4601": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6596
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4602": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6596
      ],
      "op": "AND",
      "path": "0"
    },
    "4603": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6596
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4604": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6596
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4605": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6596
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4606": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4607": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6596
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4608": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6596
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4609": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4610": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6596
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4611": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6596
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4612": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6596
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4613": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6605
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4614": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6605
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4615": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6605
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4616": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 49
    },
    "4617": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4618": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4619": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4620": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4621": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4622": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4623": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6596
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4624": {
      "fn": "StandardToken.approve",
      "offset": [
        6567,
        6596
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4625": {
      "fn": "StandardToken.approve",
      "offset": [
        6575,
        6585
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4626": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "4659": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4660": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4661": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4662": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4663": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "SUB",
      "path": "0"
    },
    "4664": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4665": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4666": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "ADD",
      "path": "0"
    },
    "4667": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4668": {
      "fn": "StandardToken.approve",
      "offset": [
        6615,
        6653
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4669": {
      "fn": "StandardToken.approve",
      "offset": [
        6097,
        6660
      ],
      "op": "POP",
      "path": "0"
    },
    "4670": {
      "fn": "StandardToken.approve",
      "offset": [
        6097,
        6660
      ],
      "op": "POP",
      "path": "0"
    },
    "4671": {
      "fn": "StandardToken.approve",
      "offset": [
        6097,
        6660
      ],
      "op": "POP",
      "path": "0"
    },
    "4672": {
      "fn": "StandardToken.approve",
      "jump": "o",
      "offset": [
        6097,
        6660
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4673": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        4977,
        5857
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4674": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5081,
        5095
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4676": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5081,
        5095
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4677": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5081,
        5095
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4678": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5063,
        5069
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4680": {
      "offset": [
        3184,
        3192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "4682": {
      "offset": [
        3166,
        3174
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "4683": {
      "offset": [
        3166,
        3192
      ],
      "op": "LT",
      "path": "0"
    },
    "4684": {
      "offset": [
        3164,
        3193
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4685": {
      "offset": [
        3156,
        3194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1255"
    },
    "4688": {
      "offset": [
        3156,
        3194
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4689": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        3156,
        3194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4691": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        3156,
        3194
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4692": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        3156,
        3194
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4693": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        3156,
        3194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4700": {
      "op": "EXP"
    },
    "4701": {
      "op": "SUB"
    },
    "4702": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5112
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4703": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5112
      ],
      "op": "AND",
      "path": "0"
    },
    "4704": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4706": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4707": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5112
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4708": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5112
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4709": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5105
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4711": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4713": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4714": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5112
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4715": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5112
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4716": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4718": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5112
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4719": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5112
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4720": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5112
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4721": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5113,
        5123
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4722": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5124
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4723": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5124
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4724": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5124
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4725": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5124
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4726": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5124
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4727": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5124
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4728": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5124
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4729": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5124
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4730": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5313,
        5328
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4732": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5313,
        5328
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4733": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5124
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4734": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5098,
        5124
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "4735": {
      "op": "POP"
    },
    "4736": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5301,
        5341
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12A4"
    },
    "4739": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5301,
        5341
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4740": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5335,
        5340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "4743": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5335,
        5340
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4744": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5302,
        5329
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1298"
    },
    "4747": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5302,
        5329
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4748": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5302,
        5308
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4749": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5302,
        5308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4750": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5302,
        5329
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4755": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5302,
        5312
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C5"
    },
    "4758": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5302,
        5329
      ],
      "op": "AND",
      "path": "0"
    },
    "4759": {
      "fn": "StandardToken.transferFrom",
      "jump": "i",
      "offset": [
        5302,
        5329
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4760": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5302,
        5329
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4761": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5301,
        5334
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4762": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5301,
        5341
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4767": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5301,
        5334
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1626"
    },
    "4770": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5301,
        5341
      ],
      "op": "AND",
      "path": "0"
    },
    "4771": {
      "fn": "StandardToken.transferFrom",
      "jump": "i",
      "offset": [
        5301,
        5341
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4772": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5301,
        5341
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4773": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5290,
        5341
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4774": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5290,
        5341
      ],
      "op": "POP",
      "path": "0"
    },
    "4775": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5361,
        5371
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4777": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5361,
        5371
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4778": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5355,
        5358
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4779": {
      "branch": 88,
      "fn": "StandardToken.transferFrom",
      "offset": [
        5355,
        5371
      ],
      "op": "GT",
      "path": "0"
    },
    "4780": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5351,
        5414
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4781": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5351,
        5414
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B6"
    },
    "4784": {
      "branch": 88,
      "fn": "StandardToken.transferFrom",
      "offset": [
        5351,
        5414
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4785": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5393,
        5403
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 50,
      "value": "0x4"
    },
    "4787": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5393,
        5403
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4788": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5387,
        5403
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4789": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5387,
        5403
      ],
      "op": "POP",
      "path": "0"
    },
    "4790": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5351,
        5414
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4791": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4793": {
      "op": "NOT"
    },
    "4794": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5427,
        5437
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4795": {
      "branch": 89,
      "fn": "StandardToken.transferFrom",
      "offset": [
        5427,
        5448
      ],
      "op": "LT",
      "path": "0"
    },
    "4796": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5423,
        5526
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4797": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5423,
        5526
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F5"
    },
    "4800": {
      "branch": 89,
      "fn": "StandardToken.transferFrom",
      "offset": [
        5423,
        5526
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4801": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5493,
        5515
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 51,
      "value": "0x12D0"
    },
    "4804": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5493,
        5503
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4805": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5508,
        5514
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4806": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5493,
        5515
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4811": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5493,
        5507
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163D"
    },
    "4814": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5493,
        5515
      ],
      "op": "AND",
      "path": "0"
    },
    "4815": {
      "fn": "StandardToken.transferFrom",
      "jump": "i",
      "offset": [
        5493,
        5515
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4816": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5493,
        5515
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4823": {
      "op": "EXP"
    },
    "4824": {
      "op": "SUB"
    },
    "4825": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5478
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4826": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5478
      ],
      "op": "AND",
      "path": "0"
    },
    "4827": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4829": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5478
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4830": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5478
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4831": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5478
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4832": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4834": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4836": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5478
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4837": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5478
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4838": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5478
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4839": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5478
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4841": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5478
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4842": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5478
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4843": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5478
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4844": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5479,
        5489
      ],
      "op": "CALLER",
      "path": "0"
    },
    "4845": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5490
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4846": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5490
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4847": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5490
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4848": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5490
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4849": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5490
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4850": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5490
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4851": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5490
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4852": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5464,
        5515
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4853": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5423,
        5526
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4854": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5553,
        5568
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1305"
    },
    "4857": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5553,
        5559
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4858": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5564,
        5567
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4859": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5553,
        5568
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4864": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5553,
        5563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163D"
    },
    "4867": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5553,
        5568
      ],
      "op": "AND",
      "path": "0"
    },
    "4868": {
      "fn": "StandardToken.transferFrom",
      "jump": "i",
      "offset": [
        5553,
        5568
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4869": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5553,
        5568
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4870": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4874": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4876": {
      "op": "EXP"
    },
    "4877": {
      "op": "SUB"
    },
    "4878": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5611
      ],
      "op": "DUP9",
      "path": "0",
      "statement": 52
    },
    "4879": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5611
      ],
      "op": "AND",
      "path": "0"
    },
    "4880": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4882": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4883": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5611
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4884": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5611
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4885": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4887": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4889": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5611
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4890": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5611
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4892": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5611
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4893": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5611
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4894": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5611
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4895": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5535,
        5568
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4896": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5535,
        5568
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4897": {
      "op": "POP"
    },
    "4898": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5623
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1331"
    },
    "4901": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5623
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4902": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5616,
        5622
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4903": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5623
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4908": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5615
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163D"
    },
    "4911": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5623
      ],
      "op": "AND",
      "path": "0"
    },
    "4912": {
      "fn": "StandardToken.transferFrom",
      "jump": "i",
      "offset": [
        5596,
        5623
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4913": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5596,
        5623
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4916": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4918": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4920": {
      "op": "EXP"
    },
    "4921": {
      "op": "SUB"
    },
    "4922": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5593
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4923": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5593
      ],
      "op": "DUP10",
      "path": "0"
    },
    "4924": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5593
      ],
      "op": "AND",
      "path": "0"
    },
    "4925": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4927": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5593
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4928": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5593
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4929": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5593
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4930": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5586
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4932": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4934": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5593
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4935": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5593
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4937": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5593
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4938": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5593
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4939": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5593
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4940": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5623
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4941": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5623
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4942": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5623
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4943": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5578,
        5623
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4944": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5649,
        5662
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 53
    },
    "4945": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5649,
        5662
      ],
      "op": "DUP9",
      "path": "0"
    },
    "4946": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5649,
        5662
      ],
      "op": "AND",
      "path": "0"
    },
    "4947": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5649,
        5662
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4948": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5649,
        5662
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4949": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5649,
        5662
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4950": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5649,
        5662
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4951": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5649,
        5678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1366"
    },
    "4954": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5649,
        5678
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4955": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5667,
        5677
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4956": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5649,
        5678
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "4961": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5649,
        5666
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164F"
    },
    "4964": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5649,
        5678
      ],
      "op": "AND",
      "path": "0"
    },
    "4965": {
      "fn": "StandardToken.transferFrom",
      "jump": "i",
      "offset": [
        5649,
        5678
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4966": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5649,
        5678
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4973": {
      "op": "EXP"
    },
    "4974": {
      "op": "SUB"
    },
    "4975": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5646
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4976": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5646
      ],
      "op": "AND",
      "path": "0"
    },
    "4977": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4979": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5646
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4980": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5646
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4981": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5646
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4982": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "4984": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4986": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5646
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4987": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5646
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4989": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5646
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4990": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5646
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "4991": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5678
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4992": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5678
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4993": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5678
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4994": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5633,
        5678
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4995": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5692,
        5699
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4996": {
      "branch": 90,
      "fn": "StandardToken.transferFrom",
      "offset": [
        5692,
        5699
      ],
      "op": "GT",
      "path": "0"
    },
    "4997": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5688,
        5809
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4998": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5688,
        5809
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13FB"
    },
    "5001": {
      "branch": 90,
      "fn": "StandardToken.transferFrom",
      "offset": [
        5688,
        5809
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5002": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5748
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 54,
      "value": "0x0"
    },
    "5004": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5742,
        5747
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5005": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5742,
        5747
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5008": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5010": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5012": {
      "op": "EXP"
    },
    "5013": {
      "op": "SUB"
    },
    "5014": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5742,
        5747
      ],
      "op": "AND",
      "path": "0"
    },
    "5015": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5748
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5016": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5748
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5017": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5741
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5019": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5021": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5748
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5022": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5748
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5024": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5748
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5025": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5748
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5026": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5748
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5027": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5757
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B2"
    },
    "5030": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5757
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5031": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5753,
        5756
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5032": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5757
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5037": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164F"
    },
    "5040": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5757
      ],
      "op": "AND",
      "path": "0"
    },
    "5041": {
      "fn": "StandardToken.transferFrom",
      "jump": "i",
      "offset": [
        5733,
        5757
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5042": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5733,
        5757
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5043": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5730
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5045": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5724,
        5729
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5046": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5724,
        5729
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5053": {
      "op": "EXP"
    },
    "5054": {
      "op": "SUB"
    },
    "5055": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5724,
        5729
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5056": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5724,
        5729
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5057": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5724,
        5729
      ],
      "op": "AND",
      "path": "0"
    },
    "5058": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5730
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5059": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5730
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5060": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5723
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5062": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5730
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5064": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5730
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5065": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5730
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5066": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5730
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5067": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5730
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5069": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5730
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5070": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5730
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5071": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5730
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5072": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5757
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5073": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5757
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5074": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5757
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5075": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5715,
        5757
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5076": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5787,
        5792
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 55
    },
    "5077": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5787,
        5792
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5078": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5079": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5080": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5081": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5082": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5083": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5084": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5085": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5787,
        5792
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5086": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5787,
        5792
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5087": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5787,
        5792
      ],
      "op": "AND",
      "path": "0"
    },
    "5088": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5787,
        5792
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5089": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5090": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "DUP12",
      "path": "0"
    },
    "5091": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "AND",
      "path": "0"
    },
    "5092": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5095": {
      "op": "DUP1"
    },
    "5096": {
      "op": "MLOAD"
    },
    "5097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5099": {
      "op": "PUSH2",
      "value": "0x165F"
    },
    "5102": {
      "op": "DUP4"
    },
    "5103": {
      "op": "CODECOPY"
    },
    "5104": {
      "op": "DUP2"
    },
    "5105": {
      "op": "MLOAD"
    },
    "5106": {
      "op": "SWAP2"
    },
    "5107": {
      "op": "MSTORE"
    },
    "5108": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5109": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5110": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5111": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "SUB",
      "path": "0"
    },
    "5112": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "ADD",
      "path": "0"
    },
    "5113": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5114": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5771,
        5798
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5115": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5688,
        5809
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5116": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5834,
        5837
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 56
    },
    "5117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5121": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5123": {
      "op": "EXP"
    },
    "5124": {
      "op": "SUB"
    },
    "5125": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "AND",
      "path": "0"
    },
    "5126": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5827,
        5832
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5131": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5133": {
      "op": "EXP"
    },
    "5134": {
      "op": "SUB"
    },
    "5135": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "AND",
      "path": "0"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5138": {
      "op": "DUP1"
    },
    "5139": {
      "op": "MLOAD"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5142": {
      "op": "PUSH2",
      "value": "0x165F"
    },
    "5145": {
      "op": "DUP4"
    },
    "5146": {
      "op": "CODECOPY"
    },
    "5147": {
      "op": "DUP2"
    },
    "5148": {
      "op": "MLOAD"
    },
    "5149": {
      "op": "SWAP2"
    },
    "5150": {
      "op": "MSTORE"
    },
    "5151": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5839,
        5849
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5152": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5154": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5155": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5156": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5157": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5158": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5159": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5161": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "ADD",
      "path": "0"
    },
    "5162": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5163": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "POP",
      "path": "0"
    },
    "5164": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "POP",
      "path": "0"
    },
    "5165": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5167": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5168": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5169": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5170": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "SUB",
      "path": "0"
    },
    "5171": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5172": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        5818,
        5850
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5173": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        4977,
        5857
      ],
      "op": "POP",
      "path": "0"
    },
    "5174": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        4977,
        5857
      ],
      "op": "POP",
      "path": "0"
    },
    "5175": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        4977,
        5857
      ],
      "op": "POP",
      "path": "0"
    },
    "5176": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        4977,
        5857
      ],
      "op": "POP",
      "path": "0"
    },
    "5177": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        4977,
        5857
      ],
      "op": "POP",
      "path": "0"
    },
    "5178": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        4977,
        5857
      ],
      "op": "POP",
      "path": "0"
    },
    "5179": {
      "fn": "StandardToken.transferFrom",
      "offset": [
        4977,
        5857
      ],
      "op": "POP",
      "path": "0"
    },
    "5180": {
      "fn": "StandardToken.transferFrom",
      "jump": "o",
      "offset": [
        4977,
        5857
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5181": {
      "fn": "BasicToken.balanceOf",
      "offset": [
        4149,
        4263
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5188": {
      "op": "EXP"
    },
    "5189": {
      "op": "SUB"
    },
    "5190": {
      "fn": "BasicToken.balanceOf",
      "offset": [
        4240,
        4256
      ],
      "op": "AND",
      "path": "0",
      "statement": 57
    },
    "5191": {
      "fn": "BasicToken.balanceOf",
      "offset": [
        4209,
        4221
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5193": {
      "fn": "BasicToken.balanceOf",
      "offset": [
        4240,
        4256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5194": {
      "fn": "BasicToken.balanceOf",
      "offset": [
        4240,
        4256
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5195": {
      "fn": "BasicToken.balanceOf",
      "offset": [
        4240,
        4256
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5196": {
      "fn": "BasicToken.balanceOf",
      "offset": [
        4240,
        4248
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5198": {
      "fn": "BasicToken.balanceOf",
      "offset": [
        4240,
        4256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5200": {
      "fn": "BasicToken.balanceOf",
      "offset": [
        4240,
        4256
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5201": {
      "fn": "BasicToken.balanceOf",
      "offset": [
        4240,
        4256
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5203": {
      "fn": "BasicToken.balanceOf",
      "offset": [
        4240,
        4256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5204": {
      "fn": "BasicToken.balanceOf",
      "offset": [
        4240,
        4256
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5205": {
      "fn": "BasicToken.balanceOf",
      "offset": [
        4240,
        4256
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5206": {
      "fn": "BasicToken.balanceOf",
      "offset": [
        4240,
        4256
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5207": {
      "fn": "BasicToken.balanceOf",
      "jump": "o",
      "offset": [
        4149,
        4263
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5208": {
      "fn": "BasicToken.transfer",
      "offset": [
        3378,
        3938
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5209": {
      "fn": "BasicToken.transfer",
      "offset": [
        3463,
        3471
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5211": {
      "fn": "BasicToken.transfer",
      "offset": [
        3463,
        3471
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5212": {
      "fn": "BasicToken.transfer",
      "offset": [
        3445,
        3451
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5214": {
      "offset": [
        3184,
        3192
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "5216": {
      "offset": [
        3166,
        3174
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "5217": {
      "offset": [
        3166,
        3192
      ],
      "op": "LT",
      "path": "0"
    },
    "5218": {
      "offset": [
        3164,
        3193
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5219": {
      "offset": [
        3156,
        3194
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x146B"
    },
    "5222": {
      "offset": [
        3156,
        3194
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5223": {
      "fn": "BasicToken.transfer",
      "offset": [
        3156,
        3194
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5225": {
      "fn": "BasicToken.transfer",
      "offset": [
        3156,
        3194
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5226": {
      "fn": "BasicToken.transfer",
      "offset": [
        3156,
        3194
      ],
      "op": "REVERT",
      "path": "0"
    },
    "5227": {
      "fn": "BasicToken.transfer",
      "offset": [
        3156,
        3194
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5228": {
      "fn": "BasicToken.transfer",
      "offset": [
        3474,
        3514
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1486"
    },
    "5231": {
      "fn": "BasicToken.transfer",
      "offset": [
        3508,
        3513
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2710"
    },
    "5234": {
      "fn": "BasicToken.transfer",
      "offset": [
        3475,
        3502
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1298"
    },
    "5237": {
      "fn": "BasicToken.transfer",
      "offset": [
        3486,
        3501
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "5239": {
      "fn": "BasicToken.transfer",
      "offset": [
        3486,
        3501
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5240": {
      "fn": "BasicToken.transfer",
      "offset": [
        3475,
        3481
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5241": {
      "fn": "BasicToken.transfer",
      "offset": [
        3475,
        3485
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C5"
    },
    "5244": {
      "fn": "BasicToken.transfer",
      "offset": [
        3475,
        3485
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5245": {
      "fn": "BasicToken.transfer",
      "offset": [
        3475,
        3502
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5246": {
      "fn": "BasicToken.transfer",
      "offset": [
        3475,
        3502
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5247": {
      "fn": "BasicToken.transfer",
      "offset": [
        3475,
        3502
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5252": {
      "fn": "BasicToken.transfer",
      "offset": [
        3475,
        3502
      ],
      "op": "AND",
      "path": "0"
    },
    "5253": {
      "fn": "BasicToken.transfer",
      "jump": "i",
      "offset": [
        3475,
        3502
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5254": {
      "fn": "BasicToken.transfer",
      "offset": [
        3474,
        3514
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5255": {
      "fn": "BasicToken.transfer",
      "offset": [
        3463,
        3514
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5256": {
      "fn": "BasicToken.transfer",
      "offset": [
        3463,
        3514
      ],
      "op": "POP",
      "path": "0"
    },
    "5257": {
      "fn": "BasicToken.transfer",
      "offset": [
        3534,
        3544
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5259": {
      "fn": "BasicToken.transfer",
      "offset": [
        3534,
        3544
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5260": {
      "fn": "BasicToken.transfer",
      "offset": [
        3528,
        3531
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5261": {
      "branch": 91,
      "fn": "BasicToken.transfer",
      "offset": [
        3528,
        3544
      ],
      "op": "GT",
      "path": "0"
    },
    "5262": {
      "fn": "BasicToken.transfer",
      "offset": [
        3524,
        3587
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5263": {
      "fn": "BasicToken.transfer",
      "offset": [
        3524,
        3587
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1498"
    },
    "5266": {
      "branch": 91,
      "fn": "BasicToken.transfer",
      "offset": [
        3524,
        3587
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5267": {
      "fn": "BasicToken.transfer",
      "offset": [
        3566,
        3576
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 58,
      "value": "0x4"
    },
    "5269": {
      "fn": "BasicToken.transfer",
      "offset": [
        3566,
        3576
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5270": {
      "fn": "BasicToken.transfer",
      "offset": [
        3560,
        3576
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5271": {
      "fn": "BasicToken.transfer",
      "offset": [
        3560,
        3576
      ],
      "op": "POP",
      "path": "0"
    },
    "5272": {
      "fn": "BasicToken.transfer",
      "offset": [
        3524,
        3587
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5273": {
      "fn": "BasicToken.transfer",
      "offset": [
        3614,
        3629
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14A8"
    },
    "5276": {
      "fn": "BasicToken.transfer",
      "offset": [
        3614,
        3620
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5277": {
      "fn": "BasicToken.transfer",
      "offset": [
        3625,
        3628
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5278": {
      "fn": "BasicToken.transfer",
      "offset": [
        3614,
        3629
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5283": {
      "fn": "BasicToken.transfer",
      "offset": [
        3614,
        3624
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163D"
    },
    "5286": {
      "fn": "BasicToken.transfer",
      "offset": [
        3614,
        3629
      ],
      "op": "AND",
      "path": "0"
    },
    "5287": {
      "fn": "BasicToken.transfer",
      "jump": "i",
      "offset": [
        3614,
        3629
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5288": {
      "fn": "BasicToken.transfer",
      "offset": [
        3614,
        3629
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5289": {
      "fn": "BasicToken.transfer",
      "offset": [
        3671,
        3681
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 59
    },
    "5290": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5292": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3682
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5293": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3682
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5294": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3682
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5295": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3670
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5297": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5299": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3682
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5300": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3682
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5302": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3682
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5303": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3682
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5304": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3682
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5305": {
      "fn": "BasicToken.transfer",
      "offset": [
        3596,
        3629
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5306": {
      "fn": "BasicToken.transfer",
      "offset": [
        3596,
        3629
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5307": {
      "op": "POP"
    },
    "5308": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3694
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14CB"
    },
    "5311": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5312": {
      "fn": "BasicToken.transfer",
      "offset": [
        3687,
        3693
      ],
      "op": "DUP6",
      "path": "0"
    },
    "5313": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3694
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5318": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3686
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x163D"
    },
    "5321": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3694
      ],
      "op": "AND",
      "path": "0"
    },
    "5322": {
      "fn": "BasicToken.transfer",
      "jump": "i",
      "offset": [
        3662,
        3694
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5323": {
      "fn": "BasicToken.transfer",
      "offset": [
        3662,
        3694
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5324": {
      "fn": "BasicToken.transfer",
      "offset": [
        3648,
        3658
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5325": {
      "fn": "BasicToken.transfer",
      "offset": [
        3639,
        3659
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5327": {
      "fn": "BasicToken.transfer",
      "offset": [
        3639,
        3659
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5328": {
      "fn": "BasicToken.transfer",
      "offset": [
        3639,
        3659
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5329": {
      "fn": "BasicToken.transfer",
      "offset": [
        3639,
        3659
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5330": {
      "fn": "BasicToken.transfer",
      "offset": [
        3639,
        3647
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5332": {
      "fn": "BasicToken.transfer",
      "offset": [
        3639,
        3659
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5334": {
      "fn": "BasicToken.transfer",
      "offset": [
        3639,
        3659
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5335": {
      "fn": "BasicToken.transfer",
      "offset": [
        3639,
        3659
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5337": {
      "fn": "BasicToken.transfer",
      "offset": [
        3639,
        3659
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5338": {
      "fn": "BasicToken.transfer",
      "offset": [
        3639,
        3659
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5339": {
      "fn": "BasicToken.transfer",
      "offset": [
        3639,
        3659
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5340": {
      "fn": "BasicToken.transfer",
      "offset": [
        3639,
        3694
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5341": {
      "fn": "BasicToken.transfer",
      "offset": [
        3639,
        3694
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5342": {
      "fn": "BasicToken.transfer",
      "offset": [
        3639,
        3694
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5343": {
      "fn": "BasicToken.transfer",
      "offset": [
        3639,
        3694
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5344": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5346": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5348": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5350": {
      "op": "EXP"
    },
    "5351": {
      "op": "SUB"
    },
    "5352": {
      "fn": "BasicToken.transfer",
      "offset": [
        3720,
        3733
      ],
      "op": "DUP8",
      "path": "0",
      "statement": 60
    },
    "5353": {
      "fn": "BasicToken.transfer",
      "offset": [
        3720,
        3733
      ],
      "op": "AND",
      "path": "0"
    },
    "5354": {
      "fn": "BasicToken.transfer",
      "offset": [
        3720,
        3733
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5355": {
      "fn": "BasicToken.transfer",
      "offset": [
        3720,
        3733
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5356": {
      "fn": "BasicToken.transfer",
      "offset": [
        3720,
        3733
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5357": {
      "fn": "BasicToken.transfer",
      "offset": [
        3720,
        3733
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5358": {
      "fn": "BasicToken.transfer",
      "offset": [
        3720,
        3749
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14FD"
    },
    "5361": {
      "fn": "BasicToken.transfer",
      "offset": [
        3720,
        3749
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5362": {
      "fn": "BasicToken.transfer",
      "offset": [
        3738,
        3748
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5363": {
      "fn": "BasicToken.transfer",
      "offset": [
        3720,
        3749
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5368": {
      "fn": "BasicToken.transfer",
      "offset": [
        3720,
        3737
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164F"
    },
    "5371": {
      "fn": "BasicToken.transfer",
      "offset": [
        3720,
        3749
      ],
      "op": "AND",
      "path": "0"
    },
    "5372": {
      "fn": "BasicToken.transfer",
      "jump": "i",
      "offset": [
        3720,
        3749
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5373": {
      "fn": "BasicToken.transfer",
      "offset": [
        3720,
        3749
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5378": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5380": {
      "op": "EXP"
    },
    "5381": {
      "op": "SUB"
    },
    "5382": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3717
      ],
      "op": "DUP7",
      "path": "0"
    },
    "5383": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3717
      ],
      "op": "AND",
      "path": "0"
    },
    "5384": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5386": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5387": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5388": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3717
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5389": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3712
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5391": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5393": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3717
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5394": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5396": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5397": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3717
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5398": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3749
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5399": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3749
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5400": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3749
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5401": {
      "fn": "BasicToken.transfer",
      "offset": [
        3704,
        3749
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5402": {
      "fn": "BasicToken.transfer",
      "offset": [
        3763,
        3770
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5403": {
      "branch": 92,
      "fn": "BasicToken.transfer",
      "offset": [
        3763,
        3770
      ],
      "op": "GT",
      "path": "0"
    },
    "5404": {
      "fn": "BasicToken.transfer",
      "offset": [
        3759,
        3885
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5405": {
      "fn": "BasicToken.transfer",
      "offset": [
        3759,
        3885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1590"
    },
    "5408": {
      "branch": 92,
      "fn": "BasicToken.transfer",
      "offset": [
        3759,
        3885
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5409": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3819
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 61,
      "value": "0x0"
    },
    "5411": {
      "fn": "BasicToken.transfer",
      "offset": [
        3813,
        3818
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5412": {
      "fn": "BasicToken.transfer",
      "offset": [
        3813,
        3818
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5419": {
      "op": "EXP"
    },
    "5420": {
      "op": "SUB"
    },
    "5421": {
      "fn": "BasicToken.transfer",
      "offset": [
        3813,
        3818
      ],
      "op": "AND",
      "path": "0"
    },
    "5422": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3819
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5423": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3819
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5424": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3812
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5426": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3819
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5428": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3819
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5429": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3819
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5431": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3819
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5432": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3819
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5433": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3819
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5434": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3828
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1549"
    },
    "5437": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3828
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5438": {
      "fn": "BasicToken.transfer",
      "offset": [
        3824,
        3827
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5439": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3828
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "5444": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3823
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x164F"
    },
    "5447": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3828
      ],
      "op": "AND",
      "path": "0"
    },
    "5448": {
      "fn": "BasicToken.transfer",
      "jump": "i",
      "offset": [
        3804,
        3828
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5449": {
      "fn": "BasicToken.transfer",
      "offset": [
        3804,
        3828
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5450": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5452": {
      "fn": "BasicToken.transfer",
      "offset": [
        3795,
        3800
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5453": {
      "fn": "BasicToken.transfer",
      "offset": [
        3795,
        3800
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5458": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5460": {
      "op": "EXP"
    },
    "5461": {
      "op": "SUB"
    },
    "5462": {
      "fn": "BasicToken.transfer",
      "offset": [
        3795,
        3800
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5463": {
      "fn": "BasicToken.transfer",
      "offset": [
        3795,
        3800
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5464": {
      "fn": "BasicToken.transfer",
      "offset": [
        3795,
        3800
      ],
      "op": "AND",
      "path": "0"
    },
    "5465": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3801
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5466": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3801
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5467": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3794
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "5469": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5471": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3801
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5472": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3801
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5473": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3801
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5474": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3801
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5476": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3801
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5477": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3801
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5478": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3801
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5479": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3828
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5480": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3828
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5481": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3828
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5482": {
      "fn": "BasicToken.transfer",
      "offset": [
        3786,
        3828
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "5483": {
      "fn": "BasicToken.transfer",
      "offset": [
        3863,
        3868
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 62
    },
    "5484": {
      "fn": "BasicToken.transfer",
      "offset": [
        3863,
        3868
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5485": {
      "fn": "BasicToken.transfer",
      "offset": [
        3842,
        3874
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5486": {
      "fn": "BasicToken.transfer",
      "offset": [
        3842,
        3874
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5487": {
      "fn": "BasicToken.transfer",
      "offset": [
        3842,
        3874
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5488": {
      "fn": "BasicToken.transfer",
      "offset": [
        3842,
        3874
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5489": {
      "fn": "BasicToken.transfer",
      "offset": [
        3842,
        3874
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5490": {
      "fn": "BasicToken.transfer",
      "offset": [
        3842,
        3874
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5491": {
      "fn": "BasicToken.transfer",
      "offset": [
        3842,
        3874
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5492": {
      "fn": "BasicToken.transfer",
      "offset": [
        3863,
        3868
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5493": {
      "fn": "BasicToken.transfer",
      "offset": [
        3863,
        3868
      ],
      "op": "AND",
      "path": "0"
    },
    "5494": {
      "fn": "BasicToken.transfer",
      "offset": [
        3863,
        3868
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5495": {
      "fn": "BasicToken.transfer",
      "offset": [
        3851,
        3861
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5496": {
      "fn": "BasicToken.transfer",
      "offset": [
        3851,
        3861
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5499": {
      "op": "DUP1"
    },
    "5500": {
      "op": "MLOAD"
    },
    "5501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5503": {
      "op": "PUSH2",
      "value": "0x165F"
    },
    "5506": {
      "op": "DUP4"
    },
    "5507": {
      "op": "CODECOPY"
    },
    "5508": {
      "op": "DUP2"
    },
    "5509": {
      "op": "MLOAD"
    },
    "5510": {
      "op": "SWAP2"
    },
    "5511": {
      "op": "MSTORE"
    },
    "5512": {
      "fn": "BasicToken.transfer",
      "offset": [
        3842,
        3874
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5513": {
      "fn": "BasicToken.transfer",
      "offset": [
        3842,
        3874
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5514": {
      "fn": "BasicToken.transfer",
      "offset": [
        3842,
        3874
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5515": {
      "fn": "BasicToken.transfer",
      "offset": [
        3842,
        3874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5516": {
      "fn": "BasicToken.transfer",
      "offset": [
        3842,
        3874
      ],
      "op": "SUB",
      "path": "0"
    },
    "5517": {
      "fn": "BasicToken.transfer",
      "offset": [
        3842,
        3874
      ],
      "op": "ADD",
      "path": "0"
    },
    "5518": {
      "fn": "BasicToken.transfer",
      "offset": [
        3842,
        3874
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5519": {
      "fn": "BasicToken.transfer",
      "offset": [
        3842,
        3874
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5520": {
      "fn": "BasicToken.transfer",
      "offset": [
        3759,
        3885
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5521": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 63,
      "value": "0x40"
    },
    "5523": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5524": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5525": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5526": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5527": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5528": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5529": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5534": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5536": {
      "op": "EXP"
    },
    "5537": {
      "op": "SUB"
    },
    "5538": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "DUP8",
      "path": "0"
    },
    "5539": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "AND",
      "path": "0"
    },
    "5540": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5541": {
      "fn": "BasicToken.transfer",
      "offset": [
        3903,
        3913
      ],
      "op": "CALLER",
      "path": "0"
    },
    "5542": {
      "fn": "BasicToken.transfer",
      "offset": [
        3903,
        3913
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5543": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5545": {
      "op": "DUP1"
    },
    "5546": {
      "op": "MLOAD"
    },
    "5547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5549": {
      "op": "PUSH2",
      "value": "0x165F"
    },
    "5552": {
      "op": "DUP4"
    },
    "5553": {
      "op": "CODECOPY"
    },
    "5554": {
      "op": "DUP2"
    },
    "5555": {
      "op": "MLOAD"
    },
    "5556": {
      "op": "SWAP2"
    },
    "5557": {
      "op": "MSTORE"
    },
    "5558": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5559": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5560": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5561": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "SUB",
      "path": "0"
    },
    "5562": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5564": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "ADD",
      "path": "0"
    },
    "5565": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5566": {
      "fn": "BasicToken.transfer",
      "offset": [
        3894,
        3931
      ],
      "op": "LOG3",
      "path": "0"
    },
    "5567": {
      "fn": "BasicToken.transfer",
      "offset": [
        3378,
        3938
      ],
      "op": "POP",
      "path": "0"
    },
    "5568": {
      "fn": "BasicToken.transfer",
      "offset": [
        3378,
        3938
      ],
      "op": "POP",
      "path": "0"
    },
    "5569": {
      "fn": "BasicToken.transfer",
      "offset": [
        3378,
        3938
      ],
      "op": "POP",
      "path": "0"
    },
    "5570": {
      "fn": "BasicToken.transfer",
      "offset": [
        3378,
        3938
      ],
      "op": "POP",
      "path": "0"
    },
    "5571": {
      "fn": "BasicToken.transfer",
      "offset": [
        3378,
        3938
      ],
      "op": "POP",
      "path": "0"
    },
    "5572": {
      "fn": "BasicToken.transfer",
      "jump": "o",
      "offset": [
        3378,
        3938
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5573": {
      "fn": "SafeMath.mul",
      "offset": [
        139,
        340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5574": {
      "fn": "SafeMath.mul",
      "offset": [
        197,
        204
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5576": {
      "fn": "SafeMath.mul",
      "offset": [
        197,
        204
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5577": {
      "fn": "SafeMath.mul",
      "offset": [
        220,
        226
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5578": {
      "branch": 93,
      "fn": "SafeMath.mul",
      "offset": [
        220,
        226
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5579": {
      "fn": "SafeMath.mul",
      "offset": [
        216,
        261
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5580": {
      "fn": "SafeMath.mul",
      "offset": [
        216,
        261
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15D8"
    },
    "5583": {
      "branch": 93,
      "fn": "SafeMath.mul",
      "offset": [
        216,
        261
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5584": {
      "fn": "SafeMath.mul",
      "offset": [
        249,
        250
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 64,
      "value": "0x0"
    },
    "5586": {
      "fn": "SafeMath.mul",
      "offset": [
        242,
        250
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5587": {
      "fn": "SafeMath.mul",
      "offset": [
        242,
        250
      ],
      "op": "POP",
      "path": "0"
    },
    "5588": {
      "fn": "SafeMath.mul",
      "offset": [
        242,
        250
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15F4"
    },
    "5591": {
      "fn": "SafeMath.mul",
      "offset": [
        242,
        250
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5592": {
      "fn": "SafeMath.mul",
      "offset": [
        216,
        261
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5593": {
      "op": "POP"
    },
    "5594": {
      "fn": "SafeMath.mul",
      "offset": [
        282,
        287
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5595": {
      "fn": "SafeMath.mul",
      "offset": [
        282,
        287
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5596": {
      "fn": "SafeMath.mul",
      "offset": [
        282,
        287
      ],
      "op": "MUL",
      "path": "0"
    },
    "5597": {
      "fn": "SafeMath.mul",
      "offset": [
        286,
        287
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5598": {
      "fn": "SafeMath.mul",
      "offset": [
        282,
        283
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5599": {
      "fn": "SafeMath.mul",
      "offset": [
        282,
        287
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5600": {
      "fn": "SafeMath.mul",
      "offset": [
        304,
        309
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 65
    },
    "5601": {
      "fn": "SafeMath.mul",
      "offset": [
        304,
        309
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5602": {
      "fn": "SafeMath.mul",
      "offset": [
        304,
        309
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5603": {
      "fn": "SafeMath.mul",
      "offset": [
        304,
        309
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15E8"
    },
    "5606": {
      "fn": "SafeMath.mul",
      "offset": [
        304,
        309
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5607": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        304,
        309
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5608": {
      "fn": "SafeMath.mul",
      "offset": [
        304,
        309
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5609": {
      "fn": "SafeMath.mul",
      "offset": [
        304,
        309
      ],
      "op": "DIV",
      "path": "0"
    },
    "5610": {
      "fn": "SafeMath.mul",
      "offset": [
        304,
        314
      ],
      "op": "EQ",
      "path": "0"
    },
    "5611": {
      "fn": "SafeMath.mul",
      "offset": [
        297,
        315
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15F0"
    },
    "5614": {
      "fn": "SafeMath.mul",
      "offset": [
        297,
        315
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5615": {
      "fn": "SafeMath.mul",
      "offset": [
        297,
        315
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5616": {
      "fn": "SafeMath.mul",
      "offset": [
        297,
        315
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5617": {
      "fn": "SafeMath.mul",
      "offset": [
        332,
        333
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 66
    },
    "5618": {
      "fn": "SafeMath.mul",
      "offset": [
        325,
        333
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5619": {
      "fn": "SafeMath.mul",
      "offset": [
        325,
        333
      ],
      "op": "POP",
      "path": "0"
    },
    "5620": {
      "fn": "SafeMath.mul",
      "offset": [
        139,
        340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5621": {
      "fn": "SafeMath.mul",
      "offset": [
        139,
        340
      ],
      "op": "POP",
      "path": "0"
    },
    "5622": {
      "fn": "SafeMath.mul",
      "offset": [
        139,
        340
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "5623": {
      "fn": "SafeMath.mul",
      "offset": [
        139,
        340
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5624": {
      "fn": "SafeMath.mul",
      "offset": [
        139,
        340
      ],
      "op": "POP",
      "path": "0"
    },
    "5625": {
      "fn": "SafeMath.mul",
      "offset": [
        139,
        340
      ],
      "op": "POP",
      "path": "0"
    },
    "5626": {
      "fn": "SafeMath.mul",
      "jump": "o",
      "offset": [
        139,
        340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5627": {
      "fn": "StandardToken.allowance",
      "offset": [
        6985,
        7128
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5632": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5634": {
      "op": "EXP"
    },
    "5635": {
      "op": "SUB"
    },
    "5636": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7111
      ],
      "op": "SWAP2",
      "path": "0",
      "statement": 67
    },
    "5637": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7111
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5638": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7111
      ],
      "op": "AND",
      "path": "0"
    },
    "5639": {
      "fn": "StandardToken.allowance",
      "offset": [
        7063,
        7077
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5641": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7111
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5642": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7111
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5643": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7111
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5644": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7103
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "5646": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "5648": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7111
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5649": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7111
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5650": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7111
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5651": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5653": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7111
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5654": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7111
      ],
      "op": "DUP4",
      "path": "0"
    },
    "5655": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7111
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5656": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7121
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5657": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5658": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7121
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5659": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7121
      ],
      "op": "AND",
      "path": "0"
    },
    "5660": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7121
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5661": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7121
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5662": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5663": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5664": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "5665": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7121
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5666": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7121
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "5667": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5668": {
      "fn": "StandardToken.allowance",
      "offset": [
        7096,
        7121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5669": {
      "fn": "StandardToken.allowance",
      "jump": "o",
      "offset": [
        6985,
        7128
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5670": {
      "fn": "SafeMath.div",
      "offset": [
        346,
        629
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5671": {
      "fn": "SafeMath.div",
      "offset": [
        404,
        411
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5673": {
      "fn": "SafeMath.div",
      "offset": [
        501,
        510
      ],
      "op": "DUP1",
      "path": "0"
    },
    "5674": {
      "fn": "SafeMath.div",
      "offset": [
        517,
        518
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5675": {
      "fn": "SafeMath.div",
      "offset": [
        513,
        514
      ],
      "op": "DUP5",
      "path": "0"
    },
    "5676": {
      "fn": "SafeMath.div",
      "offset": [
        513,
        518
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5677": {
      "fn": "SafeMath.div",
      "offset": [
        513,
        518
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5678": {
      "fn": "SafeMath.div",
      "offset": [
        513,
        518
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5679": {
      "fn": "SafeMath.div",
      "offset": [
        513,
        518
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1634"
    },
    "5682": {
      "fn": "SafeMath.div",
      "offset": [
        513,
        518
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5683": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        513,
        518
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5684": {
      "fn": "SafeMath.div",
      "offset": [
        513,
        518
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5685": {
      "fn": "SafeMath.div",
      "offset": [
        513,
        518
      ],
      "op": "DIV",
      "path": "0"
    },
    "5686": {
      "fn": "SafeMath.div",
      "offset": [
        513,
        518
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "5687": {
      "fn": "SafeMath.div",
      "offset": [
        346,
        629
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "5688": {
      "op": "POP"
    },
    "5689": {
      "op": "POP"
    },
    "5690": {
      "op": "POP"
    },
    "5691": {
      "op": "POP"
    },
    "5692": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        346,
        629
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5693": {
      "fn": "SafeMath.sub",
      "offset": [
        635,
        755
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5694": {
      "fn": "SafeMath.sub",
      "offset": [
        693,
        700
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5696": {
      "fn": "SafeMath.sub",
      "offset": [
        719,
        725
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 68
    },
    "5697": {
      "fn": "SafeMath.sub",
      "offset": [
        719,
        725
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5698": {
      "fn": "SafeMath.sub",
      "offset": [
        719,
        725
      ],
      "op": "GT",
      "path": "0"
    },
    "5699": {
      "fn": "SafeMath.sub",
      "offset": [
        719,
        725
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5700": {
      "fn": "SafeMath.sub",
      "offset": [
        712,
        726
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1649"
    },
    "5703": {
      "fn": "SafeMath.sub",
      "offset": [
        712,
        726
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5704": {
      "fn": "SafeMath.sub",
      "offset": [
        712,
        726
      ],
      "op": "INVALID",
      "path": "0"
    },
    "5705": {
      "fn": "SafeMath.sub",
      "offset": [
        712,
        726
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5706": {
      "op": "POP"
    },
    "5707": {
      "fn": "SafeMath.sub",
      "offset": [
        743,
        748
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 69
    },
    "5708": {
      "fn": "SafeMath.sub",
      "offset": [
        743,
        748
      ],
      "op": "SUB",
      "path": "0"
    },
    "5709": {
      "fn": "SafeMath.sub",
      "offset": [
        743,
        748
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5710": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        635,
        755
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5711": {
      "fn": "SafeMath.add",
      "offset": [
        761,
        904
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5712": {
      "fn": "SafeMath.add",
      "offset": [
        819,
        826
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "5714": {
      "fn": "SafeMath.add",
      "offset": [
        850,
        855
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5715": {
      "fn": "SafeMath.add",
      "offset": [
        850,
        855
      ],
      "op": "DUP3",
      "path": "0"
    },
    "5716": {
      "fn": "SafeMath.add",
      "offset": [
        850,
        855
      ],
      "op": "ADD",
      "path": "0"
    },
    "5717": {
      "fn": "SafeMath.add",
      "offset": [
        872,
        878
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 70
    },
    "5718": {
      "fn": "SafeMath.add",
      "offset": [
        872,
        878
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5719": {
      "fn": "SafeMath.add",
      "offset": [
        872,
        878
      ],
      "op": "LT",
      "path": "0"
    },
    "5720": {
      "fn": "SafeMath.add",
      "offset": [
        872,
        878
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "5721": {
      "fn": "SafeMath.add",
      "offset": [
        865,
        879
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15F0"
    },
    "5724": {
      "fn": "SafeMath.add",
      "offset": [
        865,
        879
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5725": {
      "fn": "SafeMath.add",
      "offset": [
        865,
        879
      ],
      "op": "INVALID",
      "path": "0"
    }
  },
  "sha1": "ae7c6e9891cddd9e64b27cca5c6be57ec690e02a",
  "source": "pragma solidity ^0.4.17;\n\n/**\n * @title SafeMath\n * @dev Math operations with safety checks that throw on error\n */\nlibrary SafeMath {\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n        uint256 c = a * b;\n        assert(c / a == b);\n        return c;\n    }\n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        // assert(b > 0); // Solidity automatically throws when dividing by 0\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n        return c;\n    }\n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        assert(b <= a);\n        return a - b;\n    }\n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        assert(c >= a);\n        return c;\n    }\n}\n\n/**\n * @title Ownable\n * @dev The Ownable contract has an owner address, and provides basic authorization control\n * functions, this simplifies the implementation of \"user permissions\".\n */\ncontract Ownable {\n    address public owner;\n\n    /**\n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender\n      * account.\n      */\n    function Ownable() public {\n        owner = msg.sender;\n    }\n\n    /**\n      * @dev Throws if called by any account other than the owner.\n      */\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    /**\n    * @dev Allows the current owner to transfer control of the contract to a newOwner.\n    * @param newOwner The address to transfer ownership to.\n    */\n    function transferOwnership(address newOwner) public onlyOwner {\n        if (newOwner != address(0)) {\n            owner = newOwner;\n        }\n    }\n\n}\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20Basic {\n    uint public _totalSupply;\n    function totalSupply() public constant returns (uint);\n    function balanceOf(address who) public constant returns (uint);\n    function transfer(address to, uint value) public;\n    event Transfer(address indexed from, address indexed to, uint value);\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public constant returns (uint);\n    function transferFrom(address from, address to, uint value) public;\n    function approve(address spender, uint value) public;\n    event Approval(address indexed owner, address indexed spender, uint value);\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is Ownable, ERC20Basic {\n    using SafeMath for uint;\n\n    mapping(address => uint) public balances;\n\n    // additional variables for use if transaction fees ever became necessary\n    uint public basisPointsRate = 0;\n    uint public maximumFee = 0;\n\n    /**\n    * @dev Fix for the ERC20 short address attack.\n    */\n    modifier onlyPayloadSize(uint size) {\n        require(!(msg.data.length < size + 4));\n        _;\n    }\n\n    /**\n    * @dev transfer token for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\n        if (fee > maximumFee) {\n            fee = maximumFee;\n        }\n        uint sendAmount = _value.sub(fee);\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(sendAmount);\n        if (fee > 0) {\n            balances[owner] = balances[owner].add(fee);\n            Transfer(msg.sender, owner, fee);\n        }\n        Transfer(msg.sender, _to, sendAmount);\n    }\n\n    /**\n    * @dev Gets the balance of the specified address.\n    * @param _owner The address to query the the balance of.\n    * @return An uint representing the amount owned by the passed address.\n    */\n    function balanceOf(address _owner) public constant returns (uint balance) {\n        return balances[_owner];\n    }\n\n}\n\n/**\n * @title Standard ERC20 token\n *\n * @dev Implementation of the basic standard token.\n * @dev https://github.com/ethereum/EIPs/issues/20\n * @dev Based oncode by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol\n */\ncontract StandardToken is BasicToken, ERC20 {\n\n    mapping (address => mapping (address => uint)) public allowed;\n\n    uint public constant MAX_UINT = 2**256 - 1;\n\n    /**\n    * @dev Transfer tokens from one address to another\n    * @param _from address The address which you want to send tokens from\n    * @param _to address The address which you want to transfer to\n    * @param _value uint the amount of tokens to be transferred\n    */\n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {\n        var _allowance = allowed[_from][msg.sender];\n\n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met\n        // if (_value > _allowance) throw;\n\n        uint fee = (_value.mul(basisPointsRate)).div(10000);\n        if (fee > maximumFee) {\n            fee = maximumFee;\n        }\n        if (_allowance < MAX_UINT) {\n            allowed[_from][msg.sender] = _allowance.sub(_value);\n        }\n        uint sendAmount = _value.sub(fee);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(sendAmount);\n        if (fee > 0) {\n            balances[owner] = balances[owner].add(fee);\n            Transfer(_from, owner, fee);\n        }\n        Transfer(_from, _to, sendAmount);\n    }\n\n    /**\n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n    * @param _spender The address which will spend the funds.\n    * @param _value The amount of tokens to be spent.\n    */\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\n\n        // To change the approve amount you first have to reduce the addresses`\n        //  allowance to zero by calling `approve(_spender, 0)` if it is not\n        //  already 0 to mitigate the race condition described here:\n        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));\n\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n    }\n\n    /**\n    * @dev Function to check the amount of tokens than an owner allowed to a spender.\n    * @param _owner address The address which owns the funds.\n    * @param _spender address The address which will spend the funds.\n    * @return A uint specifying the amount of tokens still available for the spender.\n    */\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\n        return allowed[_owner][_spender];\n    }\n\n}\n\n\n/**\n * @title Pausable\n * @dev Base contract which allows children to implement an emergency stop mechanism.\n */\ncontract Pausable is Ownable {\n  event Pause();\n  event Unpause();\n\n  bool public paused = false;\n\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is not paused.\n   */\n  modifier whenNotPaused() {\n    require(!paused);\n    _;\n  }\n\n  /**\n   * @dev Modifier to make a function callable only when the contract is paused.\n   */\n  modifier whenPaused() {\n    require(paused);\n    _;\n  }\n\n  /**\n   * @dev called by the owner to pause, triggers stopped state\n   */\n  function pause() onlyOwner whenNotPaused public {\n    paused = true;\n    Pause();\n  }\n\n  /**\n   * @dev called by the owner to unpause, returns to normal state\n   */\n  function unpause() onlyOwner whenPaused public {\n    paused = false;\n    Unpause();\n  }\n}\n\ncontract BlackList is Ownable, BasicToken {\n\n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////\n    function getBlackListStatus(address _maker) external constant returns (bool) {\n        return isBlackListed[_maker];\n    }\n\n    function getOwner() external constant returns (address) {\n        return owner;\n    }\n\n    mapping (address => bool) public isBlackListed;\n    \n    function addBlackList (address _evilUser) public onlyOwner {\n        isBlackListed[_evilUser] = true;\n        AddedBlackList(_evilUser);\n    }\n\n    function removeBlackList (address _clearedUser) public onlyOwner {\n        isBlackListed[_clearedUser] = false;\n        RemovedBlackList(_clearedUser);\n    }\n\n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {\n        require(isBlackListed[_blackListedUser]);\n        uint dirtyFunds = balanceOf(_blackListedUser);\n        balances[_blackListedUser] = 0;\n        _totalSupply -= dirtyFunds;\n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);\n    }\n\n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);\n\n    event AddedBlackList(address _user);\n\n    event RemovedBlackList(address _user);\n\n}\n\ncontract UpgradedStandardToken is StandardToken{\n    // those methods are called by the legacy contract\n    // and they must ensure msg.sender to be the contract address\n    function transferByLegacy(address from, address to, uint value) public;\n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;\n    function approveByLegacy(address from, address spender, uint value) public;\n}\n\ncontract TetherToken is Pausable, StandardToken, BlackList {\n\n    string public name;\n    string public symbol;\n    uint public decimals;\n    address public upgradedAddress;\n    bool public deprecated;\n\n    //  The contract can be initialized with a number of tokens\n    //  All the tokens are deposited to the owner address\n    //\n    // @param _balance Initial supply of the contract\n    // @param _name Token Name\n    // @param _symbol Token symbol\n    // @param _decimals Token decimals\n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {\n        _totalSupply = _initialSupply;\n        name = _name;\n        symbol = _symbol;\n        decimals = _decimals;\n        balances[owner] = _initialSupply;\n        deprecated = false;\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function transfer(address _to, uint _value) public whenNotPaused {\n        require(!isBlackListed[msg.sender]);\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);\n        } else {\n            return super.transfer(_to, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {\n        require(!isBlackListed[_from]);\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);\n        } else {\n            return super.transferFrom(_from, _to, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function balanceOf(address who) public constant returns (uint) {\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);\n        } else {\n            return super.balanceOf(who);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {\n        if (deprecated) {\n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);\n        } else {\n            return super.approve(_spender, _value);\n        }\n    }\n\n    // Forward ERC20 methods to upgraded contract if this one is deprecated\n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {\n        if (deprecated) {\n            return StandardToken(upgradedAddress).allowance(_owner, _spender);\n        } else {\n            return super.allowance(_owner, _spender);\n        }\n    }\n\n    // deprecate current contract in favour of a new one\n    function deprecate(address _upgradedAddress) public onlyOwner {\n        deprecated = true;\n        upgradedAddress = _upgradedAddress;\n        Deprecate(_upgradedAddress);\n    }\n\n    // deprecate current contract if favour of a new one\n    function totalSupply() public constant returns (uint) {\n        if (deprecated) {\n            return StandardToken(upgradedAddress).totalSupply();\n        } else {\n            return _totalSupply;\n        }\n    }\n\n    // Issue a new amount of tokens\n    // these tokens are deposited into the owner address\n    //\n    // @param _amount Number of tokens to be issued\n    function issue(uint amount) public onlyOwner {\n        require(_totalSupply + amount > _totalSupply);\n        require(balances[owner] + amount > balances[owner]);\n\n        balances[owner] += amount;\n        _totalSupply += amount;\n        Issue(amount);\n    }\n\n    // Redeem tokens.\n    // These tokens are withdrawn from the owner address\n    // if the balance must be enough to cover the redeem\n    // or the call will fail.\n    // @param _amount Number of tokens to be issued\n    function redeem(uint amount) public onlyOwner {\n        require(_totalSupply >= amount);\n        require(balances[owner] >= amount);\n\n        _totalSupply -= amount;\n        balances[owner] -= amount;\n        Redeem(amount);\n    }\n\n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {\n        // Ensure transparency by hardcoding limit beyond which fees can never be added\n        require(newBasisPoints < 20);\n        require(newMaxFee < 50);\n\n        basisPointsRate = newBasisPoints;\n        maximumFee = newMaxFee.mul(10**decimals);\n\n        Params(basisPointsRate, maximumFee);\n    }\n\n    // Called when new token are issued\n    event Issue(uint amount);\n\n    // Called when tokens are redeemed\n    event Redeem(uint amount);\n\n    // Called when contract is deprecated\n    event Deprecate(address newAddress);\n\n    // Called if contract ever adds fees\n    event Params(uint feeBasisPoints, uint maxFee);\n}",
  "sourceMap": "9661:4781:0:-;;;7338:5;7317:26;;-1:-1:-1;;;;;;7317:26:0;;;2974:31;;;;3011:26;;10156:289;5:2:-1;;;;30:1;27;20:12;5:2;10156:289:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1311:5;:18;;-1:-1:-1;;;;;;1311:18:0;1319:10;1311:18;;;;10261:29;;;10156:289;;;10300:12;;10156:289;;;;;;;;;10300:12;;:4;;:12;;;;:::i;:::-;-1:-1:-1;10322:16:0;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;10348:8:0;:20;-1:-1:-1;;10378:15:0;10387:5;;-1:-1:-1;;;;;10387:5:0;10378:15;;:8;:15;;;;;:32;10420:10;:18;;-1:-1:-1;;;;;;10420:18:0;;;9661:4781;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9661:4781:0;;;-1:-1:-1;9661:4781:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/TetherToken.sol",
  "type": "contract"
}
